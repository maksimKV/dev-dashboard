{
  "version": 3,
  "sources": ["src/app/integration/kanban.integration.spec.ts"],
  "sourcesContent": ["import { TestBed, fakeAsync, tick } from '@angular/core/testing';\r\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\r\nimport { KanbanBoard } from '../features/tasks/kanban-board/kanban-board';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { By } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  template: `<app-kanban-board></app-kanban-board>`,\r\n  standalone: true,\r\n  imports: [KanbanBoard]\r\n})\r\nclass TestHostComponent {}\r\n\r\ndescribe('Kanban Integration', () => {\r\n  let httpMock: HttpTestingController;\r\n  let fixture: any;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        HttpClientTestingModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        TestHostComponent\r\n      ],\r\n      providers: [AuthService]\r\n    }).compileComponents();\r\n    httpMock = TestBed.inject(HttpTestingController);\r\n    fixture = TestBed.createComponent(TestHostComponent);\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  afterEach(() => {\r\n    httpMock.verify();\r\n  });\r\n\r\n  it('should add, delete, and persist tasks', fakeAsync(() => {\r\n    // Simulate loading tasks - handle multiple requests that might be made\r\n    const allReqs = httpMock.match(req => req.url.endsWith('/user/data'));\r\n    if (allReqs.length > 0) {\r\n      allReqs[0].flush({ kanbanTasks: { todo: [], inProgress: [], done: [] }, markdownNote: '', focusTimer: {}, snippets: [], preferences: {} });\r\n    }\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    // Simulate adding a task\r\n    const kanban = fixture.debugElement.query(By.directive(KanbanBoard)).componentInstance;\r\n    kanban.newTaskTitle = 'Test Task';\r\n    kanban.addTask();\r\n    // Match all PUT requests to /user/kanban-tasks\r\n    let putReqs = httpMock.match(req => req.url.endsWith('/user/kanban-tasks'));\r\n    expect(putReqs.length).toBeGreaterThanOrEqual(1);\r\n    putReqs[0].flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(kanban.todo.length).toBe(1);\r\n    expect(kanban.todo[0].title).toBe('Test Task');\r\n\r\n    // Simulate deleting a task\r\n    kanban.deleteTask(kanban.todo, 0);\r\n    putReqs = httpMock.match(req => req.url.endsWith('/user/kanban-tasks'));\r\n    expect(putReqs.length).toBeGreaterThanOrEqual(1);\r\n    putReqs[0].flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(kanban.todo.length).toBe(0);\r\n  }));\r\n}); "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,QAAM,oBAAN,MAAM,kBAAiB;;AAAjB,wBAAiB,WAAA;MALtB,UAAU;QACT,UAAU;QACV,YAAY;QACZ,SAAS,CAAC,WAAW;OACtB;OACK,iBAAiB;AAEvB,aAAS,sBAAsB,MAAK;AAClC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS;YACP;YACA;YACA;YACA;;UAEF,WAAW,CAAC,WAAW;SACxB,EAAE,kBAAiB;AACpB,mBAAW,QAAQ,OAAO,qBAAqB;AAC/C,kBAAU,QAAQ,gBAAgB,iBAAiB;AACnD,gBAAQ,cAAa;MACvB,EAAC;AAED,gBAAU,MAAK;AACb,iBAAS,OAAM;MACjB,CAAC;AAED,SAAG,yCAAyC,UAAU,MAAK;AAEzD,cAAM,UAAU,SAAS,MAAM,SAAO,IAAI,IAAI,SAAS,YAAY,CAAC;AACpE,YAAI,QAAQ,SAAS,GAAG;AACtB,kBAAQ,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,CAAA,GAAI,YAAY,CAAA,GAAI,MAAM,CAAA,EAAE,GAAI,cAAc,IAAI,YAAY,CAAA,GAAI,UAAU,CAAA,GAAI,aAAa,CAAA,EAAE,CAAE;QAC3I;AACA,aAAI;AACJ,gBAAQ,cAAa;AAGrB,cAAM,SAAS,QAAQ,aAAa,MAAM,GAAG,UAAU,WAAW,CAAC,EAAE;AACrE,eAAO,eAAe;AACtB,eAAO,QAAO;AAEd,YAAI,UAAU,SAAS,MAAM,SAAO,IAAI,IAAI,SAAS,oBAAoB,CAAC;AAC1E,eAAO,QAAQ,MAAM,EAAE,uBAAuB,CAAC;AAC/C,gBAAQ,CAAC,EAAE,MAAM,CAAA,CAAE;AACnB,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,OAAO,KAAK,MAAM,EAAE,KAAK,CAAC;AACjC,eAAO,OAAO,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,WAAW;AAG7C,eAAO,WAAW,OAAO,MAAM,CAAC;AAChC,kBAAU,SAAS,MAAM,SAAO,IAAI,IAAI,SAAS,oBAAoB,CAAC;AACtE,eAAO,QAAQ,MAAM,EAAE,uBAAuB,CAAC;AAC/C,gBAAQ,CAAC,EAAE,MAAM,CAAA,CAAE;AACnB,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,OAAO,KAAK,MAAM,EAAE,KAAK,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC;;;",
  "names": ["init_testing"]
}
