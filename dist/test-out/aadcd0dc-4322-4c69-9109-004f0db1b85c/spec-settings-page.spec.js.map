{
  "version": 3,
  "sources": ["src/app/features/settings/settings-page/settings-page.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { SettingsPage } from './settings-page';\r\nimport { AuthService } from '../../../shared/services/auth.service';\r\nimport { of } from 'rxjs';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\ndescribe('SettingsPage', () => {\r\n  let component: SettingsPage;\r\n  let fixture: ComponentFixture<SettingsPage>;\r\n  let authServiceSpy: jasmine.SpyObj<AuthService>;\r\n\r\n  beforeEach(async () => {\r\n    authServiceSpy = jasmine.createSpyObj('AuthService', ['updatePreferences']);\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        SettingsPage,\r\n        CommonModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatInputModule,\r\n        MatSlideToggleModule,\r\n        FormsModule,\r\n        MatIconModule\r\n      ],\r\n      providers: [\r\n        { provide: AuthService, useValue: authServiceSpy }\r\n      ]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(SettingsPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should export data', () => {\r\n    component.isBrowser = true;\r\n    spyOn(document, 'createElement').and.returnValue({ click: () => {}, setAttribute: () => {} } as any);\r\n    spyOn(URL, 'createObjectURL').and.returnValue('blob:url');\r\n    spyOn(URL, 'revokeObjectURL');\r\n    spyOn(localStorage, 'getItem').and.callFake((key: string) => {\r\n      if (key === 'kanban-tasks') return '{\"todo\":[],\"inProgress\":[],\"done\":[]}';\r\n      if (key === 'focus-timer') return '{}';\r\n      if (key === 'snippets') return '[]';\r\n      if (key === 'markdown-note') return 'note';\r\n      return null;\r\n    });\r\n    component.exportData();\r\n    expect(URL.createObjectURL).toHaveBeenCalled();\r\n    expect(URL.revokeObjectURL).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should clear all data', () => {\r\n    component.isBrowser = true;\r\n    spyOn(window, 'confirm').and.returnValue(true);\r\n    spyOn(localStorage, 'removeItem');\r\n    component.clearAllData();\r\n    expect(localStorage.removeItem).toHaveBeenCalledWith('kanban-tasks');\r\n    expect(localStorage.removeItem).toHaveBeenCalledWith('focus-timer');\r\n    expect(localStorage.removeItem).toHaveBeenCalledWith('markdown-note');\r\n    expect(localStorage.removeItem).toHaveBeenCalledWith('snippets');\r\n  });\r\n\r\n  it('should save and load productivity prefs', () => {\r\n    component.isBrowser = true;\r\n    spyOn(localStorage, 'setItem');\r\n    spyOn(localStorage, 'getItem').and.returnValue(null);\r\n    spyOn(component, 'saveAllPrefsToBackend');\r\n    component.saveProductivityPrefs();\r\n    expect(localStorage.setItem).toHaveBeenCalled();\r\n    component.loadProductivityPrefs();\r\n    expect(localStorage.getItem).toHaveBeenCalled();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAS,gBAAgB,MAAK;AAC5B,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,yBAAiB,QAAQ,aAAa,eAAe,CAAC,mBAAmB,CAAC;AAC1E,cAAM,QAAQ,uBAAuB;UACnC,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;;UAEF,WAAW;YACT,EAAE,SAAS,aAAa,UAAU,eAAc;;SAEnD,EAAE,kBAAiB;AAEpB,kBAAU,QAAQ,gBAAgB,YAAY;AAC9C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;AAED,SAAG,sBAAsB,MAAK;AAC5B,kBAAU,YAAY;AACtB,cAAM,UAAU,eAAe,EAAE,IAAI,YAAY,EAAE,OAAO,MAAK;QAAE,GAAG,cAAc,MAAK;QAAE,EAAC,CAAS;AACnG,cAAM,KAAK,iBAAiB,EAAE,IAAI,YAAY,UAAU;AACxD,cAAM,KAAK,iBAAiB;AAC5B,cAAM,cAAc,SAAS,EAAE,IAAI,SAAS,CAAC,QAAe;AAC1D,cAAI,QAAQ;AAAgB,mBAAO;AACnC,cAAI,QAAQ;AAAe,mBAAO;AAClC,cAAI,QAAQ;AAAY,mBAAO;AAC/B,cAAI,QAAQ;AAAiB,mBAAO;AACpC,iBAAO;QACT,CAAC;AACD,kBAAU,WAAU;AACpB,eAAO,IAAI,eAAe,EAAE,iBAAgB;AAC5C,eAAO,IAAI,eAAe,EAAE,iBAAgB;MAC9C,CAAC;AAED,SAAG,yBAAyB,MAAK;AAC/B,kBAAU,YAAY;AACtB,cAAM,QAAQ,SAAS,EAAE,IAAI,YAAY,IAAI;AAC7C,cAAM,cAAc,YAAY;AAChC,kBAAU,aAAY;AACtB,eAAO,aAAa,UAAU,EAAE,qBAAqB,cAAc;AACnE,eAAO,aAAa,UAAU,EAAE,qBAAqB,aAAa;AAClE,eAAO,aAAa,UAAU,EAAE,qBAAqB,eAAe;AACpE,eAAO,aAAa,UAAU,EAAE,qBAAqB,UAAU;MACjE,CAAC;AAED,SAAG,2CAA2C,MAAK;AACjD,kBAAU,YAAY;AACtB,cAAM,cAAc,SAAS;AAC7B,cAAM,cAAc,SAAS,EAAE,IAAI,YAAY,IAAI;AACnD,cAAM,WAAW,uBAAuB;AACxC,kBAAU,sBAAqB;AAC/B,eAAO,aAAa,OAAO,EAAE,iBAAgB;AAC7C,kBAAU,sBAAqB;AAC/B,eAAO,aAAa,OAAO,EAAE,iBAAgB;MAC/C,CAAC;IACH,CAAC;;;",
  "names": []
}
