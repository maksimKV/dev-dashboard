{
  "version": 3,
  "sources": ["src/app/integration/snippets.integration.spec.ts"],
  "sourcesContent": ["import { TestBed, fakeAsync, tick } from '@angular/core/testing';\r\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\r\nimport { SnippetsPage } from '../features/snippets/snippets-page/snippets-page';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { By } from '@angular/platform-browser';\r\nimport { HighlightModule, HIGHLIGHT_OPTIONS, HighlightJS } from 'ngx-highlightjs';\r\n\r\n@Component({\r\n  template: `<app-snippets-page></app-snippets-page>`,\r\n  standalone: true,\r\n  imports: [SnippetsPage]\r\n})\r\nclass TestHostComponent {}\r\n\r\ndescribe('Snippets Integration', () => {\r\n  let httpMock: HttpTestingController;\r\n  let fixture: any;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        HttpClientTestingModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        HighlightModule,\r\n        TestHostComponent\r\n      ],\r\n      providers: [\r\n        AuthService,\r\n        { provide: HIGHLIGHT_OPTIONS, useValue: { coreLibraryLoader: () => Promise.resolve({}), languages: {} } },\r\n        { provide: HighlightJS, useValue: { highlight: () => ({ value: '', language: '' }), highlightAuto: () => ({ value: '', language: '' }) } }\r\n      ]\r\n    }).compileComponents();\r\n    httpMock = TestBed.inject(HttpTestingController);\r\n    fixture = TestBed.createComponent(TestHostComponent);\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  afterEach(() => {\r\n    httpMock.verify();\r\n  });\r\n\r\n  it('should add, edit, delete, and persist snippets', fakeAsync(() => {\r\n    // Simulate loading snippets\r\n    const getReq = httpMock.expectOne(req => req.url.endsWith('/user/data'));\r\n    getReq.flush({ snippets: [], kanbanTasks: {}, markdownNote: '', focusTimer: {}, preferences: {} });\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    // Simulate adding a snippet\r\n    const snippetsPage = fixture.debugElement.query(By.directive(SnippetsPage)).componentInstance;\r\n    snippetsPage.newSnippet = { title: 'Test Snippet', code: 'console.log(1);', language: 'javascript', tags: [] };\r\n    snippetsPage.addOrUpdateSnippet();\r\n    const putReq = httpMock.expectOne(req => req.url.endsWith('/user/snippets'));\r\n    expect(putReq.request.method).toBe('PUT');\r\n    putReq.flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(snippetsPage.snippets.length).toBe(1);\r\n    expect(snippetsPage.snippets[0].title).toBe('Test Snippet');\r\n\r\n    // Simulate editing a snippet\r\n    snippetsPage.editSnippet(snippetsPage.snippets[0]);\r\n    snippetsPage.newSnippet.code = 'console.log(2);';\r\n    snippetsPage.addOrUpdateSnippet();\r\n    const putReq2 = httpMock.expectOne(req => req.url.endsWith('/user/snippets'));\r\n    expect(putReq2.request.method).toBe('PUT');\r\n    putReq2.flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(snippetsPage.snippets[0].code).toBe('console.log(2);');\r\n\r\n    // Simulate deleting a snippet\r\n    snippetsPage.deleteSnippet(snippetsPage.snippets[0].id);\r\n    const putReq3 = httpMock.expectOne(req => req.url.endsWith('/user/snippets'));\r\n    expect(putReq3.request.method).toBe('PUT');\r\n    putReq3.flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(snippetsPage.snippets.length).toBe(0);\r\n  }));\r\n}); "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,QAAM,oBAAN,MAAM,kBAAiB;;AAAjB,wBAAiB,WAAA;MALtB,UAAU;QACT,UAAU;QACV,YAAY;QACZ,SAAS,CAAC,YAAY;OACvB;OACK,iBAAiB;AAEvB,aAAS,wBAAwB,MAAK;AACpC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS;YACP;YACA;YACA;YACA;YACA;;UAEF,WAAW;YACT;YACA,EAAE,SAAS,mBAAmB,UAAU,EAAE,mBAAmB,MAAM,QAAQ,QAAQ,CAAA,CAAE,GAAG,WAAW,CAAA,EAAE,EAAE;YACvG,EAAE,SAAS,aAAa,UAAU,EAAE,WAAW,OAAO,EAAE,OAAO,IAAI,UAAU,GAAE,IAAK,eAAe,OAAO,EAAE,OAAO,IAAI,UAAU,GAAE,GAAG,EAAE;;SAE3I,EAAE,kBAAiB;AACpB,mBAAW,QAAQ,OAAO,qBAAqB;AAC/C,kBAAU,QAAQ,gBAAgB,iBAAiB;AACnD,gBAAQ,cAAa;MACvB,EAAC;AAED,gBAAU,MAAK;AACb,iBAAS,OAAM;MACjB,CAAC;AAED,SAAG,kDAAkD,UAAU,MAAK;AAElE,cAAM,SAAS,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,YAAY,CAAC;AACvE,eAAO,MAAM,EAAE,UAAU,CAAA,GAAI,aAAa,CAAA,GAAI,cAAc,IAAI,YAAY,CAAA,GAAI,aAAa,CAAA,EAAE,CAAE;AACjG,aAAI;AACJ,gBAAQ,cAAa;AAGrB,cAAM,eAAe,QAAQ,aAAa,MAAM,GAAG,UAAU,YAAY,CAAC,EAAE;AAC5E,qBAAa,aAAa,EAAE,OAAO,gBAAgB,MAAM,mBAAmB,UAAU,cAAc,MAAM,CAAA,EAAE;AAC5G,qBAAa,mBAAkB;AAC/B,cAAM,SAAS,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,gBAAgB,CAAC;AAC3E,eAAO,OAAO,QAAQ,MAAM,EAAE,KAAK,KAAK;AACxC,eAAO,MAAM,CAAA,CAAE;AACf,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,aAAa,SAAS,MAAM,EAAE,KAAK,CAAC;AAC3C,eAAO,aAAa,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,cAAc;AAG1D,qBAAa,YAAY,aAAa,SAAS,CAAC,CAAC;AACjD,qBAAa,WAAW,OAAO;AAC/B,qBAAa,mBAAkB;AAC/B,cAAM,UAAU,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,gBAAgB,CAAC;AAC5E,eAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,KAAK;AACzC,gBAAQ,MAAM,CAAA,CAAE;AAChB,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,aAAa,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,iBAAiB;AAG5D,qBAAa,cAAc,aAAa,SAAS,CAAC,EAAE,EAAE;AACtD,cAAM,UAAU,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,gBAAgB,CAAC;AAC5E,eAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,KAAK;AACzC,gBAAQ,MAAM,CAAA,CAAE;AAChB,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,aAAa,SAAS,MAAM,EAAE,KAAK,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC;;;",
  "names": ["init_testing"]
}
