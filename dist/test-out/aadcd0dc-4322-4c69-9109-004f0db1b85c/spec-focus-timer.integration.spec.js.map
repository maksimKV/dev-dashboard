{
  "version": 3,
  "sources": ["src/app/integration/focus-timer.integration.spec.ts"],
  "sourcesContent": ["import { TestBed, fakeAsync, tick } from '@angular/core/testing';\r\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\r\nimport { FocusTimer } from '../features/timer/focus-timer/focus-timer';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { By } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  template: `<app-focus-timer></app-focus-timer>`,\r\n  standalone: true,\r\n  imports: [FocusTimer]\r\n})\r\nclass TestHostComponent {}\r\n\r\ndescribe('FocusTimer Integration', () => {\r\n  let httpMock: HttpTestingController;\r\n  let fixture: any;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        HttpClientTestingModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        TestHostComponent\r\n      ],\r\n      providers: [AuthService]\r\n    }).compileComponents();\r\n    httpMock = TestBed.inject(HttpTestingController);\r\n    fixture = TestBed.createComponent(TestHostComponent);\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  afterEach(() => {\r\n    httpMock.verify();\r\n  });\r\n\r\n  it('should load, update, and persist timer state', fakeAsync(() => {\r\n    // Simulate loading timer state\r\n    const getReq = httpMock.expectOne(req => req.url.endsWith('/user/data'));\r\n    getReq.flush({ focusTimer: { workDuration: 25, breakDuration: 5, timeLeft: 1500, isRunning: false, isWork: true, completedFocusSessions: 0, totalWorkSeconds: 0 }, kanbanTasks: {}, markdownNote: '', snippets: [], preferences: {} });\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    // Simulate updating timer durations\r\n    const timer = fixture.debugElement.query(By.directive(FocusTimer)).componentInstance;\r\n    timer.workDuration = 30;\r\n    timer.breakDuration = 10;\r\n    timer.updateDurations();\r\n    const putReq = httpMock.expectOne(req => req.url.endsWith('/user/focus-timer'));\r\n    expect(putReq.request.method).toBe('PUT');\r\n    putReq.flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(timer.workDuration).toBe(30);\r\n    expect(timer.breakDuration).toBe(10);\r\n\r\n    // Simulate reset\r\n    timer.reset();\r\n    const putReq2 = httpMock.expectOne(req => req.url.endsWith('/user/focus-timer'));\r\n    expect(putReq2.request.method).toBe('PUT');\r\n    putReq2.flush({});\r\n    tick();\r\n    fixture.detectChanges();\r\n    expect(timer.timeLeft).toBe(30 * 60);\r\n  }));\r\n}); "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,QAAM,oBAAN,MAAM,kBAAiB;;AAAjB,wBAAiB,WAAA;MALtB,UAAU;QACT,UAAU;QACV,YAAY;QACZ,SAAS,CAAC,UAAU;OACrB;OACK,iBAAiB;AAEvB,aAAS,0BAA0B,MAAK;AACtC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS;YACP;YACA;YACA;YACA;;UAEF,WAAW,CAAC,WAAW;SACxB,EAAE,kBAAiB;AACpB,mBAAW,QAAQ,OAAO,qBAAqB;AAC/C,kBAAU,QAAQ,gBAAgB,iBAAiB;AACnD,gBAAQ,cAAa;MACvB,EAAC;AAED,gBAAU,MAAK;AACb,iBAAS,OAAM;MACjB,CAAC;AAED,SAAG,gDAAgD,UAAU,MAAK;AAEhE,cAAM,SAAS,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,YAAY,CAAC;AACvE,eAAO,MAAM,EAAE,YAAY,EAAE,cAAc,IAAI,eAAe,GAAG,UAAU,MAAM,WAAW,OAAO,QAAQ,MAAM,wBAAwB,GAAG,kBAAkB,EAAC,GAAI,aAAa,CAAA,GAAI,cAAc,IAAI,UAAU,CAAA,GAAI,aAAa,CAAA,EAAE,CAAE;AACrO,aAAI;AACJ,gBAAQ,cAAa;AAGrB,cAAM,QAAQ,QAAQ,aAAa,MAAM,GAAG,UAAU,UAAU,CAAC,EAAE;AACnE,cAAM,eAAe;AACrB,cAAM,gBAAgB;AACtB,cAAM,gBAAe;AACrB,cAAM,SAAS,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,mBAAmB,CAAC;AAC9E,eAAO,OAAO,QAAQ,MAAM,EAAE,KAAK,KAAK;AACxC,eAAO,MAAM,CAAA,CAAE;AACf,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,MAAM,YAAY,EAAE,KAAK,EAAE;AAClC,eAAO,MAAM,aAAa,EAAE,KAAK,EAAE;AAGnC,cAAM,MAAK;AACX,cAAM,UAAU,SAAS,UAAU,SAAO,IAAI,IAAI,SAAS,mBAAmB,CAAC;AAC/E,eAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,KAAK;AACzC,gBAAQ,MAAM,CAAA,CAAE;AAChB,aAAI;AACJ,gBAAQ,cAAa;AACrB,eAAO,MAAM,QAAQ,EAAE,KAAK,KAAK,EAAE;MACrC,CAAC,CAAC;IACJ,CAAC;;;",
  "names": ["init_testing"]
}
