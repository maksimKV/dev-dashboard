{"version":3,"sources":["node_modules/@angular/material/fesm2022/card.mjs","node_modules/@angular/cdk/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/module-Ce6F7TNm.mjs","node_modules/@angular/material/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/internal-form-field-D5iFxU6d.mjs","node_modules/@angular/material/fesm2022/slide-toggle.mjs","angular:jit:template:src\\app\\features\\settings\\settings-page\\settings-page.html","angular:jit:style:src\\app\\features\\settings\\settings-page\\settings-page.scss","src/app/features/settings/settings-page/settings-page.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive, NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n    appearance;\n    constructor() {\n        const config = inject(MAT_CARD_CONFIG, { optional: true });\n        this.appearance = config?.appearance || 'raised';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCard, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCard, isStandalone: true, selector: \"mat-card\", inputs: { appearance: \"appearance\" }, host: { properties: { \"class.mat-mdc-card-outlined\": \"appearance === \\\"outlined\\\"\", \"class.mdc-card--outlined\": \"appearance === \\\"outlined\\\"\", \"class.mat-mdc-card-filled\": \"appearance === \\\"filled\\\"\", \"class.mdc-card--filled\": \"appearance === \\\"filled\\\"\" }, classAttribute: \"mat-mdc-card mdc-card\" }, exportAs: [\"matCard\"], ngImport: i0, template: \"<ng-content></ng-content>\\n\", styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCard, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card', host: {\n                        'class': 'mat-mdc-card mdc-card',\n                        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n                        '[class.mdc-card--outlined]': 'appearance === \"outlined\"',\n                        '[class.mat-mdc-card-filled]': 'appearance === \"filled\"',\n                        '[class.mdc-card--filled]': 'appearance === \"filled\"',\n                    }, exportAs: 'matCard', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content></ng-content>\\n\", styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { appearance: [{\n                type: Input\n            }] } });\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardTitle, isStandalone: true, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\", host: { classAttribute: \"mat-mdc-card-title\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                    host: { 'class': 'mat-mdc-card-title' },\n                }]\n        }] });\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitleGroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardTitleGroup, isStandalone: true, selector: \"mat-card-title-group\", host: { classAttribute: \"mat-mdc-card-title-group\" }, ngImport: i0, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-title-group', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-mdc-card-title-group' }, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardContent, isStandalone: true, selector: \"mat-card-content\", host: { classAttribute: \"mat-mdc-card-content\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-mdc-card-content' },\n                }]\n        }] });\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSubtitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardSubtitle, isStandalone: true, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\", host: { classAttribute: \"mat-mdc-card-subtitle\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                    host: { 'class': 'mat-mdc-card-subtitle' },\n                }]\n        }] });\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n    // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n    // as to not conflict with the native `align` attribute.\n    /** Position of the actions inside the card. */\n    align = 'start';\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardActions, isStandalone: true, selector: \"mat-card-actions\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-card-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-card-actions mdc-card__actions\" }, exportAs: [\"matCardActions\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-mdc-card-actions mdc-card__actions',\n                        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardHeader, isStandalone: true, selector: \"mat-card-header\", host: { classAttribute: \"mat-mdc-card-header\" }, ngImport: i0, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-mdc-card-header' }, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardFooter, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardFooter, isStandalone: true, selector: \"mat-card-footer\", host: { classAttribute: \"mat-mdc-card-footer\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardFooter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-mdc-card-footer' },\n                }]\n        }] });\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardImage, isStandalone: true, selector: \"[mat-card-image], [matCardImage]\", host: { classAttribute: \"mat-mdc-card-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-mdc-card-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSmImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardSmImage, isStandalone: true, selector: \"[mat-card-sm-image], [matCardImageSmall]\", host: { classAttribute: \"mat-mdc-card-sm-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSmImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-mdc-card-sm-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardMdImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardMdImage, isStandalone: true, selector: \"[mat-card-md-image], [matCardImageMedium]\", host: { classAttribute: \"mat-mdc-card-md-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardMdImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-mdc-card-md-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardLgImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardLgImage, isStandalone: true, selector: \"[mat-card-lg-image], [matCardImageLarge]\", host: { classAttribute: \"mat-mdc-card-lg-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardLgImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-mdc-card-lg-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardXlImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardXlImage, isStandalone: true, selector: \"[mat-card-xl-image], [matCardImageXLarge]\", host: { classAttribute: \"mat-mdc-card-xl-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardXlImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-mdc-card-xl-image mdc-card__media' },\n                }]\n        }] });\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardAvatar, isStandalone: true, selector: \"[mat-card-avatar], [matCardAvatar]\", host: { classAttribute: \"mat-mdc-card-avatar\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-mdc-card-avatar' },\n                }]\n        }] });\n\nconst CARD_DIRECTIVES = [\n    MatCard,\n    MatCardActions,\n    MatCardAvatar,\n    MatCardContent,\n    MatCardFooter,\n    MatCardHeader,\n    MatCardImage,\n    MatCardLgImage,\n    MatCardMdImage,\n    MatCardSmImage,\n    MatCardSubtitle,\n    MatCardTitle,\n    MatCardTitleGroup,\n    MatCardXlImage,\n];\nclass MatCardModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, imports: [MatCommonModule, MatCard,\n            MatCardActions,\n            MatCardAvatar,\n            MatCardContent,\n            MatCardFooter,\n            MatCardHeader,\n            MatCardImage,\n            MatCardLgImage,\n            MatCardMdImage,\n            MatCardSmImage,\n            MatCardSubtitle,\n            MatCardTitle,\n            MatCardTitleGroup,\n            MatCardXlImage], exports: [MatCard,\n            MatCardActions,\n            MatCardAvatar,\n            MatCardContent,\n            MatCardFooter,\n            MatCardHeader,\n            MatCardImage,\n            MatCardLgImage,\n            MatCardMdImage,\n            MatCardSmImage,\n            MatCardSubtitle,\n            MatCardTitle,\n            MatCardTitleGroup,\n            MatCardXlImage, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, ...CARD_DIRECTIVES],\n                    exports: [CARD_DIRECTIVES, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, NgZone, Renderer2, DOCUMENT, ChangeDetectorRef, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, InjectionToken, TemplateRef, Injectable, signal, EventEmitter, NgModule } from '@angular/core';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from './portal.mjs';\nexport { CdkPortal as ɵɵCdkPortal, PortalHostDirective as ɵɵPortalHostDirective, TemplatePortalDirective as ɵɵTemplatePortalDirective } from './portal.mjs';\nimport { F as FocusTrapFactory, I as InteractivityChecker, A as A11yModule } from './a11y-module-DHa4AVFz.mjs';\nimport { F as FocusMonitor } from './focus-monitor-DLjkiju1.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { Subject, defer } from 'rxjs';\nimport { g as ESCAPE } from './keycodes-CpHkExLC.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { startWith } from 'rxjs/operators';\nimport { s as createBlockScrollStrategy, O as OverlayContainer, c as createOverlayRef, i as OverlayConfig, f as createGlobalPositionStrategy, d as OverlayRef, t as OverlayModule } from './overlay-module-Bd2UplUU.mjs';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport './style-loader-B2sGQXxD.mjs';\nimport './private.mjs';\nimport './breakpoints-observer-QutrMj4x.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './observers.mjs';\nimport './element-x4z00URv.mjs';\nimport './fake-event-detection-DWOdFTFz.mjs';\nimport './passive-listeners-esHZRgIN.mjs';\nimport '@angular/common';\nimport './test-environment-CT0XxPyp.mjs';\nimport './css-pixel-value-C_HEqLhI.mjs';\nimport './scrolling.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport './bidi.mjs';\nimport './recycle-view-repeater-strategy-SfuyU210.mjs';\nimport './data-source-D34wiQZj.mjs';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     */\n    viewContainerRef;\n    /**\n     * Injector used for the instantiation of the component to be attached. If provided,\n     * takes precedence over the injector indirectly provided by `ViewContainerRef`.\n     */\n    injector;\n    /** ID for the dialog. If omitted, a unique one will be generated. */\n    id;\n    /** The ARIA role of the dialog element. */\n    role = 'dialog';\n    /** Optional CSS class or classes applied to the overlay panel. */\n    panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    hasBackdrop = true;\n    /** Optional CSS class or classes applied to the overlay backdrop. */\n    backdropClass = '';\n    /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n    disableClose = false;\n    /** Function used to determine whether the dialog is allowed to close. */\n    closePredicate;\n    /** Width of the dialog. */\n    width = '';\n    /** Height of the dialog. */\n    height = '';\n    /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n    minWidth;\n    /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n    minHeight;\n    /** Max-width of the dialog. If a number is provided, assumes pixel units. */\n    maxWidth;\n    /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n    maxHeight;\n    /** Strategy to use when positioning the dialog. Defaults to centering it on the page. */\n    positionStrategy;\n    /** Data being injected into the child component. */\n    data = null;\n    /** Layout direction for the dialog's content. */\n    direction;\n    /** ID of the element that describes the dialog. */\n    ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    ariaLabelledBy = null;\n    /** Dialog label applied via `aria-label` */\n    ariaLabel = null;\n    /**\n     * Whether this is a modal dialog. Used to set the `aria-modal` attribute. Off by default,\n     * because it can interfere with other overlay-based components (e.g. `mat-select`) and because\n     * it is redundant since the dialog marks all outside content as `aria-hidden` anyway.\n     */\n    ariaModal = false;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the previously-focused element upon closing.\n     * Has the following behavior based on the type that is passed in:\n     * - `boolean` - when true, will return focus to the element that was focused before the dialog\n     *    was opened, otherwise won't restore focus at all.\n     * - `string` - focus will be restored to the first element that matches the CSS selector.\n     * - `HTMLElement` - focus will be restored to the specific element.\n     */\n    restoreFocus = true;\n    /**\n     * Scroll strategy to be used for the dialog. This determines how\n     * the dialog responds to scrolling underneath the panel element.\n     */\n    scrollStrategy;\n    /**\n     * Whether the dialog should close when the user navigates backwards or forwards through browser\n     * history. This does not apply to navigation via anchor element unless using URL-hash based\n     * routing (`HashLocationStrategy` in the Angular router).\n     */\n    closeOnNavigation = true;\n    /**\n     * Whether the dialog should close when the dialog service is destroyed. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead.\n     */\n    closeOnDestroy = true;\n    /**\n     * Whether the dialog should close when the underlying overlay is detached. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n     * external detachment can happen as a result of a scroll strategy triggering it or when the\n     * browser location changes.\n     */\n    closeOnOverlayDetachments = true;\n    /**\n     * Whether the built-in overlay animations should be disabled.\n     */\n    disableAnimations = false;\n    /**\n     * Providers that will be exposed to the contents of the dialog. Can also\n     * be provided as a function in order to generate the providers lazily.\n     */\n    providers;\n    /**\n     * Component into which the dialog content will be rendered. Defaults to `CdkDialogContainer`.\n     * A configuration object can be passed in to customize the providers that will be exposed\n     * to the dialog container.\n     */\n    container;\n    /**\n     * Context that will be passed to template-based dialogs.\n     * A function can be passed in to resolve the context lazily.\n     */\n    templateContext;\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    _elementRef = inject(ElementRef);\n    _focusTrapFactory = inject(FocusTrapFactory);\n    _config;\n    _interactivityChecker = inject(InteractivityChecker);\n    _ngZone = inject(NgZone);\n    _focusMonitor = inject(FocusMonitor);\n    _renderer = inject(Renderer2);\n    _platform = inject(Platform);\n    _document = inject(DOCUMENT, { optional: true });\n    /** The portal outlet inside of this container into which the dialog content will be loaded. */\n    _portalOutlet;\n    /** The class that traps and manages focus within the dialog. */\n    _focusTrap = null;\n    /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n    _elementFocusedBeforeDialogWasOpened = null;\n    /**\n     * Type of interaction that led to the dialog being closed. This is used to determine\n     * whether the focus style will be applied when returning focus to its original location\n     * after the dialog is closed.\n     */\n    _closeInteractionType = null;\n    /**\n     * Queue of the IDs of the dialog's label element, based on their definition order. The first\n     * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n     * where there are two or more titles in the DOM at a time and the first one is destroyed while\n     * the rest are present.\n     */\n    _ariaLabelledByQueue = [];\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _injector = inject(Injector);\n    _isDestroyed = false;\n    constructor() {\n        super();\n        // Callback is primarily for some internal tests\n        // that were instantiating the dialog container manually.\n        this._config = (inject(DialogConfig, { optional: true }) || new DialogConfig());\n        if (this._config.ariaLabelledBy) {\n            this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n        }\n    }\n    _addAriaLabelledBy(id) {\n        this._ariaLabelledByQueue.push(id);\n        this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n        const index = this._ariaLabelledByQueue.indexOf(id);\n        if (index > -1) {\n            this._ariaLabelledByQueue.splice(index, 1);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._isDestroyed = true;\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachDomPortal(portal);\n        this._contentAttached();\n        return result;\n    };\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    deregisterBlur();\n                    deregisterMousedown();\n                    element.removeAttribute('tabindex');\n                };\n                const deregisterBlur = this._renderer.listen(element, 'blur', callback);\n                const deregisterMousedown = this._renderer.listen(element, 'mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus(options) {\n        if (this._isDestroyed) {\n            return;\n        }\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait until after the next render.\n        afterNextRender(() => {\n            const element = this._elementRef.nativeElement;\n            switch (this._config.autoFocus) {\n                case false:\n                case 'dialog':\n                    // Ensure that focus is on the dialog container. It's possible that a different\n                    // component tried to move focus while the open animation was running. See:\n                    // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                    // if the focus isn't inside the dialog already, because it's possible that the consumer\n                    // turned off `autoFocus` in order to move focus themselves.\n                    if (!this._containsFocus()) {\n                        element.focus(options);\n                    }\n                    break;\n                case true:\n                case 'first-tabbable':\n                    const focusedSuccessfully = this._focusTrap?.focusInitialElement(options);\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer(options);\n                    }\n                    break;\n                case 'first-heading':\n                    this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]', options);\n                    break;\n                default:\n                    this._focusByCssSelector(this._config.autoFocus, options);\n                    break;\n            }\n        }, { injector: this._injector });\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer(options) {\n        // Note that there is no focus method when rendering on the server.\n        this._elementRef.nativeElement.focus?.(options);\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            // Save the previously focused element. This element will be re-focused\n            // when the dialog closes.\n            if (this._document) {\n                this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkDialogContainer, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkDialogContainer, isStandalone: true, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, imports: [CdkPortalOutlet], host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    overlayRef;\n    config;\n    /**\n     * Instance of component opened into the dialog. Will be\n     * null when the dialog is opened using a `TemplateRef`.\n     */\n    componentInstance;\n    /**\n     * `ComponentRef` of the component opened into the dialog. Will be\n     * null when the dialog is opened using a `TemplateRef`.\n     */\n    componentRef;\n    /** Instance of the container that is rendering out the dialog content. */\n    containerInstance;\n    /** Whether the user is allowed to close the dialog. */\n    disableClose;\n    /** Emits when the dialog has been closed. */\n    closed = new Subject();\n    /** Emits when the backdrop of the dialog is clicked. */\n    backdropClick;\n    /** Emits when on keyboard events within the dialog. */\n    keydownEvents;\n    /** Emits on pointer events that happen outside of the dialog. */\n    outsidePointerEvents;\n    /** Unique ID for the dialog. */\n    id;\n    /** Subscription to external detachments of the dialog. */\n    _detachSubscription;\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose && this._canClose()) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n            else {\n                // Clicking on the backdrop will move focus out of dialog.\n                // Recapture it if closing via the backdrop is disabled.\n                this.containerInstance._recaptureFocus?.();\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this._canClose(result)) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Whether the dialog is allowed to close. */\n    _canClose(result) {\n        const config = this.config;\n        return (!!this.containerInstance &&\n            (!config.closePredicate || config.closePredicate(result, config, this.componentInstance)));\n    }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createBlockScrollStrategy(injector);\n    },\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n\nfunction getDirectionality(value) {\n    const valueSignal = signal(value);\n    const change = new EventEmitter();\n    return {\n        valueSignal,\n        get value() {\n            return valueSignal();\n        },\n        change,\n        ngOnDestroy() {\n            change.complete();\n        },\n    };\n}\nclass Dialog {\n    _injector = inject(Injector);\n    _defaultOptions = inject(DEFAULT_DIALOG_CONFIG, { optional: true });\n    _parentDialog = inject(Dialog, { optional: true, skipSelf: true });\n    _overlayContainer = inject(OverlayContainer);\n    _idGenerator = inject(_IdGenerator);\n    _openDialogsAtThisLevel = [];\n    _afterAllClosedAtThisLevel = new Subject();\n    _afterOpenedAtThisLevel = new Subject();\n    _ariaHiddenElements = new Map();\n    _scrollStrategy = inject(DIALOG_SCROLL_STRATEGY);\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     */\n    afterAllClosed = defer(() => this.openDialogs.length\n        ? this._getAfterAllClosed()\n        : this._getAfterAllClosed().pipe(startWith(undefined)));\n    constructor() { }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || this._idGenerator.getId('cdk-dialog-');\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = createOverlayRef(this._injector, overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                createGlobalPositionStrategy().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n            disableAnimations: config.disableAnimations,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }));\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentRef = contentRef;\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: getDirectionality(config.direction),\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dialog, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dialog, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\nclass DialogModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: DialogModule, imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer], exports: [\n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule,\n            CdkDialogContainer] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: DialogModule, providers: [Dialog], imports: [OverlayModule, PortalModule, A11yModule, \n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    providers: [Dialog],\n                }]\n        }] });\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError, CdkPortalOutlet as ɵɵCdkPortalOutlet };\n\n","import { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { createBlockScrollStrategy, createGlobalPositionStrategy, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, inject, Injector, Injectable, ElementRef, Directive, Input, NgModule } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     */\n    viewContainerRef;\n    /**\n     * Injector used for the instantiation of the component to be attached. If provided,\n     * takes precedence over the injector indirectly provided by `ViewContainerRef`.\n     */\n    injector;\n    /** ID for the dialog. If omitted, a unique one will be generated. */\n    id;\n    /** The ARIA role of the dialog element. */\n    role = 'dialog';\n    /** Custom class for the overlay pane. */\n    panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    hasBackdrop = true;\n    /** Custom class for the backdrop. */\n    backdropClass = '';\n    /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n    disableClose = false;\n    /** Function used to determine whether the dialog is allowed to close. */\n    closePredicate;\n    /** Width of the dialog. */\n    width = '';\n    /** Height of the dialog. */\n    height = '';\n    /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n    minWidth;\n    /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n    minHeight;\n    /** Max-width of the dialog. If a number is provided, assumes pixel units. */\n    maxWidth;\n    /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n    maxHeight;\n    /** Position overrides. */\n    position;\n    /** Data being injected into the child component. */\n    data = null;\n    /** Layout direction for the dialog's content. */\n    direction;\n    /** ID of the element that describes the dialog. */\n    ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    ariaLabelledBy = null;\n    /** Aria label to assign to the dialog element. */\n    ariaLabel = null;\n    /**\n     * Whether this is a modal dialog. Used to set the `aria-modal` attribute. Off by default,\n     * because it can interfere with other overlay-based components (e.g. `mat-select`) and because\n     * it is redundant since the dialog marks all outside content as `aria-hidden` anyway.\n     */\n    ariaModal = false;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    restoreFocus = true;\n    /** Whether to wait for the opening animation to finish before trapping focus. */\n    delayFocusTrap = true;\n    /** Scroll strategy to be used for the dialog. */\n    scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    closeOnNavigation = true;\n    /**\n     * Duration of the enter animation in ms.\n     * Should be a number, string type is deprecated.\n     * @breaking-change 17.0.0 Remove string signature.\n     */\n    enterAnimationDuration;\n    /**\n     * Duration of the exit animation in ms.\n     * Should be a number, string type is deprecated.\n     * @breaking-change 17.0.0 Remove string signature.\n     */\n    exitAnimationDuration;\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n    /** Emits when an animation state changes. */\n    _animationStateChanged = new EventEmitter();\n    /** Whether animations are enabled. */\n    _animationsEnabled = !_animationsDisabled();\n    /** Number of actions projected in the dialog. */\n    _actionSectionCount = 0;\n    /** Host element of the dialog container component. */\n    _hostElement = this._elementRef.nativeElement;\n    /** Duration of the dialog open animation. */\n    _enterAnimationDuration = this._animationsEnabled\n        ? (parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION)\n        : 0;\n    /** Duration of the dialog close animation. */\n    _exitAnimationDuration = this._animationsEnabled\n        ? (parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION)\n        : 0;\n    /** Current timer for dialog animations. */\n    _animationTimer = null;\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._enterAnimationDuration });\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n            this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._exitAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n            this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /**\n     * Updates the number action sections.\n     * @param delta Increase/decrease in the number of sections.\n     */\n    _updateActionSectionCount(delta) {\n        this._actionSectionCount += delta;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Completes the dialog open by clearing potential animation classes, trapping\n     * focus and emitting an opened event.\n     */\n    _finishDialogOpen = () => {\n        this._clearAnimationClasses();\n        this._openAnimationDone(this._enterAnimationDuration);\n    };\n    /**\n     * Completes the dialog close by clearing potential animation classes, restoring\n     * focus and emitting a closed event.\n     */\n    _finishDialogClose = () => {\n        this._clearAnimationClasses();\n        this._animationStateChanged.emit({ state: 'closed', totalTime: this._exitAnimationDuration });\n    };\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame === 'function') {\n                requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    attachComponentPortal(portal) {\n        // When a component is passed into the dialog, the host element interrupts\n        // the `display:flex` from affecting the dialog title, content, and\n        // actions. To fix this, we make the component host `display: contents` by\n        // marking its host with the `mat-mdc-dialog-component-host` class.\n        //\n        // Note that this problem does not exist when a template ref is used since\n        // the title, contents, and actions are then nested directly under the\n        // dialog surface.\n        const ref = super.attachComponentPortal(portal);\n        ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n        return ref;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDialogContainer, isStandalone: true, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\", \"class.mat-mdc-dialog-container-with-actions\": \"_actionSectionCount > 0\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 560px);min-width:var(--mat-dialog-container-min-width, 280px)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, calc(100vw - 32px))}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, none);border-radius:var(--mat-dialog-container-shape, var(--mat-sys-corner-extra-large, 4px));background-color:var(--mat-dialog-container-color, var(--mat-sys-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 6px 24px 13px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mat-dialog-subhead-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-dialog-subhead-font, var(--mat-sys-headline-small-font, inherit));line-height:var(--mat-dialog-subhead-line-height, var(--mat-sys-headline-small-line-height, 1.5rem));font-size:var(--mat-dialog-subhead-size, var(--mat-sys-headline-small-size, 1rem));font-weight:var(--mat-dialog-subhead-weight, var(--mat-sys-headline-small-weight, 400));letter-spacing:var(--mat-dialog-subhead-tracking, var(--mat-sys-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mat-dialog-supporting-text-color, var(--mat-sys-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mat-dialog-supporting-text-font, var(--mat-sys-body-medium-font, inherit));line-height:var(--mat-dialog-supporting-text-line-height, var(--mat-sys-body-medium-line-height, 1.5rem));font-size:var(--mat-dialog-supporting-text-size, var(--mat-sys-body-medium-size, 1rem));font-weight:var(--mat-dialog-supporting-text-weight, var(--mat-sys-body-medium-weight, 400));letter-spacing:var(--mat-dialog-supporting-text-tracking, var(--mat-sys-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px 0)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;box-sizing:border-box;min-height:52px;margin:0;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 16px 24px);justify-content:var(--mat-dialog-actions-alignment, flex-end)}@media(forced-colors: active){.mat-mdc-dialog-actions{border-top-color:CanvasText}}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\\n\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, imports: [CdkPortalOutlet], host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0',\n                    }, template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 560px);min-width:var(--mat-dialog-container-min-width, 280px)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, calc(100vw - 32px))}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, none);border-radius:var(--mat-dialog-container-shape, var(--mat-sys-corner-extra-large, 4px));background-color:var(--mat-dialog-container-color, var(--mat-sys-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 6px 24px 13px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mat-dialog-subhead-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-dialog-subhead-font, var(--mat-sys-headline-small-font, inherit));line-height:var(--mat-dialog-subhead-line-height, var(--mat-sys-headline-small-line-height, 1.5rem));font-size:var(--mat-dialog-subhead-size, var(--mat-sys-headline-small-size, 1rem));font-weight:var(--mat-dialog-subhead-weight, var(--mat-sys-headline-small-weight, 400));letter-spacing:var(--mat-dialog-subhead-tracking, var(--mat-sys-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mat-dialog-supporting-text-color, var(--mat-sys-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mat-dialog-supporting-text-font, var(--mat-sys-body-medium-font, inherit));line-height:var(--mat-dialog-supporting-text-line-height, var(--mat-sys-body-medium-line-height, 1.5rem));font-size:var(--mat-dialog-supporting-text-size, var(--mat-sys-body-medium-size, 1rem));font-weight:var(--mat-dialog-supporting-text-weight, var(--mat-sys-body-medium-weight, 400));letter-spacing:var(--mat-dialog-supporting-text-tracking, var(--mat-sys-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px 0)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;box-sizing:border-box;min-height:52px;margin:0;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 16px 24px);justify-content:var(--mat-dialog-actions-alignment, flex-end)}@media(forced-colors: active){.mat-mdc-dialog-actions{border-top-color:CanvasText}}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\\n\"] }]\n        }] });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n\nvar MatDialogState;\n(function (MatDialogState) {\n    MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n    MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n    MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    _ref;\n    _config;\n    _containerInstance;\n    /** The instance of component opened into the dialog. */\n    componentInstance;\n    /**\n     * `ComponentRef` of the component opened into the dialog. Will be\n     * null when the dialog is opened using a `TemplateRef`.\n     */\n    componentRef;\n    /** Whether the user is allowed to close the dialog. */\n    disableClose;\n    /** Unique ID for the dialog. */\n    id;\n    /** Subject for notifying the user that the dialog has finished opening. */\n    _afterOpened = new Subject();\n    /** Subject for notifying the user that the dialog has started closing. */\n    _beforeClosed = new Subject();\n    /** Result to be passed to afterClosed. */\n    _result;\n    /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n    _closeFallbackTimeout;\n    /** Current state of the dialog. */\n    _state = MatDialogState.OPEN;\n    // TODO(crisbeto): we shouldn't have to declare this property, because `DialogRef.close`\n    // already has a second `options` parameter that we can use. The problem is that internal tests\n    // have assertions like `expect(MatDialogRef.close).toHaveBeenCalledWith(foo)` which will break,\n    // because it'll be called with two arguments by things like `MatDialogClose`.\n    /** Interaction that caused the dialog to close. */\n    _closeInteractionType;\n    constructor(_ref, _config, _containerInstance) {\n        this._ref = _ref;\n        this._config = _config;\n        this._containerInstance = _containerInstance;\n        this.disableClose = _config.disableClose;\n        this.id = _ref.id;\n        // Used to target panels specifically tied to dialogs.\n        _ref.addPanelClass('mat-mdc-dialog-panel');\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        const closePredicate = this._config.closePredicate;\n        if (closePredicate && !closePredicate(dialogResult, this._config, this.componentInstance)) {\n            return;\n        }\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = MatDialogState.CLOSING;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = MatDialogState.CLOSED;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createBlockScrollStrategy(injector);\n    },\n});\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    _defaultOptions = inject(MAT_DIALOG_DEFAULT_OPTIONS, { optional: true });\n    _scrollStrategy = inject(MAT_DIALOG_SCROLL_STRATEGY);\n    _parentDialog = inject(MatDialog, { optional: true, skipSelf: true });\n    _idGenerator = inject(_IdGenerator);\n    _injector = inject(Injector);\n    _dialog = inject(Dialog);\n    _animationsDisabled = _animationsDisabled();\n    _openDialogsAtThisLevel = [];\n    _afterAllClosedAtThisLevel = new Subject();\n    _afterOpenedAtThisLevel = new Subject();\n    dialogConfigClass = MatDialogConfig;\n    _dialogRefConstructor;\n    _dialogContainerType;\n    _dialogDataToken;\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     */\n    afterAllClosed = defer(() => this.openDialogs.length\n        ? this._getAfterAllClosed()\n        : this._getAfterAllClosed().pipe(startWith(undefined)));\n    constructor() {\n        this._dialogRefConstructor = MatDialogRef;\n        this._dialogContainerType = MatDialogContainer;\n        this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || this._idGenerator.getId('mat-mdc-dialog-');\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: createGlobalPositionStrategy(this._injector)\n                .centerHorizontally()\n                .centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Closing is tied to our animation so the close predicate has to be implemented separately.\n            closePredicate: undefined,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            disableAnimations: this._animationsDisabled ||\n                config.enterAnimationDuration?.toLocaleString() === '0' ||\n                config.exitAnimationDuration?.toString() === '0',\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentRef = cdkRef.componentRef;\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialog, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialog, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    dialogRef = inject(MatDialogRef, { optional: true });\n    _elementRef = inject(ElementRef);\n    _dialog = inject(MatDialog);\n    /** Screen-reader label for the button. */\n    ariaLabel;\n    /** Default to \"button\" to prevents accidental form submits. */\n    type = 'button';\n    /** Dialog close input. */\n    dialogResult;\n    _matDialogClose;\n    constructor() { }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogClose, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDialogClose, isStandalone: true, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\nclass MatDialogLayoutSection {\n    _dialogRef = inject(MatDialogRef, { optional: true });\n    _elementRef = inject(ElementRef);\n    _dialog = inject(MatDialog);\n    constructor() { }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                this._onAdd();\n            });\n        }\n    }\n    ngOnDestroy() {\n        // Note: we null check because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        const instance = this._dialogRef?._containerInstance;\n        if (instance) {\n            Promise.resolve().then(() => {\n                this._onRemove();\n            });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogLayoutSection, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDialogLayoutSection, isStandalone: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogLayoutSection, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [] });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n    id = inject(_IdGenerator).getId('mat-mdc-dialog-title-');\n    _onAdd() {\n        // Note: we null check the queue, because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n    }\n    _onRemove() {\n        this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogTitle, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDialogTitle, isStandalone: true, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDialogContent, isStandalone: true, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, hostDirectives: [{ directive: i1.CdkScrollable }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                    hostDirectives: [CdkScrollable],\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n    /**\n     * Horizontal alignment of action buttons.\n     */\n    align;\n    _onAdd() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n    }\n    _onRemove() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogActions, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDialogActions, isStandalone: true, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-start\": \"align === \\\"start\\\"\", \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\nconst DIRECTIVES = [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n];\nclass MatDialogModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogModule, imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent], exports: [MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatDialog],\n                }]\n        }] });\n\nexport { MatDialogActions as M, _closeDialogVia as _, MatDialogClose as a, MatDialogTitle as b, MatDialogContent as c, MatDialogContainer as d, MAT_DIALOG_DATA as e, MAT_DIALOG_DEFAULT_OPTIONS as f, MAT_DIALOG_SCROLL_STRATEGY as g, MatDialog as h, MatDialogConfig as i, MatDialogState as j, MatDialogRef as k, MatDialogModule as l };\n\n","export { e as MAT_DIALOG_DATA, f as MAT_DIALOG_DEFAULT_OPTIONS, g as MAT_DIALOG_SCROLL_STRATEGY, h as MatDialog, M as MatDialogActions, a as MatDialogClose, i as MatDialogConfig, d as MatDialogContainer, c as MatDialogContent, l as MatDialogModule, k as MatDialogRef, j as MatDialogState, b as MatDialogTitle, _ as _closeDialogVia } from './module-Ce6F7TNm.mjs';\nimport '@angular/cdk/dialog';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/portal';\nimport '@angular/core';\nimport '@angular/cdk/coercion';\nimport './animation-DfMFjxHu.mjs';\nimport '@angular/cdk/layout';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/cdk/keycodes';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/scrolling';\nimport './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/bidi';\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n * @deprecated Will stop being exported.\n * @breaking-change 21.0.0\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDialogAnimations = {\n    // Represents:\n    // trigger('dialogContainer', [\n    //   // Note: The `enter` animation transitions to `transform: none`, because for some reason\n    //   // specifying the transform explicitly, causes IE both to blur the dialog content and\n    //   // decimate the animation performance. Leaving it as `none` solves both issues.\n    //   state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n    //   state('enter', style({transform: 'none'})),\n    //   transition(\n    //     '* => enter',\n    //     group([\n    //       animate(\n    //         '{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)',\n    //         style({transform: 'none', opacity: 1}),\n    //       ),\n    //       query('@*', animateChild(), {optional: true}),\n    //     ]),\n    //     _defaultParams,\n    //   ),\n    //   transition(\n    //     '* => void, * => exit',\n    //     group([\n    //       animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0})),\n    //       query('@*', animateChild(), {optional: true}),\n    //     ]),\n    //     _defaultParams,\n    //   ),\n    // ])\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: {\n        type: 7,\n        name: 'dialogContainer',\n        definitions: [\n            {\n                type: 0,\n                name: 'void, exit',\n                styles: { type: 6, styles: { opacity: 0, transform: 'scale(0.7)' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'enter',\n                styles: { type: 6, styles: { transform: 'none' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* => enter',\n                animation: {\n                    type: 3,\n                    steps: [\n                        {\n                            type: 4,\n                            styles: { type: 6, styles: { transform: 'none', opacity: 1 }, offset: null },\n                            timings: '{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)',\n                        },\n                        {\n                            type: 11,\n                            selector: '@*',\n                            animation: { type: 9, options: null },\n                            options: { optional: true },\n                        },\n                    ],\n                    options: null,\n                },\n                options: { params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' } },\n            },\n            {\n                type: 1,\n                expr: '* => void, * => exit',\n                animation: {\n                    type: 3,\n                    steps: [\n                        {\n                            type: 4,\n                            styles: { type: 6, styles: { opacity: 0 }, offset: null },\n                            timings: '{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)',\n                        },\n                        {\n                            type: 11,\n                            selector: '@*',\n                            animation: { type: 9, options: null },\n                            options: { optional: true },\n                        },\n                    ],\n                    options: null,\n                },\n                options: { params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' } },\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { _defaultParams, matDialogAnimations };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nclass _MatInternalFormField {\n    /** Position of the label relative to the content. */\n    labelPosition;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatInternalFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatInternalFormField, isStandalone: true, selector: \"div[mat-internal-form-field]\", inputs: { labelPosition: \"labelPosition\" }, host: { properties: { \"class.mdc-form-field--align-end\": \"labelPosition === \\\"before\\\"\" }, classAttribute: \"mdc-form-field mat-internal-form-field\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatInternalFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[mat-internal-form-field]', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mdc-form-field mat-internal-form-field',\n                        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"',\n                    }, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"] }]\n        }], propDecorators: { labelPosition: [{\n                type: Input,\n                args: [{ required: true }]\n            }] } });\n\nexport { _MatInternalFormField as _ };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { FocusMonitor, _IdGenerator } from '@angular/cdk/a11y';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { _ as _MatInternalFormField } from './internal-form-field-D5iFxU6d.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false, hideIcon: false, disabledInteractive: false }),\n});\n\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n    source;\n    checked;\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nclass MatSlideToggle {\n    _elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    defaults = inject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS);\n    _onChange = (_) => { };\n    _onTouched = () => { };\n    _validatorOnChange = () => { };\n    _uniqueId;\n    _checked = false;\n    _createChangeEvent(isChecked) {\n        return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Unique ID for the label element. */\n    _labelId;\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n        return `${this.id || this._uniqueId}-button`;\n    }\n    /** Reference to the MDC switch element. */\n    _switchElement;\n    /** Focuses the slide-toggle. */\n    focus() {\n        this._switchElement.nativeElement.focus();\n    }\n    /** Whether noop animations are enabled. */\n    _noopAnimations = _animationsDisabled();\n    /** Whether the slide toggle is currently focused. */\n    _focused;\n    /** Name value will be applied to the input element if present. */\n    name = null;\n    /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n    id;\n    /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n    labelPosition = 'after';\n    /** Used to set the aria-label attribute on the underlying input element. */\n    ariaLabel = null;\n    /** Used to set the aria-labelledby attribute on the underlying input element. */\n    ariaLabelledby = null;\n    /** Used to set the aria-describedby attribute on the underlying input element. */\n    ariaDescribedby;\n    /** Whether the slide-toggle is required. */\n    required;\n    // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n    // the lack of type checking previously and assigning random strings.\n    /**\n     * Theme color of the slide toggle. This API is supported in M2 themes only,\n     * it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/slide-toggle/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the slide toggle is disabled. */\n    disabled = false;\n    /** Whether the slide toggle has a ripple. */\n    disableRipple = false;\n    /** Tabindex of slide toggle. */\n    tabIndex = 0;\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether to hide the icon inside of the slide toggle. */\n    hideIcon;\n    /** Whether the slide toggle should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** An event will be dispatched each time the slide-toggle changes its value. */\n    change = new EventEmitter();\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     */\n    toggleChange = new EventEmitter();\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        const defaults = this.defaults;\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        this.color = defaults.color || 'accent';\n        this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-slide-toggle-');\n        this.hideIcon = defaults.hideIcon ?? false;\n        this.disabledInteractive = defaults.disabledInteractive ?? false;\n        this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._focused = true;\n                this._changeDetectorRef.markForCheck();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._focused = false;\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorOnChange();\n        }\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggleChange.emit();\n            if (!this.defaults.disableToggleValue) {\n                this.checked = !this.checked;\n                this._onChange(this.checked);\n                this.change.emit(new MatSlideToggleChange(this, this.checked));\n            }\n        }\n    }\n    _getAriaLabelledBy() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Even though we have a `label` element with a `for` pointing to the button, we need the\n        // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n        return this.ariaLabel ? null : this._labelId;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggle, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatSlideToggle, isStandalone: true, selector: \"mat-slide-toggle\", inputs: { name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: [\"required\", \"required\", booleanAttribute], color: \"color\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], checked: [\"checked\", \"checked\", booleanAttribute], hideIcon: [\"hideIcon\", \"hideIcon\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.name\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-mdc-slide-toggle-focused\": \"_focused\", \"class.mat-mdc-slide-toggle-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" }, classAttribute: \"mat-mdc-slide-toggle\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MatSlideToggle),\n                multi: true,\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatSlideToggle,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_switchElement\", first: true, predicate: [\"switch\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [class.mat-mdc-slide-toggle-disabled-interactive]=\\\"disabledInteractive\\\"\\n    [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled && !disabledInteractive\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <span class=\\\"mdc-switch__track\\\"></span>\\n    <span class=\\\"mdc-switch__handle-track\\\">\\n      <span class=\\\"mdc-switch__handle\\\">\\n        <span class=\\\"mdc-switch__shadow\\\">\\n          <span class=\\\"mdc-elevation-overlay\\\"></span>\\n        </span>\\n        <span class=\\\"mdc-switch__ripple\\\">\\n          <span class=\\\"mat-mdc-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></span>\\n        </span>\\n        @if (!hideIcon) {\\n          <span class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </span>\\n        }\\n      </span>\\n    </span>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mat-slide-toggle-track-width, 52px)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mat-slide-toggle-track-height, 32px);border-radius:var(--mat-slide-toggle-track-shape, var(--mat-sys-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mat-slide-toggle-disabled-track-opacity, 0.12)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-slide-toggle-track-outline-width, 2px);border-color:var(--mat-slide-toggle-track-outline-color, var(--mat-sys-outline))}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-slide-toggle-selected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-selected-track-outline-color, transparent)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-slide-toggle-disabled-unselected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-disabled-unselected-track-outline-color, var(--mat-sys-on-surface))}@media(forced-colors: active){.mdc-switch__track{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mat-slide-toggle-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-hover-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-focus-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-pressed-track-color, var(--mat-sys-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mat-slide-toggle-disabled-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mat-slide-toggle-selected-track-color, var(--mat-sys-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-hover-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-focus-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-pressed-track-color, var(--mat-sys-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mat-slide-toggle-disabled-selected-track-color, var(--mat-sys-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mat-slide-toggle-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mat-slide-toggle-handle-width);height:var(--mat-slide-toggle-handle-height);border-radius:var(--mat-slide-toggle-handle-shape, var(--mat-sys-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-slide-toggle-unselected-handle-size, 16px);height:var(--mat-slide-toggle-unselected-handle-size, 16px);margin:var(--mat-slide-toggle-unselected-handle-horizontal-margin, 0 8px)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-unselected-with-icon-handle-horizontal-margin, 0 4px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-slide-toggle-selected-handle-size, 24px);height:var(--mat-slide-toggle-selected-handle-size, 24px);margin:var(--mat-slide-toggle-selected-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-selected-with-icon-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-slide-toggle-with-icon-handle-size, 24px);height:var(--mat-slide-toggle-with-icon-handle-size, 24px)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-slide-toggle-pressed-handle-size, 28px);height:var(--mat-slide-toggle-pressed-handle-size, 28px)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-selected-pressed-handle-horizontal-margin, 0 22px)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-unselected-pressed-handle-horizontal-margin, 0 2px)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-selected-handle-opacity, 1)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-unselected-handle-opacity, 0.38)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media(forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-handle-color, var(--mat-sys-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-hover-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-focus-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-pressed-handle-color, var(--mat-sys-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-selected-handle-color, var(--mat-sys-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-handle-color, var(--mat-sys-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-hover-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-focus-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-pressed-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-unselected-handle-color, var(--mat-sys-on-surface))}.mdc-switch__handle::before{background:var(--mat-slide-toggle-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mat-slide-toggle-state-layer-size, 40px);height:var(--mat-slide-toggle-state-layer-size, 40px)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-pressed-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-hover-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-focus-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-pressed-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1;transform:translateZ(0)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-unselected-icon-opacity, 0.38)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-selected-icon-opacity, 0.38)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mat-slide-toggle-unselected-icon-size, 16px);height:var(--mat-slide-toggle-unselected-icon-size, 16px);fill:var(--mat-slide-toggle-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mat-slide-toggle-selected-icon-size, 16px);height:var(--mat-slide-toggle-selected-icon-size, 16px);fill:var(--mat-slide-toggle-selected-icon-color, var(--mat-sys-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-selected-icon-color, var(--mat-sys-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-slide-toggle-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-slide-toggle-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-slide-toggle-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-slide-toggle-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-slide-toggle-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-slide-toggle-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mat-slide-toggle-disabled-label-text-color)}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', host: {\n                        'class': 'mat-mdc-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.name]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n                        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                    }, exportAs: 'matSlideToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MatSlideToggle),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatSlideToggle,\n                            multi: true,\n                        },\n                    ], imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [class.mat-mdc-slide-toggle-disabled-interactive]=\\\"disabledInteractive\\\"\\n    [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled && !disabledInteractive\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <span class=\\\"mdc-switch__track\\\"></span>\\n    <span class=\\\"mdc-switch__handle-track\\\">\\n      <span class=\\\"mdc-switch__handle\\\">\\n        <span class=\\\"mdc-switch__shadow\\\">\\n          <span class=\\\"mdc-elevation-overlay\\\"></span>\\n        </span>\\n        <span class=\\\"mdc-switch__ripple\\\">\\n          <span class=\\\"mat-mdc-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></span>\\n        </span>\\n        @if (!hideIcon) {\\n          <span class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </span>\\n        }\\n      </span>\\n    </span>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mat-slide-toggle-track-width, 52px)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mat-slide-toggle-track-height, 32px);border-radius:var(--mat-slide-toggle-track-shape, var(--mat-sys-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mat-slide-toggle-disabled-track-opacity, 0.12)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-slide-toggle-track-outline-width, 2px);border-color:var(--mat-slide-toggle-track-outline-color, var(--mat-sys-outline))}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-slide-toggle-selected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-selected-track-outline-color, transparent)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-slide-toggle-disabled-unselected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-disabled-unselected-track-outline-color, var(--mat-sys-on-surface))}@media(forced-colors: active){.mdc-switch__track{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mat-slide-toggle-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-hover-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-focus-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-pressed-track-color, var(--mat-sys-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mat-slide-toggle-disabled-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mat-slide-toggle-selected-track-color, var(--mat-sys-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-hover-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-focus-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-pressed-track-color, var(--mat-sys-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mat-slide-toggle-disabled-selected-track-color, var(--mat-sys-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mat-slide-toggle-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mat-slide-toggle-handle-width);height:var(--mat-slide-toggle-handle-height);border-radius:var(--mat-slide-toggle-handle-shape, var(--mat-sys-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-slide-toggle-unselected-handle-size, 16px);height:var(--mat-slide-toggle-unselected-handle-size, 16px);margin:var(--mat-slide-toggle-unselected-handle-horizontal-margin, 0 8px)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-unselected-with-icon-handle-horizontal-margin, 0 4px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-slide-toggle-selected-handle-size, 24px);height:var(--mat-slide-toggle-selected-handle-size, 24px);margin:var(--mat-slide-toggle-selected-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-selected-with-icon-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-slide-toggle-with-icon-handle-size, 24px);height:var(--mat-slide-toggle-with-icon-handle-size, 24px)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-slide-toggle-pressed-handle-size, 28px);height:var(--mat-slide-toggle-pressed-handle-size, 28px)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-selected-pressed-handle-horizontal-margin, 0 22px)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-unselected-pressed-handle-horizontal-margin, 0 2px)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-selected-handle-opacity, 1)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-unselected-handle-opacity, 0.38)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media(forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-handle-color, var(--mat-sys-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-hover-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-focus-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-pressed-handle-color, var(--mat-sys-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-selected-handle-color, var(--mat-sys-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-handle-color, var(--mat-sys-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-hover-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-focus-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-pressed-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-unselected-handle-color, var(--mat-sys-on-surface))}.mdc-switch__handle::before{background:var(--mat-slide-toggle-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mat-slide-toggle-state-layer-size, 40px);height:var(--mat-slide-toggle-state-layer-size, 40px)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-pressed-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-hover-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-focus-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-pressed-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1;transform:translateZ(0)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-unselected-icon-opacity, 0.38)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-selected-icon-opacity, 0.38)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mat-slide-toggle-unselected-icon-size, 16px);height:var(--mat-slide-toggle-unselected-icon-size, 16px);fill:var(--mat-slide-toggle-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mat-slide-toggle-selected-icon-size, 16px);height:var(--mat-slide-toggle-selected-icon-size, 16px);fill:var(--mat-slide-toggle-selected-icon-color, var(--mat-sys-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-selected-icon-color, var(--mat-sys-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-slide-toggle-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-slide-toggle-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-slide-toggle-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-slide-toggle-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-slide-toggle-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-slide-toggle-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mat-slide-toggle-disabled-label-text-color)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _switchElement: [{\n                type: ViewChild,\n                args: ['switch']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], color: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? 0 : numberAttribute(value)) }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideIcon: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }] } });\n\nclass MatSlideToggleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, imports: [MatSlideToggle, MatCommonModule], exports: [MatSlideToggle, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, imports: [MatSlideToggle, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatSlideToggle, MatCommonModule],\n                    exports: [MatSlideToggle, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule };\n\n","<div class=\"feature-card\">\r\n  <div class=\"feature-card-header\">\r\n    <mat-icon fontIcon=\"settings\"></mat-icon>\r\n    <h1>Settings</h1>\r\n  </div>\r\n  <mat-card class=\"settings-section\">\r\n    <h2>Data Management</h2>\r\n    <div class=\"settings-actions\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"exportData()\">Export Data</button>\r\n      <label mat-raised-button color=\"accent\" style=\"margin-left: 1rem;\">\r\n        Import Data\r\n        <input type=\"file\" accept=\"application/json\" (change)=\"importData($event)\" style=\"display:none;\" />\r\n      </label>\r\n      <button mat-raised-button color=\"warn\" style=\"margin-left: 1rem;\" (click)=\"clearAllData()\">Clear All Data</button>\r\n    </div>\r\n    <p class=\"settings-hint\">Export or import your tasks, notes, snippets, and timer data as a JSON backup. Clearing data cannot be undone.</p>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"settings-section\">\r\n    <h2>Productivity Preferences</h2>\r\n    <form (ngSubmit)=\"saveProductivityPrefs()\" #prefsForm=\"ngForm\">\r\n      <mat-form-field appearance=\"fill\" style=\"min-width: 220px; margin-right: 2rem;\">\r\n        <mat-label>Default Landing Page</mat-label>\r\n        <mat-select [(ngModel)]=\"defaultLandingPage\" name=\"defaultLandingPage\">\r\n          <mat-option *ngFor=\"let page of landingPages\" [value]=\"page.value\">{{ page.label }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\" style=\"width: 120px; margin-right: 1rem;\">\r\n        <mat-label>Focus (min)</mat-label>\r\n        <input matInput type=\"number\" min=\"1\" [(ngModel)]=\"focusDuration\" name=\"focusDuration\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\" style=\"width: 120px; margin-right: 2rem;\">\r\n        <mat-label>Break (min)</mat-label>\r\n        <input matInput type=\"number\" min=\"1\" [(ngModel)]=\"breakDuration\" name=\"breakDuration\">\r\n      </mat-form-field>\r\n      <div class=\"feature-toggles\">\r\n        <mat-slide-toggle [(ngModel)]=\"features.tasks\" name=\"featureTasks\">Tasks</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"features.notes\" name=\"featureNotes\">Notes</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"features.timer\" name=\"featureTimer\">Focus Timer</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"features.snippets\" name=\"featureSnippets\">Snippets</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"features.stats\" name=\"featureStats\">Stats</mat-slide-toggle>\r\n      </div>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\" style=\"margin-top: 1rem;\">Save Preferences</button>\r\n    </form>\r\n    <p class=\"settings-hint\">Choose your default landing page, set timer defaults, and toggle feature visibility.</p>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"settings-section\">\r\n    <h2>UI Preferences</h2>\r\n    <form (ngSubmit)=\"saveUiPrefs()\" #uiForm=\"ngForm\">\r\n      <div class=\"ui-prefs-row\">\r\n        <mat-form-field appearance=\"fill\" style=\"min-width: 180px; margin-right: 2rem;\">\r\n          <mat-label>Sidebar Position</mat-label>\r\n          <mat-select [(ngModel)]=\"sidebarPosition\" name=\"sidebarPosition\">\r\n            <mat-option *ngFor=\"let pos of sidebarPositions\" [value]=\"pos.value\">{{ pos.label }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"compactMode\" name=\"compactMode\" style=\"margin-right: 2rem;\">Compact Mode</mat-slide-toggle>\r\n        <mat-form-field appearance=\"fill\" style=\"min-width: 140px;\">\r\n          <mat-label>Font Size</mat-label>\r\n          <mat-select [(ngModel)]=\"fontSize\" name=\"fontSize\">\r\n            <mat-option *ngFor=\"let size of fontSizes\" [value]=\"size.value\">{{ size.label }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"form-actions-block\">\r\n        <button mat-raised-button color=\"primary\" type=\"submit\">Save UI Preferences</button>\r\n      </div>\r\n    </form>\r\n    <p class=\"settings-hint\">Customize sidebar position, enable compact mode, and adjust font size for your dashboard.</p>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"settings-section\">\r\n    <h2>Accessibility</h2>\r\n    <form (ngSubmit)=\"saveAccessibilityPrefs()\" #accessForm=\"ngForm\">\r\n      <div class=\"accessibility-row\">\r\n        <mat-slide-toggle [(ngModel)]=\"highContrast\" name=\"highContrast\" style=\"margin-right: 2rem;\">High Contrast Mode</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"keyboardShortcuts\" name=\"keyboardShortcuts\">Enable Keyboard Shortcuts</mat-slide-toggle>\r\n      </div>\r\n      <div class=\"form-actions-block\">\r\n        <button mat-raised-button color=\"primary\" type=\"submit\">Save Accessibility</button>\r\n      </div>\r\n    </form>\r\n    <p class=\"settings-hint\">High contrast mode improves visibility. Keyboard shortcuts help power users navigate and control the app.</p>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"settings-section\">\r\n    <h2>About</h2>\r\n    <div class=\"about-info\">\r\n      <div><strong>App Version:</strong> {{ appVersion }}</div>\r\n      <div><strong>Author:</strong> {{ author }}</div>\r\n      <div><strong>GitHub:</strong> <a href=\"{{ repoUrl }}\" target=\"_blank\" rel=\"noopener\">{{ repoUrl }}</a></div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","/* src/app/features/settings/settings-page/settings-page.scss */\n.settings-section {\n  margin-bottom: 2rem;\n  padding: 2rem;\n}\n.settings-actions {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n.settings-hint {\n  color: #666;\n  font-size: 0.95rem;\n  margin-top: 0.5rem;\n}\n.feature-toggles {\n  display: flex;\n  gap: 1.5rem;\n  margin: 1rem 0 0.5rem 0;\n}\n.about-info {\n  margin-top: 1rem;\n  font-size: 1rem;\n  line-height: 1.7;\n}\n.about-info a {\n  color: #1976d2;\n  text-decoration: underline;\n}\n.feature-card {\n  max-width: 900px;\n  margin: 2.5rem auto 0 auto;\n  background: #fff;\n  border-radius: 18px;\n  box-shadow: 0 4px 24px 0 rgba(0, 0, 0, 0.08), 0 1.5px 6px 0 rgba(0, 0, 0, 0.04);\n  padding: 2.5rem 2.5rem 2rem 2.5rem;\n  animation: fadeIn 0.7s cubic-bezier(0.4, 0, 0.2, 1);\n}\n.feature-card-header {\n  display: flex;\n  align-items: center;\n  gap: 0.9rem;\n  margin-bottom: 1.5rem;\n}\n.feature-card-header mat-icon {\n  font-size: 2.2rem;\n  height: 2.2rem;\n  width: 2.2rem;\n  min-width: 2.2rem;\n  min-height: 2.2rem;\n  color: #1976d2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 1;\n  vertical-align: middle;\n  position: relative;\n  top: 0;\n}\n.feature-card-header h1 {\n  font-size: 1.7rem;\n  font-weight: 700;\n  margin: 0;\n  color: #222;\n}\n@media (max-width: 700px) {\n  .feature-card {\n    padding: 1.2rem 0.7rem 1.2rem 0.7rem;\n    max-width: 98vw;\n  }\n  .feature-card-header h1 {\n    font-size: 1.1rem;\n  }\n}\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n.ui-prefs-row,\n.accessibility-row {\n  display: flex;\n  gap: 1.5rem;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.form-actions-block {\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n@media (max-width: 700px) {\n  .ui-prefs-row,\n  .accessibility-row {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 0.7rem;\n  }\n  .form-actions-block {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 0.5rem;\n    margin-top: 0.7rem;\n  }\n}\n/*# sourceMappingURL=settings-page.css.map */\n","import { Component, Inject, PLATFORM_ID, OnInit } from '@angular/core';\r\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AuthService } from '../../../shared/services/auth.service';\r\n\r\n// Try different import approaches\r\n// import { environment } from '../../../../environments/environment';\r\n\r\n// Fallback: Define values directly if import fails\r\nconst environment = {\r\n  appVersion: '1.0.1',\r\n  author: 'Maksim Kanev'\r\n};\r\n\r\ninterface AppEnvironment {\r\n  appVersion: string;\r\n  author: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-settings-page',\r\n  standalone: true,\r\n  imports: [CommonModule, MatCardModule, MatButtonModule, MatDialogModule, MatFormFieldModule, MatSelectModule, MatInputModule, MatSlideToggleModule, FormsModule, MatIconModule],\r\n  templateUrl: './settings-page.html',\r\n  styleUrl: './settings-page.scss'\r\n})\r\nexport class SettingsPage implements OnInit {\r\n  isBrowser: boolean;\r\n  // Export all relevant app data as JSON\r\n  exportData() {\r\n    if (!this.isBrowser) return;\r\n    let kanban = { todo: [], inProgress: [], done: [] };\r\n    let timer = {};\r\n    let snippets = [];\r\n    try {\r\n      kanban = JSON.parse(localStorage.getItem('kanban-tasks') || '{\"todo\":[],\"inProgress\":[],\"done\":[]}');\r\n    } catch (e) {\r\n      console.error('Failed to parse kanban-tasks:', e);\r\n    }\r\n    try {\r\n      timer = JSON.parse(localStorage.getItem('focus-timer') || '{}');\r\n    } catch (e) {\r\n      console.error('Failed to parse focus-timer:', e);\r\n    }\r\n    try {\r\n      snippets = JSON.parse(localStorage.getItem('snippets') || '[]');\r\n    } catch (e) {\r\n      console.error('Failed to parse snippets:', e);\r\n    }\r\n    const data = {\r\n      kanban,\r\n      timer,\r\n      notes: localStorage.getItem('markdown-note') || '',\r\n      snippets\r\n    };\r\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'dev-dashboard-backup.json';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  // Import data from JSON file\r\n  importData(event: Event) {\r\n    if (!this.isBrowser) return;\r\n    const input = event.target as HTMLInputElement;\r\n    if (!input.files?.length) return;\r\n    const file = input.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      try {\r\n        const data = JSON.parse(reader.result as string);\r\n        if (data.kanban) localStorage.setItem('kanban-tasks', JSON.stringify(data.kanban));\r\n        if (data.timer) localStorage.setItem('focus-timer', JSON.stringify(data.timer));\r\n        if (typeof data.notes === 'string') localStorage.setItem('markdown-note', data.notes);\r\n        if (data.snippets) localStorage.setItem('snippets', JSON.stringify(data.snippets));\r\n        alert('Data imported successfully!');\r\n      } catch (e) {\r\n        alert('Invalid file or format.');\r\n        console.error('Failed to parse imported data:', e);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    // Reset input so same file can be re-imported if needed\r\n    input.value = '';\r\n  }\r\n\r\n  // Clear all app data with confirmation\r\n  clearAllData() {\r\n    if (!this.isBrowser) return;\r\n    if (confirm('Are you sure you want to clear all app data? This cannot be undone.')) {\r\n      localStorage.removeItem('kanban-tasks');\r\n      localStorage.removeItem('focus-timer');\r\n      localStorage.removeItem('markdown-note');\r\n      localStorage.removeItem('snippets');\r\n      alert('All app data cleared.');\r\n    }\r\n  }\r\n\r\n  // Productivity Preferences state\r\n  landingPages = [\r\n    { value: 'dashboard', label: 'Dashboard' },\r\n    { value: 'tasks', label: 'Kanban Board' },\r\n    { value: 'notes', label: 'Notes' },\r\n    { value: 'timer', label: 'Focus Timer' },\r\n    { value: 'snippets', label: 'Snippets' },\r\n    { value: 'stats', label: 'Stats Dashboard' },\r\n  ];\r\n  defaultLandingPage = 'dashboard';\r\n  focusDuration = 25;\r\n  breakDuration = 5;\r\n  features = {\r\n    tasks: true,\r\n    notes: true,\r\n    timer: true,\r\n    snippets: true,\r\n    stats: true,\r\n  };\r\n\r\n  // UI Preferences state\r\n  sidebarPositions = [\r\n    { value: 'left', label: 'Left' },\r\n    { value: 'right', label: 'Right' }\r\n  ];\r\n  sidebarPosition = 'left';\r\n  compactMode = false;\r\n  fontSizes = [\r\n    { value: 'small', label: 'Small' },\r\n    { value: 'medium', label: 'Medium' },\r\n    { value: 'large', label: 'Large' }\r\n  ];\r\n  fontSize = 'medium';\r\n\r\n  // About/Info section state\r\n  appVersion = (environment as AppEnvironment).appVersion;\r\n  author = (environment as AppEnvironment).author;\r\n  repoUrl = 'https://github.com/maksimKV/dev-dashboard';\r\n\r\n  // Accessibility state\r\n  highContrast = false;\r\n  keyboardShortcuts = true;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: Object, private authService: AuthService) {\r\n    this.isBrowser = isPlatformBrowser(this.platformId);\r\n    if (this.isBrowser) {\r\n      this.loadProductivityPrefs();\r\n      this.loadUiPrefs();\r\n      this.loadAccessibilityPrefs();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Environment values are now loaded correctly\r\n  }\r\n\r\n  loadProductivityPrefs() {\r\n    if (!this.isBrowser) return;\r\n    this.defaultLandingPage = localStorage.getItem('default-landing-page') || 'dashboard';\r\n    this.focusDuration = +(localStorage.getItem('focus-timer-duration') || 25);\r\n    this.breakDuration = +(localStorage.getItem('focus-break-duration') || 5);\r\n    const features = localStorage.getItem('enabled-features');\r\n    if (features) {\r\n      try {\r\n        this.features = { ...this.features, ...JSON.parse(features) };\r\n      } catch (e) {\r\n        this.features = {\r\n          tasks: true,\r\n          notes: true,\r\n          timer: true,\r\n          snippets: true,\r\n          stats: true\r\n        };\r\n        console.error('Failed to parse enabled-features:', e);\r\n      }\r\n    }\r\n  }\r\n\r\n  saveProductivityPrefs() {\r\n    if (!this.isBrowser) return;\r\n    localStorage.setItem('default-landing-page', this.defaultLandingPage);\r\n    localStorage.setItem('focus-timer-duration', String(this.focusDuration));\r\n    localStorage.setItem('focus-break-duration', String(this.breakDuration));\r\n    localStorage.setItem('enabled-features', JSON.stringify(this.features));\r\n    window.dispatchEvent(new StorageEvent('storage', { key: 'enabled-features' }));\r\n    // Save to backend\r\n    this.saveAllPrefsToBackend();\r\n    alert('Productivity preferences saved!');\r\n  }\r\n\r\n  loadUiPrefs() {\r\n    if (!this.isBrowser) return;\r\n    this.sidebarPosition = localStorage.getItem('sidebar-position') || 'left';\r\n    this.compactMode = localStorage.getItem('compact-mode') === 'true';\r\n    this.fontSize = localStorage.getItem('font-size') || 'medium';\r\n  }\r\n\r\n  saveUiPrefs() {\r\n    if (!this.isBrowser) return;\r\n    localStorage.setItem('sidebar-position', this.sidebarPosition);\r\n    localStorage.setItem('compact-mode', String(this.compactMode));\r\n    localStorage.setItem('font-size', this.fontSize);\r\n    window.dispatchEvent(new StorageEvent('storage', { key: 'sidebar-position' }));\r\n    // Save to backend\r\n    this.saveAllPrefsToBackend();\r\n    alert('UI preferences saved!');\r\n  }\r\n\r\n  loadAccessibilityPrefs() {\r\n    if (!this.isBrowser) return;\r\n    this.highContrast = localStorage.getItem('high-contrast') === 'true';\r\n    this.keyboardShortcuts = localStorage.getItem('keyboard-shortcuts') !== 'false';\r\n  }\r\n\r\n  saveAccessibilityPrefs() {\r\n    if (!this.isBrowser) return;\r\n    localStorage.setItem('high-contrast', String(this.highContrast));\r\n    localStorage.setItem('keyboard-shortcuts', String(this.keyboardShortcuts));\r\n    // Save to backend\r\n    this.saveAllPrefsToBackend();\r\n    alert('Accessibility preferences saved!');\r\n  }\r\n\r\n  saveAllPrefsToBackend() {\r\n    const preferences = {\r\n      defaultLandingPage: this.defaultLandingPage,\r\n      focusDuration: this.focusDuration,\r\n      breakDuration: this.breakDuration,\r\n      features: this.features,\r\n      sidebarPosition: this.sidebarPosition,\r\n      compactMode: this.compactMode,\r\n      fontSize: this.fontSize,\r\n      highContrast: this.highContrast,\r\n      keyboardShortcuts: this.keyboardShortcuts\r\n    };\r\n    this.authService.updatePreferences(preferences).subscribe({\r\n      next: () => {\r\n        // Optionally show a success message or log\r\n        // alert('Preferences saved to backend!');\r\n      },\r\n      error: (err) => {\r\n        alert('Failed to save preferences to backend.');\r\n        console.error('Failed to save preferences to backend:', err);\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAOM,iBAOA,SA6BA,cAgBA,mBAeA,gBAkBA,iBAkBA,gBA6BA,eAeA,eAsBA,cAYA,gBAYA,gBAYA,gBAYA,gBAoBA,eAYA,iBAgBA;AAhRN;AAAA;AAAA;AAAA;AACA;AACA;AAKA,IAAM,kBAAkB,IAAI,eAAe,iBAAiB;AAO5D,IAAM,UAAN,MAAM,SAAQ;AAAA,MACV;AAAA,MACA,cAAc;AACV,cAAM,SAAS,OAAO,iBAAiB,EAAE,UAAU,KAAK,CAAC;AACzD,aAAK,aAAa,QAAQ,cAAc;AAAA,MAC5C;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,UAAS,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC5J,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,UAAS,cAAc,MAAM,UAAU,YAAY,QAAQ,EAAE,YAAY,aAAa,GAAG,MAAM,EAAE,YAAY,EAAE,+BAA+B,6BAA+B,4BAA4B,6BAA+B,6BAA6B,2BAA6B,0BAA0B,0BAA4B,GAAG,gBAAgB,wBAAwB,GAAG,UAAU,CAAC,SAAS,GAAG,UAAU,cAAI,UAAU,+BAA+B,QAAQ,CAAC,mwIAAuwI,GAAG,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IACh6J;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,SAAS,YAAY,CAAC;AAAA,MACrG,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,YAAY,MAAM;AAAA,QACzB,SAAS;AAAA,QACT,iCAAiC;AAAA,QACjC,8BAA8B;AAAA,QAC9B,+BAA+B;AAAA,QAC/B,4BAA4B;AAAA,MAChC,GAAG,UAAU,WAAW,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,UAAU,+BAA+B,QAAQ,CAAC,mwIAAuwI,EAAE,CAAC;AAAA,IACx7I,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,YAAY,CAAC;AAAA,MACrD,MAAM;AAAA,IACV,CAAC,EAAE,EAAE,CAAC;AASlB,IAAM,eAAN,MAAM,cAAa;AAAA,MACf,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACjK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,eAAc,cAAc,MAAM,UAAU,oDAAoD,MAAM,EAAE,gBAAgB,qBAAqB,GAAG,UAAU,aAAG,CAAC;AAAA,IACzP;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,cAAc,YAAY,CAAC;AAAA,MAC1G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,qBAAqB;AAAA,MAC1C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAMZ,IAAM,oBAAN,MAAM,mBAAkB;AAAA,MACpB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAmB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACtK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,oBAAmB,cAAc,MAAM,UAAU,wBAAwB,MAAM,EAAE,gBAAgB,2BAA2B,GAAG,UAAU,cAAI,UAAU,whBAA4hB,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IAC52B;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,mBAAmB,YAAY,CAAC;AAAA,MAC/G,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,wBAAwB,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,MAAM,EAAE,SAAS,2BAA2B,GAAG,UAAU,uhBAA2hB,CAAC;AAAA,IAC5tB,CAAC,EAAE,CAAC;AAQZ,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,oBAAoB,MAAM,EAAE,gBAAgB,uBAAuB,GAAG,UAAU,aAAG,CAAC;AAAA,IAC7N;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,uBAAuB;AAAA,MAC5C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAQZ,IAAM,kBAAN,MAAM,iBAAgB;AAAA,MAClB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAiB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACpK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,kBAAiB,cAAc,MAAM,UAAU,6DAA6D,MAAM,EAAE,gBAAgB,wBAAwB,GAAG,UAAU,aAAG,CAAC;AAAA,IACxQ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAiB,YAAY,CAAC;AAAA,MAC7G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,wBAAwB;AAAA,MAC7C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAQZ,IAAM,iBAAN,MAAM,gBAAe;AAAA;AAAA;AAAA;AAAA,MAIjB,QAAQ;AAAA,MACR,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,oBAAoB,QAAQ,EAAE,OAAO,QAAQ,GAAG,MAAM,EAAE,YAAY,EAAE,wCAAwC,kBAAoB,GAAG,gBAAgB,yCAAyC,GAAG,UAAU,CAAC,gBAAgB,GAAG,UAAU,aAAG,CAAC;AAAA,IACtX;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,MAAM;AAAA,UACF,SAAS;AAAA,UACT,0CAA0C;AAAA,QAC9C;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,EAAE,OAAO,CAAC;AAAA,MACtB,MAAM;AAAA,IACV,CAAC,EAAE,EAAE,CAAC;AASlB,IAAM,gBAAN,MAAM,eAAc;AAAA,MAChB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAe,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAClK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,gBAAe,cAAc,MAAM,UAAU,mBAAmB,MAAM,EAAE,gBAAgB,sBAAsB,GAAG,UAAU,cAAI,UAAU,6TAAmU,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IACroB;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAe,YAAY,CAAC;AAAA,MAC3G,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,mBAAmB,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,MAAM,EAAE,SAAS,sBAAsB,GAAG,UAAU,4TAAkU,CAAC;AAAA,IACzf,CAAC,EAAE,CAAC;AAQZ,IAAM,gBAAN,MAAM,eAAc;AAAA,MAChB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAe,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAClK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,gBAAe,cAAc,MAAM,UAAU,mBAAmB,MAAM,EAAE,gBAAgB,sBAAsB,GAAG,UAAU,aAAG,CAAC;AAAA,IAC1N;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAe,YAAY,CAAC;AAAA,MAC3G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,sBAAsB;AAAA,MAC3C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAYZ,IAAM,eAAN,MAAM,cAAa;AAAA,MACf,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACjK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,eAAc,cAAc,MAAM,UAAU,oCAAoC,MAAM,EAAE,gBAAgB,qCAAqC,GAAG,UAAU,aAAG,CAAC;AAAA,IACzP;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,cAAc,YAAY,CAAC;AAAA,MAC1G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,qCAAqC;AAAA,MAC1D,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAEZ,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,4CAA4C,MAAM,EAAE,gBAAgB,wCAAwC,GAAG,UAAU,aAAG,CAAC;AAAA,IACtQ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,wCAAwC;AAAA,MAC7D,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAEZ,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,6CAA6C,MAAM,EAAE,gBAAgB,wCAAwC,GAAG,UAAU,aAAG,CAAC;AAAA,IACvQ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,wCAAwC;AAAA,MAC7D,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAEZ,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,4CAA4C,MAAM,EAAE,gBAAgB,wCAAwC,GAAG,UAAU,aAAG,CAAC;AAAA,IACtQ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,wCAAwC;AAAA,MAC7D,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAEZ,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,6CAA6C,MAAM,EAAE,gBAAgB,wCAAwC,GAAG,UAAU,aAAG,CAAC;AAAA,IACvQ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,wCAAwC;AAAA,MAC7D,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAUZ,IAAM,gBAAN,MAAM,eAAc;AAAA,MAChB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAe,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAClK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,gBAAe,cAAc,MAAM,UAAU,sCAAsC,MAAM,EAAE,gBAAgB,sBAAsB,GAAG,UAAU,aAAG,CAAC;AAAA,IAC7O;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAe,YAAY,CAAC;AAAA,MAC3G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,sBAAsB;AAAA,MAC3C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAEZ,IAAM,kBAAkB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,IAAM,gBAAN,MAAM,eAAc;AAAA,MAChB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAe,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MACjK,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAe,SAAS;AAAA,QAAC;AAAA,QAAiB;AAAA,QACtI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAc,GAAG,SAAS;AAAA,QAAC;AAAA,QAC3B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAAgB;AAAA,MAAe,EAAE,CAAC;AAAA,MAC1C,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAe,SAAS,CAAC,iBAAiB,eAAe,EAAE,CAAC;AAAA,IACpK;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAe,YAAY,CAAC;AAAA,MAC3G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS,CAAC,iBAAiB,GAAG,eAAe;AAAA,QAC7C,SAAS,CAAC,iBAAiB,eAAe;AAAA,MAC9C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;;;AC/JZ,SAAS,yCAAyC;AAC9C,QAAM,MAAM,uEAAuE;AACvF;AA+YA,SAAS,kBAAkB,OAAO;AAC9B,QAAM,cAAc,OAAO,KAAK;AAChC,QAAM,SAAS,IAAI,aAAa;AAChC,SAAO;AAAA,IACH;AAAA,IACA,IAAI,QAAQ;AACR,aAAO,YAAY;AAAA,IACvB;AAAA,IACA;AAAA,IACA,cAAc;AACV,aAAO,SAAS;AAAA,IACpB;AAAA,EACJ;AACJ;AAuQA,SAAS,eAAe,OAAO,UAAU;AACrC,MAAI,IAAI,MAAM;AACd,SAAO,KAAK;AACR,aAAS,MAAM,CAAC,CAAC;AAAA,EACrB;AACJ;AAh0BA,IAiCM,cA4HA,oBA+QA,WA+GA,wBAQA,aAEA,uBAgBA,QA6QA;AAl0BN;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA,IAAM,eAAN,MAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOf;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,OAAO;AAAA;AAAA,MAEP,aAAa;AAAA;AAAA,MAEb,cAAc;AAAA;AAAA,MAEd,gBAAgB;AAAA;AAAA,MAEhB,eAAe;AAAA;AAAA,MAEf;AAAA;AAAA,MAEA,QAAQ;AAAA;AAAA,MAER,SAAS;AAAA;AAAA,MAET;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,OAAO;AAAA;AAAA,MAEP;AAAA;AAAA,MAEA,kBAAkB;AAAA;AAAA,MAElB,iBAAiB;AAAA;AAAA,MAEjB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASZ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,MAKf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKpB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOjB,4BAA4B;AAAA;AAAA;AAAA;AAAA,MAI5B,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,IACJ;AASA,IAAM,qBAAN,MAAM,4BAA2B,iBAAiB;AAAA,MAC9C,cAAc,OAAO,UAAU;AAAA,MAC/B,oBAAoB,OAAO,gBAAgB;AAAA,MAC3C;AAAA,MACA,wBAAwB,OAAO,oBAAoB;AAAA,MACnD,UAAU,OAAO,MAAM;AAAA,MACvB,gBAAgB,OAAO,YAAY;AAAA,MACnC,YAAY,OAAO,SAAS;AAAA,MAC5B,YAAY,OAAO,QAAQ;AAAA,MAC3B,YAAY,OAAO,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA;AAAA,MAE/C;AAAA;AAAA,MAEA,aAAa;AAAA;AAAA,MAEb,uCAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMvC,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOxB,uBAAuB,CAAC;AAAA,MACxB,qBAAqB,OAAO,iBAAiB;AAAA,MAC7C,YAAY,OAAO,QAAQ;AAAA,MAC3B,eAAe;AAAA,MACf,cAAc;AACV,cAAM;AAGN,aAAK,UAAW,OAAO,cAAc,EAAE,UAAU,KAAK,CAAC,KAAK,IAAI,aAAa;AAC7E,YAAI,KAAK,QAAQ,gBAAgB;AAC7B,eAAK,qBAAqB,KAAK,KAAK,QAAQ,cAAc;AAAA,QAC9D;AAAA,MACJ;AAAA,MACA,mBAAmB,IAAI;AACnB,aAAK,qBAAqB,KAAK,EAAE;AACjC,aAAK,mBAAmB,aAAa;AAAA,MACzC;AAAA,MACA,sBAAsB,IAAI;AACtB,cAAM,QAAQ,KAAK,qBAAqB,QAAQ,EAAE;AAClD,YAAI,QAAQ,IAAI;AACZ,eAAK,qBAAqB,OAAO,OAAO,CAAC;AACzC,eAAK,mBAAmB,aAAa;AAAA,QACzC;AAAA,MACJ;AAAA,MACA,mBAAmB;AACf,aAAK,qBAAqB;AAC1B,aAAK,qBAAqB;AAAA,MAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,uBAAuB;AACnB,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,cAAc;AACV,aAAK,eAAe;AACpB,aAAK,cAAc;AAAA,MACvB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,sBAAsB,QAAQ;AAC1B,YAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACrF,iDAAuC;AAAA,QAC3C;AACA,cAAM,SAAS,KAAK,cAAc,sBAAsB,MAAM;AAC9D,aAAK,iBAAiB;AACtB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAqB,QAAQ;AACzB,YAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACrF,iDAAuC;AAAA,QAC3C;AACA,cAAM,SAAS,KAAK,cAAc,qBAAqB,MAAM;AAC7D,aAAK,iBAAiB;AACtB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,kBAAkB,CAAC,WAAW;AAC1B,YAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACrF,iDAAuC;AAAA,QAC3C;AACA,cAAM,SAAS,KAAK,cAAc,gBAAgB,MAAM;AACxD,aAAK,iBAAiB;AACtB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA,MAGA,kBAAkB;AACd,YAAI,CAAC,KAAK,eAAe,GAAG;AACxB,eAAK,WAAW;AAAA,QACpB;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY,SAAS,SAAS;AAC1B,YAAI,CAAC,KAAK,sBAAsB,YAAY,OAAO,GAAG;AAClD,kBAAQ,WAAW;AAEnB,eAAK,QAAQ,kBAAkB,MAAM;AACjC,kBAAM,WAAW,MAAM;AACnB,6BAAe;AACf,kCAAoB;AACpB,sBAAQ,gBAAgB,UAAU;AAAA,YACtC;AACA,kBAAM,iBAAiB,KAAK,UAAU,OAAO,SAAS,QAAQ,QAAQ;AACtE,kBAAM,sBAAsB,KAAK,UAAU,OAAO,SAAS,aAAa,QAAQ;AAAA,UACpF,CAAC;AAAA,QACL;AACA,gBAAQ,MAAM,OAAO;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,oBAAoB,UAAU,SAAS;AACnC,YAAI,iBAAiB,KAAK,YAAY,cAAc,cAAc,QAAQ;AAC1E,YAAI,gBAAgB;AAChB,eAAK,YAAY,gBAAgB,OAAO;AAAA,QAC5C;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,WAAW,SAAS;AAChB,YAAI,KAAK,cAAc;AACnB;AAAA,QACJ;AAIA,wBAAgB,MAAM;AAClB,gBAAM,UAAU,KAAK,YAAY;AACjC,kBAAQ,KAAK,QAAQ,WAAW;AAAA,YAC5B,KAAK;AAAA,YACL,KAAK;AAMD,kBAAI,CAAC,KAAK,eAAe,GAAG;AACxB,wBAAQ,MAAM,OAAO;AAAA,cACzB;AACA;AAAA,YACJ,KAAK;AAAA,YACL,KAAK;AACD,oBAAM,sBAAsB,KAAK,YAAY,oBAAoB,OAAO;AAGxE,kBAAI,CAAC,qBAAqB;AACtB,qBAAK,sBAAsB,OAAO;AAAA,cACtC;AACA;AAAA,YACJ,KAAK;AACD,mBAAK,oBAAoB,4CAA4C,OAAO;AAC5E;AAAA,YACJ;AACI,mBAAK,oBAAoB,KAAK,QAAQ,WAAW,OAAO;AACxD;AAAA,UACR;AAAA,QACJ,GAAG,EAAE,UAAU,KAAK,UAAU,CAAC;AAAA,MACnC;AAAA;AAAA,MAEA,gBAAgB;AACZ,cAAM,cAAc,KAAK,QAAQ;AACjC,YAAI,qBAAqB;AACzB,YAAI,OAAO,gBAAgB,UAAU;AACjC,+BAAqB,KAAK,UAAU,cAAc,WAAW;AAAA,QACjE,WACS,OAAO,gBAAgB,WAAW;AACvC,+BAAqB,cAAc,KAAK,uCAAuC;AAAA,QACnF,WACS,aAAa;AAClB,+BAAqB;AAAA,QACzB;AAEA,YAAI,KAAK,QAAQ,gBACb,sBACA,OAAO,mBAAmB,UAAU,YAAY;AAChD,gBAAM,gBAAgB,kCAAkC;AACxD,gBAAM,UAAU,KAAK,YAAY;AAKjC,cAAI,CAAC,iBACD,kBAAkB,KAAK,UAAU,QACjC,kBAAkB,WAClB,QAAQ,SAAS,aAAa,GAAG;AACjC,gBAAI,KAAK,eAAe;AACpB,mBAAK,cAAc,SAAS,oBAAoB,KAAK,qBAAqB;AAC1E,mBAAK,wBAAwB;AAAA,YACjC,OACK;AACD,iCAAmB,MAAM;AAAA,YAC7B;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,KAAK,YAAY;AACjB,eAAK,WAAW,QAAQ;AAAA,QAC5B;AAAA,MACJ;AAAA;AAAA,MAEA,sBAAsB,SAAS;AAE3B,aAAK,YAAY,cAAc,QAAQ,OAAO;AAAA,MAClD;AAAA;AAAA,MAEA,iBAAiB;AACb,cAAM,UAAU,KAAK,YAAY;AACjC,cAAM,gBAAgB,kCAAkC;AACxD,eAAO,YAAY,iBAAiB,QAAQ,SAAS,aAAa;AAAA,MACtE;AAAA;AAAA,MAEA,uBAAuB;AACnB,YAAI,KAAK,UAAU,WAAW;AAC1B,eAAK,aAAa,KAAK,kBAAkB,OAAO,KAAK,YAAY,aAAa;AAG9E,cAAI,KAAK,WAAW;AAChB,iBAAK,uCAAuC,kCAAkC;AAAA,UAClF;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACvK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,qBAAoB,cAAc,MAAM,UAAU,wBAAwB,MAAM,EAAE,YAAY,EAAE,YAAY,KAAK,GAAG,YAAY,EAAE,WAAW,sBAAsB,aAAa,gBAAgB,mBAAmB,qBAAqB,wBAAwB,sDAAsD,mBAAmB,qBAAqB,yBAAyB,kCAAkC,GAAG,gBAAgB,uBAAuB,GAAG,aAAa,CAAC,EAAE,cAAc,iBAAiB,OAAO,MAAM,WAAW,iBAAiB,aAAa,MAAM,QAAQ,KAAK,CAAC,GAAG,iBAAiB,MAAM,UAAU,cAAI,UAAU,qCAAqC,QAAQ,CAAC,qGAAqG,GAAG,cAAc,CAAC,EAAE,MAAM,aAAa,MAAM,iBAAiB,UAAU,qBAAqB,QAAQ,CAAC,iBAAiB,GAAG,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC,GAAG,iBAAoB,wBAAwB,SAAS,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IACjnC;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAoB,YAAY,CAAC;AAAA,MAChH,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,wBAAwB,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,SAAS,SAAS,CAAC,eAAe,GAAG,MAAM;AAAA,QAC1J,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,eAAe;AAAA,QACf,qBAAqB;AAAA,QACrB,0BAA0B;AAAA,QAC1B,qBAAqB;AAAA,QACrB,2BAA2B;AAAA,MAC/B,GAAG,UAAU,qCAAqC,QAAQ,CAAC,qGAAqG,EAAE,CAAC;AAAA,IAC/K,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,eAAe,CAAC;AAAA,MACxD,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB,EAAE,QAAQ,KAAK,CAAC;AAAA,IAC5C,CAAC,EAAE,EAAE,CAAC;AAKlB,IAAM,YAAN,MAAgB;AAAA,MACZ;AAAA,MACA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,SAAS,IAAI,QAAQ;AAAA;AAAA,MAErB;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA,MACA,YAAY,YAAY,QAAQ;AAC5B,aAAK,aAAa;AAClB,aAAK,SAAS;AACd,aAAK,eAAe,OAAO;AAC3B,aAAK,gBAAgB,WAAW,cAAc;AAC9C,aAAK,gBAAgB,WAAW,cAAc;AAC9C,aAAK,uBAAuB,WAAW,qBAAqB;AAC5D,aAAK,KAAK,OAAO;AACjB,aAAK,cAAc,UAAU,WAAS;AAClC,cAAI,MAAM,YAAY,UAAU,CAAC,KAAK,gBAAgB,CAAC,eAAe,KAAK,GAAG;AAC1E,kBAAM,eAAe;AACrB,iBAAK,MAAM,QAAW,EAAE,aAAa,WAAW,CAAC;AAAA,UACrD;AAAA,QACJ,CAAC;AACD,aAAK,cAAc,UAAU,MAAM;AAC/B,cAAI,CAAC,KAAK,gBAAgB,KAAK,UAAU,GAAG;AACxC,iBAAK,MAAM,QAAW,EAAE,aAAa,QAAQ,CAAC;AAAA,UAClD,OACK;AAGD,iBAAK,kBAAkB,kBAAkB;AAAA,UAC7C;AAAA,QACJ,CAAC;AACD,aAAK,sBAAsB,WAAW,YAAY,EAAE,UAAU,MAAM;AAEhE,cAAI,OAAO,8BAA8B,OAAO;AAC5C,iBAAK,MAAM;AAAA,UACf;AAAA,QACJ,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,QAAQ,SAAS;AACnB,YAAI,KAAK,UAAU,MAAM,GAAG;AACxB,gBAAM,gBAAgB,KAAK;AAC3B,eAAK,kBAAkB,wBAAwB,SAAS,eAAe;AAGvE,eAAK,oBAAoB,YAAY;AACrC,eAAK,WAAW,QAAQ;AACxB,wBAAc,KAAK,MAAM;AACzB,wBAAc,SAAS;AACvB,eAAK,oBAAoB,KAAK,oBAAoB;AAAA,QACtD;AAAA,MACJ;AAAA;AAAA,MAEA,iBAAiB;AACb,aAAK,WAAW,eAAe;AAC/B,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,WAAW,QAAQ,IAAI,SAAS,IAAI;AAChC,aAAK,WAAW,WAAW,EAAE,OAAO,OAAO,CAAC;AAC5C,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,cAAc,SAAS;AACnB,aAAK,WAAW,cAAc,OAAO;AACrC,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,iBAAiB,SAAS;AACtB,aAAK,WAAW,iBAAiB,OAAO;AACxC,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,UAAU,QAAQ;AACd,cAAM,SAAS,KAAK;AACpB,eAAQ,CAAC,CAAC,KAAK,sBACV,CAAC,OAAO,kBAAkB,OAAO,eAAe,QAAQ,QAAQ,KAAK,iBAAiB;AAAA,MAC/F;AAAA,IACJ;AAGA,IAAM,yBAAyB,IAAI,eAAe,wBAAwB;AAAA,MACtE,YAAY;AAAA,MACZ,SAAS,MAAM;AACX,cAAM,WAAW,OAAO,QAAQ;AAChC,eAAO,MAAM,0BAA0B,QAAQ;AAAA,MACnD;AAAA,IACJ,CAAC;AAED,IAAM,cAAc,IAAI,eAAe,YAAY;AAEnD,IAAM,wBAAwB,IAAI,eAAe,qBAAqB;AAgBtE,IAAM,SAAN,MAAM,QAAO;AAAA,MACT,YAAY,OAAO,QAAQ;AAAA,MAC3B,kBAAkB,OAAO,uBAAuB,EAAE,UAAU,KAAK,CAAC;AAAA,MAClE,gBAAgB,OAAO,SAAQ,EAAE,UAAU,MAAM,UAAU,KAAK,CAAC;AAAA,MACjE,oBAAoB,OAAO,gBAAgB;AAAA,MAC3C,eAAe,OAAO,YAAY;AAAA,MAClC,0BAA0B,CAAC;AAAA,MAC3B,6BAA6B,IAAI,QAAQ;AAAA,MACzC,0BAA0B,IAAI,QAAQ;AAAA,MACtC,sBAAsB,oBAAI,IAAI;AAAA,MAC9B,kBAAkB,OAAO,sBAAsB;AAAA;AAAA,MAE/C,IAAI,cAAc;AACd,eAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,MACtE;AAAA;AAAA,MAEA,IAAI,cAAc;AACd,eAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,MACtE;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAiB,MAAM,MAAM,KAAK,YAAY,SACxC,KAAK,mBAAmB,IACxB,KAAK,mBAAmB,EAAE,KAAK,UAAU,MAAS,CAAC,CAAC;AAAA,MAC1D,cAAc;AAAA,MAAE;AAAA,MAChB,KAAK,wBAAwB,QAAQ;AACjC,cAAM,WAAY,KAAK,mBAAmB,IAAI,aAAa;AAC3D,iBAAS,kCAAK,WAAa;AAC3B,eAAO,KAAK,OAAO,MAAM,KAAK,aAAa,MAAM,aAAa;AAC9D,YAAI,OAAO,MACP,KAAK,cAAc,OAAO,EAAE,MAC3B,OAAO,cAAc,eAAe,YAAY;AACjD,gBAAM,MAAM,mBAAmB,OAAO,EAAE,iDAAiD;AAAA,QAC7F;AACA,cAAM,gBAAgB,KAAK,kBAAkB,MAAM;AACnD,cAAM,aAAa,iBAAiB,KAAK,WAAW,aAAa;AACjE,cAAM,YAAY,IAAI,UAAU,YAAY,MAAM;AAClD,cAAM,kBAAkB,KAAK,iBAAiB,YAAY,WAAW,MAAM;AAC3E,kBAAU,oBAAoB;AAC9B,aAAK,qBAAqB,wBAAwB,WAAW,iBAAiB,MAAM;AAEpF,YAAI,CAAC,KAAK,YAAY,QAAQ;AAC1B,eAAK,6CAA6C;AAAA,QACtD;AACA,aAAK,YAAY,KAAK,SAAS;AAC/B,kBAAU,OAAO,UAAU,MAAM,KAAK,kBAAkB,WAAW,IAAI,CAAC;AACxE,aAAK,YAAY,KAAK,SAAS;AAC/B,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,WAAW;AACP,uBAAe,KAAK,aAAa,YAAU,OAAO,MAAM,CAAC;AAAA,MAC7D;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,cAAc,IAAI;AACd,eAAO,KAAK,YAAY,KAAK,YAAU,OAAO,OAAO,EAAE;AAAA,MAC3D;AAAA,MACA,cAAc;AAIV,uBAAe,KAAK,yBAAyB,YAAU;AAEnD,cAAI,OAAO,OAAO,mBAAmB,OAAO;AACxC,iBAAK,kBAAkB,QAAQ,KAAK;AAAA,UACxC;AAAA,QACJ,CAAC;AAID,uBAAe,KAAK,yBAAyB,YAAU,OAAO,MAAM,CAAC;AACrE,aAAK,2BAA2B,SAAS;AACzC,aAAK,wBAAwB,SAAS;AACtC,aAAK,0BAA0B,CAAC;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,kBAAkB,QAAQ;AACtB,cAAM,QAAQ,IAAI,cAAc;AAAA,UAC5B,kBAAkB,OAAO,oBACrB,6BAA6B,EAAE,mBAAmB,EAAE,iBAAiB;AAAA,UACzE,gBAAgB,OAAO,kBAAkB,KAAK,gBAAgB;AAAA,UAC9D,YAAY,OAAO;AAAA,UACnB,aAAa,OAAO;AAAA,UACpB,WAAW,OAAO;AAAA,UAClB,UAAU,OAAO;AAAA,UACjB,WAAW,OAAO;AAAA,UAClB,UAAU,OAAO;AAAA,UACjB,WAAW,OAAO;AAAA,UAClB,OAAO,OAAO;AAAA,UACd,QAAQ,OAAO;AAAA,UACf,qBAAqB,OAAO;AAAA,UAC5B,mBAAmB,OAAO;AAAA,QAC9B,CAAC;AACD,YAAI,OAAO,eAAe;AACtB,gBAAM,gBAAgB,OAAO;AAAA,QACjC;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,iBAAiB,SAAS,WAAW,QAAQ;AACzC,cAAM,eAAe,OAAO,YAAY,OAAO,kBAAkB;AACjE,cAAM,YAAY;AAAA,UACd,EAAE,SAAS,cAAc,UAAU,OAAO;AAAA,UAC1C,EAAE,SAAS,WAAW,UAAU,UAAU;AAAA,UAC1C,EAAE,SAAS,YAAY,UAAU,QAAQ;AAAA,QAC7C;AACA,YAAI;AACJ,YAAI,OAAO,WAAW;AAClB,cAAI,OAAO,OAAO,cAAc,YAAY;AACxC,4BAAgB,OAAO;AAAA,UAC3B,OACK;AACD,4BAAgB,OAAO,UAAU;AACjC,sBAAU,KAAK,GAAG,OAAO,UAAU,UAAU,MAAM,CAAC;AAAA,UACxD;AAAA,QACJ,OACK;AACD,0BAAgB;AAAA,QACpB;AACA,cAAM,kBAAkB,IAAI,gBAAgB,eAAe,OAAO,kBAAkB,SAAS,OAAO,EAAE,QAAQ,gBAAgB,KAAK,WAAW,UAAU,CAAC,CAAC;AAC1J,cAAM,eAAe,QAAQ,OAAO,eAAe;AACnD,eAAO,aAAa;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,qBAAqB,wBAAwB,WAAW,iBAAiB,QAAQ;AAC7E,YAAI,kCAAkC,aAAa;AAC/C,gBAAM,WAAW,KAAK,gBAAgB,QAAQ,WAAW,iBAAiB,MAAS;AACnF,cAAI,UAAU,EAAE,WAAW,OAAO,MAAM,UAAU;AAClD,cAAI,OAAO,iBAAiB;AACxB,sBAAU,kCACH,UACC,OAAO,OAAO,oBAAoB,aAChC,OAAO,gBAAgB,IACvB,OAAO;AAAA,UAErB;AACA,0BAAgB,qBAAqB,IAAI,eAAe,wBAAwB,MAAM,SAAS,QAAQ,CAAC;AAAA,QAC5G,OACK;AACD,gBAAM,WAAW,KAAK,gBAAgB,QAAQ,WAAW,iBAAiB,KAAK,SAAS;AACxF,gBAAM,aAAa,gBAAgB,sBAAsB,IAAI,gBAAgB,wBAAwB,OAAO,kBAAkB,QAAQ,CAAC;AACvI,oBAAU,eAAe;AACzB,oBAAU,oBAAoB,WAAW;AAAA,QAC7C;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,gBAAgB,QAAQ,WAAW,iBAAiB,kBAAkB;AAClE,cAAM,eAAe,OAAO,YAAY,OAAO,kBAAkB;AACjE,cAAM,YAAY;AAAA,UACd,EAAE,SAAS,aAAa,UAAU,OAAO,KAAK;AAAA,UAC9C,EAAE,SAAS,WAAW,UAAU,UAAU;AAAA,QAC9C;AACA,YAAI,OAAO,WAAW;AAClB,cAAI,OAAO,OAAO,cAAc,YAAY;AACxC,sBAAU,KAAK,GAAG,OAAO,UAAU,WAAW,QAAQ,eAAe,CAAC;AAAA,UAC1E,OACK;AACD,sBAAU,KAAK,GAAG,OAAO,SAAS;AAAA,UACtC;AAAA,QACJ;AACA,YAAI,OAAO,cACN,CAAC,gBACE,CAAC,aAAa,IAAI,gBAAgB,MAAM,EAAE,UAAU,KAAK,CAAC,IAAI;AAClE,oBAAU,KAAK;AAAA,YACX,SAAS;AAAA,YACT,UAAU,kBAAkB,OAAO,SAAS;AAAA,UAChD,CAAC;AAAA,QACL;AACA,eAAO,SAAS,OAAO,EAAE,QAAQ,gBAAgB,kBAAkB,UAAU,CAAC;AAAA,MAClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,kBAAkB,WAAW,WAAW;AACpC,cAAM,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAChD,YAAI,QAAQ,IAAI;AACZ,eAAK,YAAY,OAAO,OAAO,CAAC;AAGhC,cAAI,CAAC,KAAK,YAAY,QAAQ;AAC1B,iBAAK,oBAAoB,QAAQ,CAAC,eAAe,YAAY;AACzD,kBAAI,eAAe;AACf,wBAAQ,aAAa,eAAe,aAAa;AAAA,cACrD,OACK;AACD,wBAAQ,gBAAgB,aAAa;AAAA,cACzC;AAAA,YACJ,CAAC;AACD,iBAAK,oBAAoB,MAAM;AAC/B,gBAAI,WAAW;AACX,mBAAK,mBAAmB,EAAE,KAAK;AAAA,YACnC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA,MAEA,+CAA+C;AAC3C,cAAM,mBAAmB,KAAK,kBAAkB,oBAAoB;AAEpE,YAAI,iBAAiB,eAAe;AAChC,gBAAM,WAAW,iBAAiB,cAAc;AAChD,mBAAS,IAAI,SAAS,SAAS,GAAG,IAAI,IAAI,KAAK;AAC3C,kBAAM,UAAU,SAAS,CAAC;AAC1B,gBAAI,YAAY,oBACZ,QAAQ,aAAa,YACrB,QAAQ,aAAa,WACrB,CAAC,QAAQ,aAAa,WAAW,GAAG;AACpC,mBAAK,oBAAoB,IAAI,SAAS,QAAQ,aAAa,aAAa,CAAC;AACzE,sBAAQ,aAAa,eAAe,MAAM;AAAA,YAC9C;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,qBAAqB;AACjB,cAAM,SAAS,KAAK;AACpB,eAAO,SAAS,OAAO,mBAAmB,IAAI,KAAK;AAAA,MACvD;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,SAAQ,MAAM,CAAC,GAAG,QAAW,cAAgB,WAAW,CAAC;AAAA,MAC5J,OAAO,aAAW,gCAAsB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,SAAQ,YAAY,OAAO,CAAC;AAAA,IACvI;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,QAAQ,YAAY,CAAC;AAAA,MACpG,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,YAAY,OAAO,CAAC;AAAA,IACjC,CAAC,GAAG,gBAAgB,MAAM,CAAC,EAAE,CAAC;AAYtC,IAAM,eAAN,MAAM,cAAa;AAAA,MACf,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MAChK,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,SAAS,CAAC,eAAe,cAAc,YAAY,kBAAkB,GAAG,SAAS;AAAA;AAAA;AAAA,QAG3L;AAAA,QACA;AAAA,MAAkB,EAAE,CAAC;AAAA,MAC7B,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,WAAW,CAAC,MAAM,GAAG,SAAS;AAAA,QAAC;AAAA,QAAe;AAAA,QAAc;AAAA;AAAA;AAAA,QAGtK;AAAA,MAAY,EAAE,CAAC;AAAA,IAC3B;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,cAAc,YAAY,CAAC;AAAA,MAC1G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS,CAAC,eAAe,cAAc,YAAY,kBAAkB;AAAA,QACrE,SAAS;AAAA;AAAA;AAAA,UAGL;AAAA,UACA;AAAA,QACJ;AAAA,QACA,WAAW,CAAC,MAAM;AAAA,MACtB,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;;;ACniBZ,SAAS,aAAa,MAAM;AACxB,MAAI,QAAQ,MAAM;AACd,WAAO;AAAA,EACX;AACA,MAAI,OAAO,SAAS,UAAU;AAC1B,WAAO;AAAA,EACX;AACA,MAAI,KAAK,SAAS,IAAI,GAAG;AACrB,WAAO,qBAAqB,KAAK,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC;AAAA,EAClE;AACA,MAAI,KAAK,SAAS,GAAG,GAAG;AACpB,WAAO,qBAAqB,KAAK,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC,IAAI;AAAA,EACtE;AACA,MAAI,SAAS,KAAK;AACd,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAiMA,SAAS,gBAAgB,KAAK,iBAAiB,QAAQ;AACnD,MAAI,wBAAwB;AAC5B,SAAO,IAAI,MAAM,MAAM;AAC3B;AAwUA,SAAS,iBAAiB,SAAS,aAAa;AAC5C,MAAI,SAAS,QAAQ,cAAc;AACnC,SAAO,UAAU,CAAC,OAAO,UAAU,SAAS,0BAA0B,GAAG;AACrE,aAAS,OAAO;AAAA,EACpB;AACA,SAAO,SAAS,YAAY,KAAK,YAAU,OAAO,OAAO,OAAO,EAAE,IAAI;AAC1E;AA11BA,IAkBM,iBA6FA,YAEA,eAEA,eAEA,yBAEA,0BACA,oBAwLA,8BA0BF,gBASE,cA4LA,iBAEA,4BAEA,4BAUA,WA0IA,gBA6DA,wBAkCA,gBA6BA,kBAgBA,kBAyCA,YAOA;AAn2BN;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAM,kBAAN,MAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOlB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,OAAO;AAAA;AAAA,MAEP,aAAa;AAAA;AAAA,MAEb,cAAc;AAAA;AAAA,MAEd,gBAAgB;AAAA;AAAA,MAEhB,eAAe;AAAA;AAAA,MAEf;AAAA;AAAA,MAEA,QAAQ;AAAA;AAAA,MAER,SAAS;AAAA;AAAA,MAET;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,OAAO;AAAA;AAAA,MAEP;AAAA;AAAA,MAEA,kBAAkB;AAAA;AAAA,MAElB,iBAAiB;AAAA;AAAA,MAEjB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,MAKZ,eAAe;AAAA;AAAA,MAEf,iBAAiB;AAAA;AAAA,MAEjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA,IACJ;AAGA,IAAM,aAAa;AAEnB,IAAM,gBAAgB;AAEtB,IAAM,gBAAgB;AAEtB,IAAM,0BAA0B;AAEhC,IAAM,2BAA2B;AACjC,IAAM,qBAAN,MAAM,4BAA2B,mBAAmB;AAAA;AAAA,MAEhD,yBAAyB,IAAI,aAAa;AAAA;AAAA,MAE1C,qBAAqB,CAAC,oBAAoB;AAAA;AAAA,MAE1C,sBAAsB;AAAA;AAAA,MAEtB,eAAe,KAAK,YAAY;AAAA;AAAA,MAEhC,0BAA0B,KAAK,qBACxB,aAAa,KAAK,QAAQ,sBAAsB,KAAK,0BACtD;AAAA;AAAA,MAEN,yBAAyB,KAAK,qBACvB,aAAa,KAAK,QAAQ,qBAAqB,KAAK,2BACrD;AAAA;AAAA,MAEN,kBAAkB;AAAA,MAClB,mBAAmB;AAGf,cAAM,iBAAiB;AAOvB,aAAK,oBAAoB;AAAA,MAC7B;AAAA;AAAA,MAEA,sBAAsB;AAClB,aAAK,uBAAuB,KAAK,EAAE,OAAO,WAAW,WAAW,KAAK,wBAAwB,CAAC;AAC9F,YAAI,KAAK,oBAAoB;AACzB,eAAK,aAAa,MAAM,YAAY,8BAA8B,GAAG,KAAK,uBAAuB,IAAI;AAIrG,eAAK,uBAAuB,MAAM,KAAK,aAAa,UAAU,IAAI,eAAe,UAAU,CAAC;AAC5F,eAAK,4BAA4B,KAAK,yBAAyB,KAAK,iBAAiB;AAAA,QACzF,OACK;AACD,eAAK,aAAa,UAAU,IAAI,UAAU;AAK1C,kBAAQ,QAAQ,EAAE,KAAK,MAAM,KAAK,kBAAkB,CAAC;AAAA,QACzD;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,sBAAsB;AAClB,aAAK,uBAAuB,KAAK,EAAE,OAAO,WAAW,WAAW,KAAK,uBAAuB,CAAC;AAC7F,aAAK,aAAa,UAAU,OAAO,UAAU;AAC7C,YAAI,KAAK,oBAAoB;AACzB,eAAK,aAAa,MAAM,YAAY,8BAA8B,GAAG,KAAK,sBAAsB,IAAI;AAEpG,eAAK,uBAAuB,MAAM,KAAK,aAAa,UAAU,IAAI,aAAa,CAAC;AAChF,eAAK,4BAA4B,KAAK,wBAAwB,KAAK,kBAAkB;AAAA,QACzF,OACK;AAkBD,kBAAQ,QAAQ,EAAE,KAAK,MAAM,KAAK,mBAAmB,CAAC;AAAA,QAC1D;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,0BAA0B,OAAO;AAC7B,aAAK,uBAAuB;AAC5B,aAAK,mBAAmB,aAAa;AAAA,MACzC;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,oBAAoB,MAAM;AACtB,aAAK,uBAAuB;AAC5B,aAAK,mBAAmB,KAAK,uBAAuB;AAAA,MACxD;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAqB,MAAM;AACvB,aAAK,uBAAuB;AAC5B,aAAK,uBAAuB,KAAK,EAAE,OAAO,UAAU,WAAW,KAAK,uBAAuB,CAAC;AAAA,MAChG;AAAA;AAAA,MAEA,yBAAyB;AACrB,aAAK,aAAa,UAAU,OAAO,eAAe,aAAa;AAAA,MACnE;AAAA,MACA,4BAA4B,UAAU,UAAU;AAC5C,YAAI,KAAK,oBAAoB,MAAM;AAC/B,uBAAa,KAAK,eAAe;AAAA,QACrC;AAGA,aAAK,kBAAkB,WAAW,UAAU,QAAQ;AAAA,MACxD;AAAA;AAAA,MAEA,uBAAuB,UAAU;AAC7B,aAAK,QAAQ,kBAAkB,MAAM;AACjC,cAAI,OAAO,0BAA0B,YAAY;AAC7C,kCAAsB,QAAQ;AAAA,UAClC,OACK;AACD,qBAAS;AAAA,UACb;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,uBAAuB;AACnB,YAAI,CAAC,KAAK,QAAQ,gBAAgB;AAC9B,eAAK,WAAW;AAAA,QACpB;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,mBAAmB,WAAW;AAC1B,YAAI,KAAK,QAAQ,gBAAgB;AAC7B,eAAK,WAAW;AAAA,QACpB;AACA,aAAK,uBAAuB,KAAK,EAAE,OAAO,UAAU,UAAU,CAAC;AAAA,MACnE;AAAA,MACA,cAAc;AACV,cAAM,YAAY;AAClB,YAAI,KAAK,oBAAoB,MAAM;AAC/B,uBAAa,KAAK,eAAe;AAAA,QACrC;AAAA,MACJ;AAAA,MACA,sBAAsB,QAAQ;AAS1B,cAAM,MAAM,MAAM,sBAAsB,MAAM;AAC9C,YAAI,SAAS,cAAc,UAAU,IAAI,+BAA+B;AACxE,eAAO;AAAA,MACX;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,MAAM,MAAM,QAAW,cAAgB,UAAU,CAAC;AAAA,MACzK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,qBAAoB,cAAc,MAAM,UAAU,wBAAwB,MAAM,EAAE,YAAY,EAAE,YAAY,KAAK,GAAG,YAAY,EAAE,mBAAmB,qBAAqB,MAAM,cAAc,aAAa,gBAAgB,wBAAwB,sDAAsD,mBAAmB,qBAAqB,yBAAyB,mCAAmC,iCAAiC,uBAAuB,+CAA+C,0BAA0B,GAAG,gBAAgB,sCAAsC,GAAG,iBAAiB,MAAM,UAAU,cAAI,UAAU,2LAA+L,QAAQ,CAAC,ojKAAwjK,GAAG,cAAc,CAAC,EAAE,MAAM,aAAa,MAAM,iBAAiB,UAAU,qBAAqB,QAAQ,CAAC,iBAAiB,GAAG,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC,GAAG,iBAAoB,wBAAwB,SAAS,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IACtuM;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAoB,YAAY,CAAC;AAAA,MAChH,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,wBAAwB,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,SAAS,SAAS,CAAC,eAAe,GAAG,MAAM;AAAA,QAC1J,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,qBAAqB;AAAA,QACrB,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,0BAA0B;AAAA,QAC1B,qBAAqB;AAAA,QACrB,2BAA2B;AAAA,QAC3B,mCAAmC;AAAA,QACnC,iDAAiD;AAAA,MACrD,GAAG,UAAU,2LAA+L,QAAQ,CAAC,ojKAAwjK,EAAE,CAAC;AAAA,IAC5xK,CAAC,EAAE,CAAC;AACZ,IAAM,+BAA+B;AA2BrC,KAAC,SAAUA,iBAAgB;AACvB,MAAAA,gBAAeA,gBAAe,MAAM,IAAI,CAAC,IAAI;AAC7C,MAAAA,gBAAeA,gBAAe,SAAS,IAAI,CAAC,IAAI;AAChD,MAAAA,gBAAeA,gBAAe,QAAQ,IAAI,CAAC,IAAI;AAAA,IACnD,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAI1C,IAAM,eAAN,MAAmB;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,eAAe,IAAI,QAAQ;AAAA;AAAA,MAE3B,gBAAgB,IAAI,QAAQ;AAAA;AAAA,MAE5B;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,SAAS,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxB;AAAA,MACA,YAAY,MAAM,SAAS,oBAAoB;AAC3C,aAAK,OAAO;AACZ,aAAK,UAAU;AACf,aAAK,qBAAqB;AAC1B,aAAK,eAAe,QAAQ;AAC5B,aAAK,KAAK,KAAK;AAEf,aAAK,cAAc,sBAAsB;AAEzC,2BAAmB,uBACd,KAAK,OAAO,WAAS,MAAM,UAAU,QAAQ,GAAG,KAAK,CAAC,CAAC,EACvD,UAAU,MAAM;AACjB,eAAK,aAAa,KAAK;AACvB,eAAK,aAAa,SAAS;AAAA,QAC/B,CAAC;AAED,2BAAmB,uBACd,KAAK,OAAO,WAAS,MAAM,UAAU,QAAQ,GAAG,KAAK,CAAC,CAAC,EACvD,UAAU,MAAM;AACjB,uBAAa,KAAK,qBAAqB;AACvC,eAAK,mBAAmB;AAAA,QAC5B,CAAC;AACD,aAAK,WAAW,YAAY,EAAE,UAAU,MAAM;AAC1C,eAAK,cAAc,KAAK,KAAK,OAAO;AACpC,eAAK,cAAc,SAAS;AAC5B,eAAK,mBAAmB;AAAA,QAC5B,CAAC;AACD,cAAM,KAAK,cAAc,GAAG,KAAK,cAAc,EAAE,KAAK,OAAO,WAAS,MAAM,YAAY,UAAU,CAAC,KAAK,gBAAgB,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,WAAS;AACjK,cAAI,CAAC,KAAK,cAAc;AACpB,kBAAM,eAAe;AACrB,4BAAgB,MAAM,MAAM,SAAS,YAAY,aAAa,OAAO;AAAA,UACzE;AAAA,QACJ,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,MAAM,cAAc;AAChB,cAAM,iBAAiB,KAAK,QAAQ;AACpC,YAAI,kBAAkB,CAAC,eAAe,cAAc,KAAK,SAAS,KAAK,iBAAiB,GAAG;AACvF;AAAA,QACJ;AACA,aAAK,UAAU;AAEf,aAAK,mBAAmB,uBACnB,KAAK,OAAO,WAAS,MAAM,UAAU,SAAS,GAAG,KAAK,CAAC,CAAC,EACxD,UAAU,WAAS;AACpB,eAAK,cAAc,KAAK,YAAY;AACpC,eAAK,cAAc,SAAS;AAC5B,eAAK,KAAK,WAAW,eAAe;AAMpC,eAAK,wBAAwB,WAAW,MAAM,KAAK,mBAAmB,GAAG,MAAM,YAAY,GAAG;AAAA,QAClG,CAAC;AACD,aAAK,SAAS,eAAe;AAC7B,aAAK,mBAAmB,oBAAoB;AAAA,MAChD;AAAA;AAAA;AAAA;AAAA,MAIA,cAAc;AACV,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,cAAc;AACV,eAAO,KAAK,KAAK;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA,MAIA,eAAe;AACX,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,gBAAgB;AACZ,eAAO,KAAK,KAAK;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA,MAIA,gBAAgB;AACZ,eAAO,KAAK,KAAK;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,eAAe,UAAU;AACrB,YAAI,WAAW,KAAK,KAAK,OAAO;AAChC,YAAI,aAAa,SAAS,QAAQ,SAAS,QAAQ;AAC/C,mBAAS,OAAO,SAAS,KAAK,SAAS,IAAI,IAAI,SAAS,MAAM,SAAS,KAAK;AAAA,QAChF,OACK;AACD,mBAAS,mBAAmB;AAAA,QAChC;AACA,YAAI,aAAa,SAAS,OAAO,SAAS,SAAS;AAC/C,mBAAS,MAAM,SAAS,IAAI,SAAS,GAAG,IAAI,SAAS,OAAO,SAAS,MAAM;AAAA,QAC/E,OACK;AACD,mBAAS,iBAAiB;AAAA,QAC9B;AACA,aAAK,KAAK,eAAe;AACzB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,WAAW,QAAQ,IAAI,SAAS,IAAI;AAChC,aAAK,KAAK,WAAW,OAAO,MAAM;AAClC,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,cAAc,SAAS;AACnB,aAAK,KAAK,cAAc,OAAO;AAC/B,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,iBAAiB,SAAS;AACtB,aAAK,KAAK,iBAAiB,OAAO;AAClC,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,WAAW;AACP,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAqB;AACjB,aAAK,SAAS,eAAe;AAC7B,aAAK,KAAK,MAAM,KAAK,SAAS,EAAE,aAAa,KAAK,sBAAsB,CAAC;AACzE,aAAK,oBAAoB;AAAA,MAC7B;AAAA,IACJ;AAaA,IAAM,kBAAkB,IAAI,eAAe,kBAAkB;AAE7D,IAAM,6BAA6B,IAAI,eAAe,gCAAgC;AAEtF,IAAM,6BAA6B,IAAI,eAAe,kCAAkC;AAAA,MACpF,YAAY;AAAA,MACZ,SAAS,MAAM;AACX,cAAM,WAAW,OAAO,QAAQ;AAChC,eAAO,MAAM,0BAA0B,QAAQ;AAAA,MACnD;AAAA,IACJ,CAAC;AAID,IAAM,YAAN,MAAM,WAAU;AAAA,MACZ,kBAAkB,OAAO,4BAA4B,EAAE,UAAU,KAAK,CAAC;AAAA,MACvE,kBAAkB,OAAO,0BAA0B;AAAA,MACnD,gBAAgB,OAAO,YAAW,EAAE,UAAU,MAAM,UAAU,KAAK,CAAC;AAAA,MACpE,eAAe,OAAO,YAAY;AAAA,MAClC,YAAY,OAAO,QAAQ;AAAA,MAC3B,UAAU,OAAO,MAAM;AAAA,MACvB,sBAAsB,oBAAoB;AAAA,MAC1C,0BAA0B,CAAC;AAAA,MAC3B,6BAA6B,IAAI,QAAQ;AAAA,MACzC,0BAA0B,IAAI,QAAQ;AAAA,MACtC,oBAAoB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA,IAAI,cAAc;AACd,eAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,MACtE;AAAA;AAAA,MAEA,IAAI,cAAc;AACd,eAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,MACtE;AAAA,MACA,qBAAqB;AACjB,cAAM,SAAS,KAAK;AACpB,eAAO,SAAS,OAAO,mBAAmB,IAAI,KAAK;AAAA,MACvD;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAiB,MAAM,MAAM,KAAK,YAAY,SACxC,KAAK,mBAAmB,IACxB,KAAK,mBAAmB,EAAE,KAAK,UAAU,MAAS,CAAC,CAAC;AAAA,MAC1D,cAAc;AACV,aAAK,wBAAwB;AAC7B,aAAK,uBAAuB;AAC5B,aAAK,mBAAmB;AAAA,MAC5B;AAAA,MACA,KAAK,wBAAwB,QAAQ;AACjC,YAAI;AACJ,iBAAS,kCAAM,KAAK,mBAAmB,IAAI,gBAAgB,IAAO;AAClE,eAAO,KAAK,OAAO,MAAM,KAAK,aAAa,MAAM,iBAAiB;AAClE,eAAO,iBAAiB,OAAO,kBAAkB,KAAK,gBAAgB;AACtE,cAAM,SAAS,KAAK,QAAQ,KAAK,wBAAwB,iCAClD,SADkD;AAAA,UAErD,kBAAkB,6BAA6B,KAAK,SAAS,EACxD,mBAAmB,EACnB,iBAAiB;AAAA;AAAA,UAEtB,cAAc;AAAA;AAAA,UAEd,gBAAgB;AAAA;AAAA;AAAA;AAAA,UAIhB,gBAAgB;AAAA;AAAA;AAAA,UAGhB,2BAA2B;AAAA,UAC3B,mBAAmB,KAAK,uBACpB,OAAO,wBAAwB,eAAe,MAAM,OACpD,OAAO,uBAAuB,SAAS,MAAM;AAAA,UACjD,WAAW;AAAA,YACP,MAAM,KAAK;AAAA,YACX,WAAW,MAAM;AAAA;AAAA;AAAA;AAAA,cAIb,EAAE,SAAS,KAAK,mBAAmB,UAAU,OAAO;AAAA,cACpD,EAAE,SAAS,cAAc,UAAU,OAAO;AAAA,YAC9C;AAAA,UACJ;AAAA,UACA,iBAAiB,OAAO,EAAE,UAAU;AAAA,UACpC,WAAW,CAAC,KAAK,WAAW,oBAAoB;AAC5C,wBAAY,IAAI,KAAK,sBAAsB,KAAK,QAAQ,eAAe;AACvE,sBAAU,eAAe,QAAQ,QAAQ;AACzC,mBAAO;AAAA,cACH,EAAE,SAAS,KAAK,sBAAsB,UAAU,gBAAgB;AAAA,cAChE,EAAE,SAAS,KAAK,kBAAkB,UAAU,UAAU,KAAK;AAAA,cAC3D,EAAE,SAAS,KAAK,uBAAuB,UAAU,UAAU;AAAA,YAC/D;AAAA,UACJ;AAAA,QACJ,EAAC;AAGD,kBAAU,eAAe,OAAO;AAChC,kBAAU,oBAAoB,OAAO;AACrC,aAAK,YAAY,KAAK,SAAS;AAC/B,aAAK,YAAY,KAAK,SAAS;AAC/B,kBAAU,YAAY,EAAE,UAAU,MAAM;AACpC,gBAAM,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAChD,cAAI,QAAQ,IAAI;AACZ,iBAAK,YAAY,OAAO,OAAO,CAAC;AAChC,gBAAI,CAAC,KAAK,YAAY,QAAQ;AAC1B,mBAAK,mBAAmB,EAAE,KAAK;AAAA,YACnC;AAAA,UACJ;AAAA,QACJ,CAAC;AACD,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,WAAW;AACP,aAAK,cAAc,KAAK,WAAW;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,cAAc,IAAI;AACd,eAAO,KAAK,YAAY,KAAK,YAAU,OAAO,OAAO,EAAE;AAAA,MAC3D;AAAA,MACA,cAAc;AAGV,aAAK,cAAc,KAAK,uBAAuB;AAC/C,aAAK,2BAA2B,SAAS;AACzC,aAAK,wBAAwB,SAAS;AAAA,MAC1C;AAAA,MACA,cAAc,SAAS;AACnB,YAAI,IAAI,QAAQ;AAChB,eAAO,KAAK;AACR,kBAAQ,CAAC,EAAE,MAAM;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,YAAW,MAAM,CAAC,GAAG,QAAW,cAAgB,WAAW,CAAC;AAAA,MAC/J,OAAO,aAAW,gCAAsB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,YAAW,YAAY,OAAO,CAAC;AAAA,IAC1I;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,WAAW,YAAY,CAAC;AAAA,MACvG,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,YAAY,OAAO,CAAC;AAAA,IACjC,CAAC,GAAG,gBAAgB,MAAM,CAAC,EAAE,CAAC;AAKtC,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,YAAY,OAAO,cAAc,EAAE,UAAU,KAAK,CAAC;AAAA,MACnD,cAAc,OAAO,UAAU;AAAA,MAC/B,UAAU,OAAO,SAAS;AAAA;AAAA,MAE1B;AAAA;AAAA,MAEA,OAAO;AAAA;AAAA,MAEP;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MAAE;AAAA,MAChB,WAAW;AACP,YAAI,CAAC,KAAK,WAAW;AAMjB,eAAK,YAAY,iBAAiB,KAAK,aAAa,KAAK,QAAQ,WAAW;AAAA,QAChF;AAAA,MACJ;AAAA,MACA,YAAY,SAAS;AACjB,cAAM,gBAAgB,QAAQ,iBAAiB,KAAK,QAAQ,uBAAuB;AACnF,YAAI,eAAe;AACf,eAAK,eAAe,cAAc;AAAA,QACtC;AAAA,MACJ;AAAA,MACA,eAAe,OAAO;AAKlB,wBAAgB,KAAK,WAAW,MAAM,YAAY,KAAK,MAAM,YAAY,IAAI,aAAa,SAAS,KAAK,YAAY;AAAA,MACxH;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,wCAAwC,QAAQ,EAAE,WAAW,CAAC,cAAc,WAAW,GAAG,MAAM,QAAQ,cAAc,CAAC,oBAAoB,cAAc,GAAG,iBAAiB,CAAC,kBAAkB,iBAAiB,EAAE,GAAG,MAAM,EAAE,WAAW,EAAE,SAAS,yBAAyB,GAAG,YAAY,EAAE,mBAAmB,qBAAqB,aAAa,OAAO,EAAE,GAAG,UAAU,CAAC,gBAAgB,GAAG,eAAe,MAAM,UAAU,aAAG,CAAC;AAAA,IACziB;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,MAAM;AAAA,UACF,WAAW;AAAA,UACX,qBAAqB;AAAA,UACrB,eAAe;AAAA,QACnB;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,WAAW,CAAC;AAAA,MACpD,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACvB,CAAC,GAAG,MAAM,CAAC;AAAA,MACP,MAAM;AAAA,IACV,CAAC,GAAG,cAAc,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC7B,CAAC,GAAG,iBAAiB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IAC3B,CAAC,EAAE,EAAE,CAAC;AAClB,IAAM,yBAAN,MAAM,wBAAuB;AAAA,MACzB,aAAa,OAAO,cAAc,EAAE,UAAU,KAAK,CAAC;AAAA,MACpD,cAAc,OAAO,UAAU;AAAA,MAC/B,UAAU,OAAO,SAAS;AAAA,MAC1B,cAAc;AAAA,MAAE;AAAA,MAChB,WAAW;AACP,YAAI,CAAC,KAAK,YAAY;AAClB,eAAK,aAAa,iBAAiB,KAAK,aAAa,KAAK,QAAQ,WAAW;AAAA,QACjF;AACA,YAAI,KAAK,YAAY;AACjB,kBAAQ,QAAQ,EAAE,KAAK,MAAM;AACzB,iBAAK,OAAO;AAAA,UAChB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,cAAc;AAGV,cAAM,WAAW,KAAK,YAAY;AAClC,YAAI,UAAU;AACV,kBAAQ,QAAQ,EAAE,KAAK,MAAM;AACzB,iBAAK,UAAU;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,yBAAwB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC3K,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,yBAAwB,cAAc,MAAM,UAAU,aAAG,CAAC;AAAA,IACrJ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,wBAAwB,YAAY,CAAC;AAAA,MACpH,MAAM;AAAA,IACV,CAAC,GAAG,gBAAgB,MAAM,CAAC,EAAE,CAAC;AAItC,IAAM,iBAAN,MAAM,wBAAuB,uBAAuB;AAAA,MAChD,KAAK,OAAO,YAAY,EAAE,MAAM,uBAAuB;AAAA,MACvD,SAAS;AAGL,aAAK,WAAW,oBAAoB,qBAAqB,KAAK,EAAE;AAAA,MACpE;AAAA,MACA,YAAY;AACR,aAAK,YAAY,oBAAoB,wBAAwB,KAAK,EAAE;AAAA,MACxE;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,MAAM,QAAW,cAAgB,UAAU,CAAC;AAAA,MACrK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,wCAAwC,QAAQ,EAAE,IAAI,KAAK,GAAG,MAAM,EAAE,YAAY,EAAE,MAAM,KAAK,GAAG,gBAAgB,yCAAyC,GAAG,UAAU,CAAC,gBAAgB,GAAG,iBAAiB,MAAM,UAAU,aAAG,CAAC;AAAA,IAC1W;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,MAAM;AAAA,UACF,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,EAAE,IAAI,CAAC;AAAA,MACnB,MAAM;AAAA,IACV,CAAC,EAAE,EAAE,CAAC;AAIlB,IAAM,mBAAN,MAAM,kBAAiB;AAAA,MACnB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,mBAAkB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACrK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,mBAAkB,cAAc,MAAM,UAAU,gEAAgE,MAAM,EAAE,gBAAgB,6CAA6C,GAAG,gBAAgB,CAAC,EAAE,WAAc,cAAc,CAAC,GAAG,UAAU,aAAG,CAAC;AAAA,IACpV;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAkB,YAAY,CAAC;AAAA,MAC9G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM,EAAE,SAAS,6CAA6C;AAAA,QAC9D,gBAAgB,CAAC,aAAa;AAAA,MAClC,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAKZ,IAAM,mBAAN,MAAM,0BAAyB,uBAAuB;AAAA;AAAA;AAAA;AAAA,MAIlD;AAAA,MACA,SAAS;AACL,aAAK,WAAW,oBAAoB,4BAA4B,CAAC;AAAA,MACrE;AAAA,MACA,YAAY;AACR,aAAK,WAAW,oBAAoB,4BAA4B,EAAE;AAAA,MACtE;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,mBAAkB,MAAM,MAAM,QAAW,cAAgB,UAAU,CAAC;AAAA,MACvK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,mBAAkB,cAAc,MAAM,UAAU,gEAAgE,QAAQ,EAAE,OAAO,QAAQ,GAAG,MAAM,EAAE,YAAY,EAAE,4CAA4C,qBAAuB,6CAA6C,sBAAwB,0CAA0C,kBAAoB,GAAG,gBAAgB,6CAA6C,GAAG,iBAAiB,MAAM,UAAU,aAAG,CAAC;AAAA,IAC3iB;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAkB,YAAY,CAAC;AAAA,MAC9G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM;AAAA,UACF,SAAS;AAAA,UACT,8CAA8C;AAAA,UAC9C,+CAA+C;AAAA,UAC/C,4CAA4C;AAAA,QAChD;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,EAAE,OAAO,CAAC;AAAA,MACtB,MAAM;AAAA,IACV,CAAC,EAAE,EAAE,CAAC;AAclB,IAAM,aAAa;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,IAAM,kBAAN,MAAM,iBAAgB;AAAA,MAClB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAiB,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MACnK,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAiB,SAAS;AAAA,QAAC;AAAA,QAAc;AAAA,QAAe;AAAA,QAAc;AAAA,QAAiB;AAAA,QACnL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAgB,GAAG,SAAS;AAAA,QAAC;AAAA,QAAiB;AAAA,QAC9C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAgB,EAAE,CAAC;AAAA,MAC3B,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAiB,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,eAAe,cAAc,iBAAiB,eAAe,EAAE,CAAC;AAAA,IACzO;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAiB,YAAY,CAAC;AAAA,MAC7G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS,CAAC,cAAc,eAAe,cAAc,iBAAiB,GAAG,UAAU;AAAA,QACnF,SAAS,CAAC,iBAAiB,GAAG,UAAU;AAAA,QACxC,WAAW,CAAC,SAAS;AAAA,MACzB,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;;;ACv3BZ,IAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAQM;AARN;AAAA;AAAA;AAAA;AACA;AAOA,IAAM,wBAAN,MAAM,uBAAsB;AAAA;AAAA,MAExB;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,wBAAuB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC1K,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,wBAAuB,cAAc,MAAM,UAAU,gCAAgC,QAAQ,EAAE,eAAe,gBAAgB,GAAG,MAAM,EAAE,YAAY,EAAE,mCAAmC,6BAA+B,GAAG,gBAAgB,yCAAyC,GAAG,UAAU,cAAI,UAAU,6BAA6B,UAAU,MAAM,QAAQ,CAAC,mmBAAmmB,GAAG,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IACroC;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,uBAAuB,YAAY,CAAC;AAAA,MACnH,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,gCAAgC,UAAU,6BAA6B,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,MAAM;AAAA,QAC5K,SAAS;AAAA,QACT,qCAAqC;AAAA,MACzC,GAAG,QAAQ,CAAC,mmBAAmmB,EAAE,CAAC;AAAA,IAC9nB,CAAC,GAAG,gBAAgB,EAAE,eAAe,CAAC;AAAA,MAC9B,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,KAAK,CAAC;AAAA,IAC7B,CAAC,EAAE,EAAE,CAAC;AAAA;AAAA;;;ACvBlB,IAgBM,kCAMA,sBAYA,gBAyQA;AA3SN;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,IAAM,mCAAmC,IAAI,eAAe,oCAAoC;AAAA,MAC5F,YAAY;AAAA,MACZ,SAAS,OAAO,EAAE,oBAAoB,OAAO,UAAU,OAAO,qBAAqB,MAAM;AAAA,IAC7F,CAAC;AAGD,IAAM,uBAAN,MAA2B;AAAA,MACvB;AAAA,MACA;AAAA,MACA,YAEA,QAEA,SAAS;AACL,aAAK,SAAS;AACd,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AACA,IAAM,iBAAN,MAAM,gBAAe;AAAA,MACjB,cAAc,OAAO,UAAU;AAAA,MAC/B,gBAAgB,OAAO,YAAY;AAAA,MACnC,qBAAqB,OAAO,iBAAiB;AAAA,MAC7C,WAAW,OAAO,gCAAgC;AAAA,MAClD,YAAY,CAAC,MAAM;AAAA,MAAE;AAAA,MACrB,aAAa,MAAM;AAAA,MAAE;AAAA,MACrB,qBAAqB,MAAM;AAAA,MAAE;AAAA,MAC7B;AAAA,MACA,WAAW;AAAA,MACX,mBAAmB,WAAW;AAC1B,eAAO,IAAI,qBAAqB,MAAM,SAAS;AAAA,MACnD;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,IAAI,WAAW;AACX,eAAO,GAAG,KAAK,MAAM,KAAK,SAAS;AAAA,MACvC;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,QAAQ;AACJ,aAAK,eAAe,cAAc,MAAM;AAAA,MAC5C;AAAA;AAAA,MAEA,kBAAkB,oBAAoB;AAAA;AAAA,MAEtC;AAAA;AAAA,MAEA,OAAO;AAAA;AAAA,MAEP;AAAA;AAAA,MAEA,gBAAgB;AAAA;AAAA,MAEhB,YAAY;AAAA;AAAA,MAEZ,iBAAiB;AAAA;AAAA,MAEjB;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA;AAAA;AAAA,MAEA,WAAW;AAAA;AAAA,MAEX,gBAAgB;AAAA;AAAA,MAEhB,WAAW;AAAA;AAAA,MAEX,IAAI,UAAU;AACV,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,QAAQ,OAAO;AACf,aAAK,WAAW;AAChB,aAAK,mBAAmB,aAAa;AAAA,MACzC;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,SAAS,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B,eAAe,IAAI,aAAa;AAAA;AAAA,MAEhC,IAAI,UAAU;AACV,eAAO,GAAG,KAAK,MAAM,KAAK,SAAS;AAAA,MACvC;AAAA,MACA,cAAc;AACV,eAAO,sBAAsB,EAAE,KAAK,uBAAuB;AAC3D,cAAM,WAAW,OAAO,IAAI,mBAAmB,UAAU,GAAG,EAAE,UAAU,KAAK,CAAC;AAC9E,cAAM,WAAW,KAAK;AACtB,aAAK,WAAW,YAAY,OAAO,IAAI,SAAS,QAAQ,KAAK;AAC7D,aAAK,QAAQ,SAAS,SAAS;AAC/B,aAAK,KAAK,KAAK,YAAY,OAAO,YAAY,EAAE,MAAM,uBAAuB;AAC7E,aAAK,WAAW,SAAS,YAAY;AACrC,aAAK,sBAAsB,SAAS,uBAAuB;AAC3D,aAAK,WAAW,KAAK,YAAY;AAAA,MACrC;AAAA,MACA,qBAAqB;AACjB,aAAK,cAAc,QAAQ,KAAK,aAAa,IAAI,EAAE,UAAU,iBAAe;AACxE,cAAI,gBAAgB,cAAc,gBAAgB,WAAW;AACzD,iBAAK,WAAW;AAChB,iBAAK,mBAAmB,aAAa;AAAA,UACzC,WACS,CAAC,aAAa;AAMnB,oBAAQ,QAAQ,EAAE,KAAK,MAAM;AACzB,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,mBAAmB,aAAa;AAAA,YACzC,CAAC;AAAA,UACL;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,YAAY,SAAS;AACjB,YAAI,QAAQ,UAAU,GAAG;AACrB,eAAK,mBAAmB;AAAA,QAC5B;AAAA,MACJ;AAAA,MACA,cAAc;AACV,aAAK,cAAc,eAAe,KAAK,WAAW;AAAA,MACtD;AAAA;AAAA,MAEA,WAAW,OAAO;AACd,aAAK,UAAU,CAAC,CAAC;AAAA,MACrB;AAAA;AAAA,MAEA,iBAAiB,IAAI;AACjB,aAAK,YAAY;AAAA,MACrB;AAAA;AAAA,MAEA,kBAAkB,IAAI;AAClB,aAAK,aAAa;AAAA,MACtB;AAAA;AAAA,MAEA,SAAS,SAAS;AACd,eAAO,KAAK,YAAY,QAAQ,UAAU,OAAO,EAAE,YAAY,KAAK,IAAI;AAAA,MAC5E;AAAA;AAAA,MAEA,0BAA0B,IAAI;AAC1B,aAAK,qBAAqB;AAAA,MAC9B;AAAA;AAAA,MAEA,iBAAiB,YAAY;AACzB,aAAK,WAAW;AAChB,aAAK,mBAAmB,aAAa;AAAA,MACzC;AAAA;AAAA,MAEA,SAAS;AACL,aAAK,UAAU,CAAC,KAAK;AACrB,aAAK,UAAU,KAAK,OAAO;AAAA,MAC/B;AAAA;AAAA;AAAA;AAAA,MAIA,mBAAmB;AACf,aAAK,UAAU,KAAK,OAAO;AAC3B,aAAK,OAAO,KAAK,KAAK,mBAAmB,KAAK,OAAO,CAAC;AAAA,MAC1D;AAAA;AAAA,MAEA,eAAe;AACX,YAAI,CAAC,KAAK,UAAU;AAChB,eAAK,aAAa,KAAK;AACvB,cAAI,CAAC,KAAK,SAAS,oBAAoB;AACnC,iBAAK,UAAU,CAAC,KAAK;AACrB,iBAAK,UAAU,KAAK,OAAO;AAC3B,iBAAK,OAAO,KAAK,IAAI,qBAAqB,MAAM,KAAK,OAAO,CAAC;AAAA,UACjE;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,qBAAqB;AACjB,YAAI,KAAK,gBAAgB;AACrB,iBAAO,KAAK;AAAA,QAChB;AAGA,eAAO,KAAK,YAAY,OAAO,KAAK;AAAA,MACxC;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,iBAAgB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,iBAAgB,cAAc,MAAM,UAAU,oBAAoB,QAAQ,EAAE,MAAM,QAAQ,IAAI,MAAM,eAAe,iBAAiB,WAAW,CAAC,cAAc,WAAW,GAAG,gBAAgB,CAAC,mBAAmB,gBAAgB,GAAG,iBAAiB,CAAC,oBAAoB,iBAAiB,GAAG,UAAU,CAAC,YAAY,YAAY,gBAAgB,GAAG,OAAO,SAAS,UAAU,CAAC,YAAY,YAAY,gBAAgB,GAAG,eAAe,CAAC,iBAAiB,iBAAiB,gBAAgB,GAAG,UAAU,CAAC,YAAY,YAAY,CAAC,UAAW,SAAS,OAAO,IAAI,gBAAgB,KAAK,CAAE,GAAG,SAAS,CAAC,WAAW,WAAW,gBAAgB,GAAG,UAAU,CAAC,YAAY,YAAY,gBAAgB,GAAG,qBAAqB,CAAC,uBAAuB,uBAAuB,gBAAgB,EAAE,GAAG,SAAS,EAAE,QAAQ,UAAU,cAAc,eAAe,GAAG,MAAM,EAAE,YAAY,EAAE,MAAM,MAAM,iBAAiB,QAAQ,mBAAmB,QAAQ,aAAa,QAAQ,wBAAwB,QAAQ,sCAAsC,YAAY,sCAAsC,WAAW,iCAAiC,mBAAmB,SAAS,8BAAkC,GAAG,gBAAgB,uBAAuB,GAAG,WAAW;AAAA,QAC9wC;AAAA,UACI,SAAS;AAAA,UACT,aAAa,WAAW,MAAM,eAAc;AAAA,UAC5C,OAAO;AAAA,QACX;AAAA,QACA;AAAA,UACI,SAAS;AAAA,UACT,aAAa;AAAA,UACb,OAAO;AAAA,QACX;AAAA,MACJ,GAAG,aAAa,CAAC,EAAE,cAAc,kBAAkB,OAAO,MAAM,WAAW,CAAC,QAAQ,GAAG,aAAa,KAAK,CAAC,GAAG,UAAU,CAAC,gBAAgB,GAAG,eAAe,MAAM,UAAU,cAAI,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAk7E,QAAQ,CAAC,q6gBAA66gB,GAAG,cAAc,CAAC,EAAE,MAAM,aAAa,MAAM,WAAW,UAAU,6BAA6B,QAAQ,CAAC,kBAAkB,sBAAsB,qBAAqB,mBAAmB,sBAAsB,qBAAqB,kBAAkB,GAAG,UAAU,CAAC,WAAW,EAAE,GAAG,EAAE,MAAM,aAAa,MAAM,uBAAuB,UAAU,gCAAgC,QAAQ,CAAC,eAAe,EAAE,CAAC,GAAG,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IACnhnB;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,gBAAgB,YAAY,CAAC;AAAA,MAC5G,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,oBAAoB,MAAM;AAAA,QACjC,SAAS;AAAA,QACT,QAAQ;AAAA;AAAA,QAER,mBAAmB;AAAA,QACnB,qBAAqB;AAAA,QACrB,eAAe;AAAA,QACf,0BAA0B;AAAA,QAC1B,wCAAwC;AAAA,QACxC,wCAAwC;AAAA,QACxC,mCAAmC;AAAA,QACnC,WAAW;AAAA,MACf,GAAG,UAAU,kBAAkB,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,WAAW;AAAA,QAC9H;AAAA,UACI,SAAS;AAAA,UACT,aAAa,WAAW,MAAM,cAAc;AAAA,UAC5C,OAAO;AAAA,QACX;AAAA,QACA;AAAA,UACI,SAAS;AAAA,UACT,aAAa;AAAA,UACb,OAAO;AAAA,QACX;AAAA,MACJ,GAAG,SAAS,CAAC,WAAW,qBAAqB,GAAG,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAk7E,QAAQ,CAAC,q6gBAA66gB,EAAE,CAAC;AAAA,IACj7lB,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,gBAAgB,CAAC;AAAA,MACzD,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACnB,CAAC,GAAG,MAAM,CAAC;AAAA,MACP,MAAM;AAAA,IACV,CAAC,GAAG,IAAI,CAAC;AAAA,MACL,MAAM;AAAA,IACV,CAAC,GAAG,eAAe,CAAC;AAAA,MAChB,MAAM;AAAA,IACV,CAAC,GAAG,WAAW,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACvB,CAAC,GAAG,gBAAgB,CAAC;AAAA,MACjB,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC5B,CAAC,GAAG,iBAAiB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC7B,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,OAAO,CAAC;AAAA,MACR,MAAM;AAAA,IACV,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,eAAe,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,CAAC,UAAW,SAAS,OAAO,IAAI,gBAAgB,KAAK,EAAG,CAAC;AAAA,IACjF,CAAC,GAAG,SAAS,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,qBAAqB,CAAC;AAAA,MACtB,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,QAAQ,CAAC;AAAA,MACT,MAAM;AAAA,IACV,CAAC,GAAG,cAAc,CAAC;AAAA,MACf,MAAM;AAAA,IACV,CAAC,EAAE,EAAE,CAAC;AAElB,IAAM,uBAAN,MAAM,sBAAqB;AAAA,MACvB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,uBAAsB,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MACxK,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,uBAAsB,SAAS,CAAC,gBAAgB,eAAe,GAAG,SAAS,CAAC,gBAAgB,eAAe,EAAE,CAAC;AAAA,MAClN,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,uBAAsB,SAAS,CAAC,gBAAgB,iBAAiB,eAAe,EAAE,CAAC;AAAA,IAC3L;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,sBAAsB,YAAY,CAAC;AAAA,MAClH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS,CAAC,gBAAgB,eAAe;AAAA,QACzC,SAAS,CAAC,gBAAgB,eAAe;AAAA,MAC7C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;;;ACtTZ;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAC;AAAA,IAAAC,sBAAA;AAAA;AAAA,IAAAD,yBAAA;AAAA;AAAA;;;ICiBM,aAiBO;;;;;;;AAlCb;AACA;AACA;AACA;AACA,IAAAE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,IAAM,cAAc;MAClB,YAAY;MACZ,QAAQ;;AAeH,IAAM,eAAN,MAAMC,cAAY;MAsHkB;MAA4B;MArHrE;;MAEA,aAAU;AACR,YAAI,CAAC,KAAK;AAAW;AACrB,YAAI,SAAS,EAAE,MAAM,CAAA,GAAI,YAAY,CAAA,GAAI,MAAM,CAAA,EAAE;AACjD,YAAI,QAAQ,CAAA;AACZ,YAAI,WAAW,CAAA;AACf,YAAI;AACF,mBAAS,KAAK,MAAM,aAAa,QAAQ,cAAc,KAAK,uCAAuC;QACrG,SAAS,GAAG;AACV,kBAAQ,MAAM,iCAAiC,CAAC;QAClD;AACA,YAAI;AACF,kBAAQ,KAAK,MAAM,aAAa,QAAQ,aAAa,KAAK,IAAI;QAChE,SAAS,GAAG;AACV,kBAAQ,MAAM,gCAAgC,CAAC;QACjD;AACA,YAAI;AACF,qBAAW,KAAK,MAAM,aAAa,QAAQ,UAAU,KAAK,IAAI;QAChE,SAAS,GAAG;AACV,kBAAQ,MAAM,6BAA6B,CAAC;QAC9C;AACA,cAAM,OAAO;UACX;UACA;UACA,OAAO,aAAa,QAAQ,eAAe,KAAK;UAChD;;AAEF,cAAM,OAAO,IAAI,KAAK,CAAC,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,mBAAkB,CAAE;AACnF,cAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,cAAM,IAAI,SAAS,cAAc,GAAG;AACpC,UAAE,OAAO;AACT,UAAE,WAAW;AACb,UAAE,MAAK;AACP,YAAI,gBAAgB,GAAG;MACzB;;MAGA,WAAW,OAAY;AACrB,YAAI,CAAC,KAAK;AAAW;AACrB,cAAM,QAAQ,MAAM;AACpB,YAAI,CAAC,MAAM,OAAO;AAAQ;AAC1B,cAAM,OAAO,MAAM,MAAM,CAAC;AAC1B,cAAM,SAAS,IAAI,WAAU;AAC7B,eAAO,SAAS,MAAK;AACnB,cAAI;AACF,kBAAM,OAAO,KAAK,MAAM,OAAO,MAAgB;AAC/C,gBAAI,KAAK;AAAQ,2BAAa,QAAQ,gBAAgB,KAAK,UAAU,KAAK,MAAM,CAAC;AACjF,gBAAI,KAAK;AAAO,2BAAa,QAAQ,eAAe,KAAK,UAAU,KAAK,KAAK,CAAC;AAC9E,gBAAI,OAAO,KAAK,UAAU;AAAU,2BAAa,QAAQ,iBAAiB,KAAK,KAAK;AACpF,gBAAI,KAAK;AAAU,2BAAa,QAAQ,YAAY,KAAK,UAAU,KAAK,QAAQ,CAAC;AACjF,kBAAM,6BAA6B;UACrC,SAAS,GAAG;AACV,kBAAM,yBAAyB;AAC/B,oBAAQ,MAAM,kCAAkC,CAAC;UACnD;QACF;AACA,eAAO,WAAW,IAAI;AAEtB,cAAM,QAAQ;MAChB;;MAGA,eAAY;AACV,YAAI,CAAC,KAAK;AAAW;AACrB,YAAI,QAAQ,qEAAqE,GAAG;AAClF,uBAAa,WAAW,cAAc;AACtC,uBAAa,WAAW,aAAa;AACrC,uBAAa,WAAW,eAAe;AACvC,uBAAa,WAAW,UAAU;AAClC,gBAAM,uBAAuB;QAC/B;MACF;;MAGA,eAAe;QACb,EAAE,OAAO,aAAa,OAAO,YAAW;QACxC,EAAE,OAAO,SAAS,OAAO,eAAc;QACvC,EAAE,OAAO,SAAS,OAAO,QAAO;QAChC,EAAE,OAAO,SAAS,OAAO,cAAa;QACtC,EAAE,OAAO,YAAY,OAAO,WAAU;QACtC,EAAE,OAAO,SAAS,OAAO,kBAAiB;;MAE5C,qBAAqB;MACrB,gBAAgB;MAChB,gBAAgB;MAChB,WAAW;QACT,OAAO;QACP,OAAO;QACP,OAAO;QACP,UAAU;QACV,OAAO;;;MAIT,mBAAmB;QACjB,EAAE,OAAO,QAAQ,OAAO,OAAM;QAC9B,EAAE,OAAO,SAAS,OAAO,QAAO;;MAElC,kBAAkB;MAClB,cAAc;MACd,YAAY;QACV,EAAE,OAAO,SAAS,OAAO,QAAO;QAChC,EAAE,OAAO,UAAU,OAAO,SAAQ;QAClC,EAAE,OAAO,SAAS,OAAO,QAAO;;MAElC,WAAW;;MAGX,aAAc,YAA+B;MAC7C,SAAU,YAA+B;MACzC,UAAU;;MAGV,eAAe;MACf,oBAAoB;MAEpB,YAAyC,YAA4B,aAAwB;AAApD,aAAA,aAAA;AAA4B,aAAA,cAAA;AACnE,aAAK,YAAY,kBAAkB,KAAK,UAAU;AAClD,YAAI,KAAK,WAAW;AAClB,eAAK,sBAAqB;AAC1B,eAAK,YAAW;AAChB,eAAK,uBAAsB;QAC7B;MACF;MAEA,WAAQ;MAER;MAEA,wBAAqB;AACnB,YAAI,CAAC,KAAK;AAAW;AACrB,aAAK,qBAAqB,aAAa,QAAQ,sBAAsB,KAAK;AAC1E,aAAK,gBAAgB,EAAE,aAAa,QAAQ,sBAAsB,KAAK;AACvE,aAAK,gBAAgB,EAAE,aAAa,QAAQ,sBAAsB,KAAK;AACvE,cAAM,WAAW,aAAa,QAAQ,kBAAkB;AACxD,YAAI,UAAU;AACZ,cAAI;AACF,iBAAK,WAAW,kCAAK,KAAK,WAAa,KAAK,MAAM,QAAQ;UAC5D,SAAS,GAAG;AACV,iBAAK,WAAW;cACd,OAAO;cACP,OAAO;cACP,OAAO;cACP,UAAU;cACV,OAAO;;AAET,oBAAQ,MAAM,qCAAqC,CAAC;UACtD;QACF;MACF;MAEA,wBAAqB;AACnB,YAAI,CAAC,KAAK;AAAW;AACrB,qBAAa,QAAQ,wBAAwB,KAAK,kBAAkB;AACpE,qBAAa,QAAQ,wBAAwB,OAAO,KAAK,aAAa,CAAC;AACvE,qBAAa,QAAQ,wBAAwB,OAAO,KAAK,aAAa,CAAC;AACvE,qBAAa,QAAQ,oBAAoB,KAAK,UAAU,KAAK,QAAQ,CAAC;AACtE,eAAO,cAAc,IAAI,aAAa,WAAW,EAAE,KAAK,mBAAkB,CAAE,CAAC;AAE7E,aAAK,sBAAqB;AAC1B,cAAM,iCAAiC;MACzC;MAEA,cAAW;AACT,YAAI,CAAC,KAAK;AAAW;AACrB,aAAK,kBAAkB,aAAa,QAAQ,kBAAkB,KAAK;AACnE,aAAK,cAAc,aAAa,QAAQ,cAAc,MAAM;AAC5D,aAAK,WAAW,aAAa,QAAQ,WAAW,KAAK;MACvD;MAEA,cAAW;AACT,YAAI,CAAC,KAAK;AAAW;AACrB,qBAAa,QAAQ,oBAAoB,KAAK,eAAe;AAC7D,qBAAa,QAAQ,gBAAgB,OAAO,KAAK,WAAW,CAAC;AAC7D,qBAAa,QAAQ,aAAa,KAAK,QAAQ;AAC/C,eAAO,cAAc,IAAI,aAAa,WAAW,EAAE,KAAK,mBAAkB,CAAE,CAAC;AAE7E,aAAK,sBAAqB;AAC1B,cAAM,uBAAuB;MAC/B;MAEA,yBAAsB;AACpB,YAAI,CAAC,KAAK;AAAW;AACrB,aAAK,eAAe,aAAa,QAAQ,eAAe,MAAM;AAC9D,aAAK,oBAAoB,aAAa,QAAQ,oBAAoB,MAAM;MAC1E;MAEA,yBAAsB;AACpB,YAAI,CAAC,KAAK;AAAW;AACrB,qBAAa,QAAQ,iBAAiB,OAAO,KAAK,YAAY,CAAC;AAC/D,qBAAa,QAAQ,sBAAsB,OAAO,KAAK,iBAAiB,CAAC;AAEzE,aAAK,sBAAqB;AAC1B,cAAM,kCAAkC;MAC1C;MAEA,wBAAqB;AACnB,cAAM,cAAc;UAClB,oBAAoB,KAAK;UACzB,eAAe,KAAK;UACpB,eAAe,KAAK;UACpB,UAAU,KAAK;UACf,iBAAiB,KAAK;UACtB,aAAa,KAAK;UAClB,UAAU,KAAK;UACf,cAAc,KAAK;UACnB,mBAAmB,KAAK;;AAE1B,aAAK,YAAY,kBAAkB,WAAW,EAAE,UAAU;UACxD,MAAM,MAAK;UAGX;UACA,OAAO,CAAC,QAAO;AACb,kBAAM,wCAAwC;AAC9C,oBAAQ,MAAM,0CAA0C,GAAG;UAC7D;SACD;MACH;;6CAtGa,QAAM,MAAA,CAAC,WAAW,EAAA,CAAA,EAAA;;;;AAtHpB,mBAAY,WAAA;MAPxB,UAAU;QACT,UAAU;QACV,YAAY;QACZ,SAAS,CAAC,cAAc,eAAe,iBAAiB,iBAAiB,oBAAoB,iBAAiB,gBAAgB,sBAAsB,aAAa,aAAa;QAC9K,UAAA;;OAED;OACY,YAAY;;;","names":["MatDialogState","init_dialog","settings_page_default","init_settings_page","init_dialog","SettingsPage"],"x_google_ignoreList":[0,1,2,3,4,5]}