{"version":3,"sources":["node_modules/zone.js/fesm2015/zone.js","node_modules/zone.js/fesm2015/zone-testing.js","src/test.ts","node_modules/@angular/platform-browser-dynamic/fesm2022/testing.mjs","node_modules/@angular/platform-browser-dynamic/fesm2022/platform-browser-dynamic.mjs","node_modules/@angular/platform-browser/fesm2022/testing.mjs","node_modules/@angular/common/fesm2022/testing.mjs"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        static __symbol__ = __symbol__;\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        _parent;\n        _name;\n        _properties;\n        _zoneDelegate;\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        _zone;\n        _taskCounts = {\n            'microTask': 0,\n            'macroTask': 0,\n            'eventTask': 0,\n        };\n        _parentDelegate;\n        _forkDlgt;\n        _forkZS;\n        _forkCurrZone;\n        _interceptDlgt;\n        _interceptZS;\n        _interceptCurrZone;\n        _invokeDlgt;\n        _invokeZS;\n        _invokeCurrZone;\n        _handleErrorDlgt;\n        _handleErrorZS;\n        _handleErrorCurrZone;\n        _scheduleTaskDlgt;\n        _scheduleTaskZS;\n        _scheduleTaskCurrZone;\n        _invokeTaskDlgt;\n        _invokeTaskZS;\n        _invokeTaskCurrZone;\n        _cancelTaskDlgt;\n        _cancelTaskZS;\n        _cancelTaskCurrZone;\n        _hasTaskDlgt;\n        _hasTaskDlgtOwner;\n        _hasTaskZS;\n        _hasTaskCurrZone;\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        type;\n        source;\n        invoke;\n        callback;\n        data;\n        scheduleFn;\n        cancelFn;\n        _zone = null;\n        runCount = 0;\n        _zoneDelegates = null;\n        _state = 'notScheduled';\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // In some versions of Windows, the `this` context may be undefined\n        // in on-property callbacks.\n        // To handle this edge case, we check if `this` is falsy and\n        // fallback to `_global` if needed.\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // https://github.com/angular/zone.js/issues/978\n        // If an inline handler (like `onload`) was defined before zone.js was loaded,\n        // call the original descriptor's setter to clean it up.\n        originalDescSet?.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions?.diff || compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // To improve `addEventListener` performance, we will create the callback\n                // for the task later when the task is invoked.\n                let isEventListenerObject = false;\n                if (typeof delegate !== 'function') {\n                    // This checks whether the provided listener argument is an object with\n                    // a `handleEvent` method (since we can call `addEventListener` with a\n                    // function `event => ...` or with an object `{ handleEvent: event => ... }`).\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isEventListenerObject = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (typeof task.options !== 'boolean') {\n                    // We should save the options on the task (if it's an object) because\n                    // we'll be using `task.options` later when removing the event listener\n                    // and passing it back to `removeEventListener`.\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isEventListenerObject) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = [];\n        // In older browsers like IE or Edge, event handler properties (e.g., `onclick`)\n        // may not be defined directly on the `window` object but on its prototype (`WindowPrototype`).\n        // To ensure complete coverage, we use the prototype when checking\n        // for and patching these properties.\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target?.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && typeof value.then === 'function';\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\nfunction patchJasmine(Zone) {\n    Zone.__load_patch('jasmine', (global, Zone, api) => {\n        const __extends = function (d, b) {\n            for (const p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype =\n                b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n        // Patch jasmine's describe/it/beforeEach/afterEach functions so test code always runs\n        // in a testZone (ProxyZone). (See: angular/zone.js#91 & angular/angular#10503)\n        if (!Zone)\n            throw new Error('Missing: zone.js');\n        if (typeof jest !== 'undefined') {\n            // return if jasmine is a light implementation inside jest\n            // in this case, we are running inside jest not jasmine\n            return;\n        }\n        if (typeof jasmine == 'undefined' || jasmine['__zone_patch__']) {\n            return;\n        }\n        jasmine['__zone_patch__'] = true;\n        const SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n        const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        if (!SyncTestZoneSpec)\n            throw new Error('Missing: SyncTestZoneSpec');\n        if (!ProxyZoneSpec)\n            throw new Error('Missing: ProxyZoneSpec');\n        const ambientZone = Zone.current;\n        const symbol = Zone.__symbol__;\n        // whether patch jasmine clock when in fakeAsync\n        const disablePatchingJasmineClock = global[symbol('fakeAsyncDisablePatchingClock')] === true;\n        // the original variable name fakeAsyncPatchLock is not accurate, so the name will be\n        // fakeAsyncAutoFakeAsyncWhenClockPatched and if this enablePatchingJasmineClock is false, we\n        // also automatically disable the auto jump into fakeAsync feature\n        const enableAutoFakeAsyncWhenClockPatched = !disablePatchingJasmineClock &&\n            (global[symbol('fakeAsyncPatchLock')] === true ||\n                global[symbol('fakeAsyncAutoFakeAsyncWhenClockPatched')] === true);\n        const ignoreUnhandledRejection = global[symbol('ignoreUnhandledRejection')] === true;\n        if (!ignoreUnhandledRejection) {\n            const globalErrors = jasmine.GlobalErrors;\n            if (globalErrors && !jasmine[symbol('GlobalErrors')]) {\n                jasmine[symbol('GlobalErrors')] = globalErrors;\n                jasmine.GlobalErrors = function () {\n                    const instance = new globalErrors();\n                    const originalInstall = instance.install;\n                    if (originalInstall && !instance[symbol('install')]) {\n                        instance[symbol('install')] = originalInstall;\n                        instance.install = function () {\n                            const isNode = typeof process !== 'undefined' && !!process.on;\n                            // Note: Jasmine checks internally if `process` and `process.on` is defined.\n                            // Otherwise, it installs the browser rejection handler through the\n                            // `global.addEventListener`. This code may be run in the browser environment where\n                            // `process` is not defined, and this will lead to a runtime exception since webpack 5\n                            // removed automatic Node.js polyfills. Note, that events are named differently, it's\n                            // `unhandledRejection` in Node.js and `unhandledrejection` in the browser.\n                            const originalHandlers = isNode\n                                ? process.listeners('unhandledRejection')\n                                : global.eventListeners('unhandledrejection');\n                            const result = originalInstall.apply(this, arguments);\n                            isNode\n                                ? process.removeAllListeners('unhandledRejection')\n                                : global.removeAllListeners('unhandledrejection');\n                            if (originalHandlers) {\n                                originalHandlers.forEach((handler) => {\n                                    if (isNode) {\n                                        process.on('unhandledRejection', handler);\n                                    }\n                                    else {\n                                        global.addEventListener('unhandledrejection', handler);\n                                    }\n                                });\n                            }\n                            return result;\n                        };\n                    }\n                    return instance;\n                };\n            }\n        }\n        // Monkey patch all of the jasmine DSL so that each function runs in appropriate zone.\n        const jasmineEnv = jasmine.getEnv();\n        ['describe', 'xdescribe', 'fdescribe'].forEach((methodName) => {\n            let originalJasmineFn = jasmineEnv[methodName];\n            jasmineEnv[methodName] = function (description, specDefinitions) {\n                return originalJasmineFn.call(this, description, wrapDescribeInZone(description, specDefinitions));\n            };\n        });\n        ['it', 'xit', 'fit'].forEach((methodName) => {\n            let originalJasmineFn = jasmineEnv[methodName];\n            jasmineEnv[symbol(methodName)] = originalJasmineFn;\n            jasmineEnv[methodName] = function (description, specDefinitions, timeout) {\n                arguments[1] = wrapTestInZone(specDefinitions);\n                return originalJasmineFn.apply(this, arguments);\n            };\n        });\n        ['beforeEach', 'afterEach', 'beforeAll', 'afterAll'].forEach((methodName) => {\n            let originalJasmineFn = jasmineEnv[methodName];\n            jasmineEnv[symbol(methodName)] = originalJasmineFn;\n            jasmineEnv[methodName] = function (specDefinitions, timeout) {\n                arguments[0] = wrapTestInZone(specDefinitions);\n                return originalJasmineFn.apply(this, arguments);\n            };\n        });\n        if (!disablePatchingJasmineClock) {\n            // need to patch jasmine.clock().mockDate and jasmine.clock().tick() so\n            // they can work properly in FakeAsyncTest\n            const originalClockFn = (jasmine[symbol('clock')] = jasmine['clock']);\n            jasmine['clock'] = function () {\n                const clock = originalClockFn.apply(this, arguments);\n                if (!clock[symbol('patched')]) {\n                    clock[symbol('patched')] = symbol('patched');\n                    const originalTick = (clock[symbol('tick')] = clock.tick);\n                    clock.tick = function () {\n                        const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                        if (fakeAsyncZoneSpec) {\n                            return fakeAsyncZoneSpec.tick.apply(fakeAsyncZoneSpec, arguments);\n                        }\n                        return originalTick.apply(this, arguments);\n                    };\n                    const originalMockDate = (clock[symbol('mockDate')] = clock.mockDate);\n                    clock.mockDate = function () {\n                        const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                        if (fakeAsyncZoneSpec) {\n                            const dateTime = arguments.length > 0 ? arguments[0] : new Date();\n                            return fakeAsyncZoneSpec.setFakeBaseSystemTime.apply(fakeAsyncZoneSpec, dateTime && typeof dateTime.getTime === 'function'\n                                ? [dateTime.getTime()]\n                                : arguments);\n                        }\n                        return originalMockDate.apply(this, arguments);\n                    };\n                    // for auto go into fakeAsync feature, we need the flag to enable it\n                    if (enableAutoFakeAsyncWhenClockPatched) {\n                        ['install', 'uninstall'].forEach((methodName) => {\n                            const originalClockFn = (clock[symbol(methodName)] = clock[methodName]);\n                            clock[methodName] = function () {\n                                const FakeAsyncTestZoneSpec = Zone['FakeAsyncTestZoneSpec'];\n                                if (FakeAsyncTestZoneSpec) {\n                                    jasmine[symbol('clockInstalled')] = 'install' === methodName;\n                                    return;\n                                }\n                                return originalClockFn.apply(this, arguments);\n                            };\n                        });\n                    }\n                }\n                return clock;\n            };\n        }\n        // monkey patch createSpyObj to make properties enumerable to true\n        if (!jasmine[Zone.__symbol__('createSpyObj')]) {\n            const originalCreateSpyObj = jasmine.createSpyObj;\n            jasmine[Zone.__symbol__('createSpyObj')] = originalCreateSpyObj;\n            jasmine.createSpyObj = function () {\n                const args = Array.prototype.slice.call(arguments);\n                const propertyNames = args.length >= 3 ? args[2] : null;\n                let spyObj;\n                if (propertyNames) {\n                    const defineProperty = Object.defineProperty;\n                    Object.defineProperty = function (obj, p, attributes) {\n                        return defineProperty.call(this, obj, p, {\n                            ...attributes,\n                            configurable: true,\n                            enumerable: true,\n                        });\n                    };\n                    try {\n                        spyObj = originalCreateSpyObj.apply(this, args);\n                    }\n                    finally {\n                        Object.defineProperty = defineProperty;\n                    }\n                }\n                else {\n                    spyObj = originalCreateSpyObj.apply(this, args);\n                }\n                return spyObj;\n            };\n        }\n        /**\n         * Gets a function wrapping the body of a Jasmine `describe` block to execute in a\n         * synchronous-only zone.\n         */\n        function wrapDescribeInZone(description, describeBody) {\n            return function () {\n                // Create a synchronous-only zone in which to run `describe` blocks in order to raise an\n                // error if any asynchronous operations are attempted inside of a `describe`.\n                const syncZone = ambientZone.fork(new SyncTestZoneSpec(`jasmine.describe#${description}`));\n                return syncZone.run(describeBody, this, arguments);\n            };\n        }\n        function runInTestZone(testBody, applyThis, queueRunner, done) {\n            const isClockInstalled = !!jasmine[symbol('clockInstalled')];\n            queueRunner.testProxyZoneSpec;\n            const testProxyZone = queueRunner.testProxyZone;\n            if (isClockInstalled && enableAutoFakeAsyncWhenClockPatched) {\n                // auto run a fakeAsync\n                const fakeAsyncModule = Zone[Zone.__symbol__('fakeAsyncTest')];\n                if (fakeAsyncModule && typeof fakeAsyncModule.fakeAsync === 'function') {\n                    testBody = fakeAsyncModule.fakeAsync(testBody);\n                }\n            }\n            if (done) {\n                return testProxyZone.run(testBody, applyThis, [done]);\n            }\n            else {\n                return testProxyZone.run(testBody, applyThis);\n            }\n        }\n        /**\n         * Gets a function wrapping the body of a Jasmine `it/beforeEach/afterEach` block to\n         * execute in a ProxyZone zone.\n         * This will run in `testProxyZone`. The `testProxyZone` will be reset by the `ZoneQueueRunner`\n         */\n        function wrapTestInZone(testBody) {\n            // The `done` callback is only passed through if the function expects at least one argument.\n            // Note we have to make a function with correct number of arguments, otherwise jasmine will\n            // think that all functions are sync or async.\n            return (testBody &&\n                (testBody.length\n                    ? function (done) {\n                        return runInTestZone(testBody, this, this.queueRunner, done);\n                    }\n                    : function () {\n                        return runInTestZone(testBody, this, this.queueRunner);\n                    }));\n        }\n        const QueueRunner = jasmine.QueueRunner;\n        jasmine.QueueRunner = (function (_super) {\n            __extends(ZoneQueueRunner, _super);\n            function ZoneQueueRunner(attrs) {\n                if (attrs.onComplete) {\n                    attrs.onComplete = ((fn) => () => {\n                        // All functions are done, clear the test zone.\n                        this.testProxyZone = null;\n                        this.testProxyZoneSpec = null;\n                        ambientZone.scheduleMicroTask('jasmine.onComplete', fn);\n                    })(attrs.onComplete);\n                }\n                const nativeSetTimeout = global[Zone.__symbol__('setTimeout')];\n                const nativeClearTimeout = global[Zone.__symbol__('clearTimeout')];\n                if (nativeSetTimeout) {\n                    // should run setTimeout inside jasmine outside of zone\n                    attrs.timeout = {\n                        setTimeout: nativeSetTimeout ? nativeSetTimeout : global.setTimeout,\n                        clearTimeout: nativeClearTimeout ? nativeClearTimeout : global.clearTimeout,\n                    };\n                }\n                // create a userContext to hold the queueRunner itself\n                // so we can access the testProxy in it/xit/beforeEach ...\n                if (jasmine.UserContext) {\n                    if (!attrs.userContext) {\n                        attrs.userContext = new jasmine.UserContext();\n                    }\n                    attrs.userContext.queueRunner = this;\n                }\n                else {\n                    if (!attrs.userContext) {\n                        attrs.userContext = {};\n                    }\n                    attrs.userContext.queueRunner = this;\n                }\n                // patch attrs.onException\n                const onException = attrs.onException;\n                attrs.onException = function (error) {\n                    if (error &&\n                        error.message ===\n                            'Timeout - Async callback was not invoked within timeout specified by jasmine.DEFAULT_TIMEOUT_INTERVAL.') {\n                        // jasmine timeout, we can make the error message more\n                        // reasonable to tell what tasks are pending\n                        const proxyZoneSpec = this && this.testProxyZoneSpec;\n                        if (proxyZoneSpec) {\n                            const pendingTasksInfo = proxyZoneSpec.getAndClearPendingTasksInfo();\n                            try {\n                                // try catch here in case error.message is not writable\n                                error.message += pendingTasksInfo;\n                            }\n                            catch (err) { }\n                        }\n                    }\n                    if (onException) {\n                        onException.call(this, error);\n                    }\n                };\n                _super.call(this, attrs);\n            }\n            ZoneQueueRunner.prototype.execute = function () {\n                let zone = Zone.current;\n                let isChildOfAmbientZone = false;\n                while (zone) {\n                    if (zone === ambientZone) {\n                        isChildOfAmbientZone = true;\n                        break;\n                    }\n                    zone = zone.parent;\n                }\n                if (!isChildOfAmbientZone)\n                    throw new Error('Unexpected Zone: ' + Zone.current.name);\n                // This is the zone which will be used for running individual tests.\n                // It will be a proxy zone, so that the tests function can retroactively install\n                // different zones.\n                // Example:\n                //   - In beforeEach() do childZone = Zone.current.fork(...);\n                //   - In it() try to do fakeAsync(). The issue is that because the beforeEach forked the\n                //     zone outside of fakeAsync it will be able to escape the fakeAsync rules.\n                //   - Because ProxyZone is parent fo `childZone` fakeAsync can retroactively add\n                //     fakeAsync behavior to the childZone.\n                this.testProxyZoneSpec = new ProxyZoneSpec();\n                this.testProxyZone = ambientZone.fork(this.testProxyZoneSpec);\n                if (!Zone.currentTask) {\n                    // if we are not running in a task then if someone would register a\n                    // element.addEventListener and then calling element.click() the\n                    // addEventListener callback would think that it is the top most task and would\n                    // drain the microtask queue on element.click() which would be incorrect.\n                    // For this reason we always force a task when running jasmine tests.\n                    Zone.current.scheduleMicroTask('jasmine.execute().forceTask', () => QueueRunner.prototype.execute.call(this));\n                }\n                else {\n                    _super.prototype.execute.call(this);\n                }\n            };\n            return ZoneQueueRunner;\n        })(QueueRunner);\n    });\n}\n\nfunction patchJest(Zone) {\n    Zone.__load_patch('jest', (context, Zone, api) => {\n        if (typeof jest === 'undefined' || jest['__zone_patch__']) {\n            return;\n        }\n        // From jest 29 and jest-preset-angular v13, the module transform logic\n        // changed, and now jest-preset-angular use the use the tsconfig target\n        // other than the hardcoded one, https://github.com/thymikee/jest-preset-angular/issues/2010\n        // But jest-angular-preset doesn't introduce the @babel/plugin-transform-async-to-generator\n        // which is needed by angular since `async/await` still need to be transformed\n        // to promise for ES2017+ target.\n        // So for now, we disable to output the uncaught error console log for a temp solution,\n        // until jest-preset-angular find a proper solution.\n        Zone[api.symbol('ignoreConsoleErrorUncaughtError')] = true;\n        jest['__zone_patch__'] = true;\n        const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        const SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n        if (!ProxyZoneSpec) {\n            throw new Error('Missing ProxyZoneSpec');\n        }\n        const rootZone = Zone.current;\n        const syncZone = rootZone.fork(new SyncTestZoneSpec('jest.describe'));\n        const proxyZoneSpec = new ProxyZoneSpec();\n        const proxyZone = rootZone.fork(proxyZoneSpec);\n        function wrapDescribeFactoryInZone(originalJestFn) {\n            return function (...tableArgs) {\n                const originalDescribeFn = originalJestFn.apply(this, tableArgs);\n                return function (...args) {\n                    args[1] = wrapDescribeInZone(args[1]);\n                    return originalDescribeFn.apply(this, args);\n                };\n            };\n        }\n        function wrapTestFactoryInZone(originalJestFn) {\n            return function (...tableArgs) {\n                return function (...args) {\n                    args[1] = wrapTestInZone(args[1]);\n                    return originalJestFn.apply(this, tableArgs).apply(this, args);\n                };\n            };\n        }\n        /**\n         * Gets a function wrapping the body of a jest `describe` block to execute in a\n         * synchronous-only zone.\n         */\n        function wrapDescribeInZone(describeBody) {\n            return function (...args) {\n                return syncZone.run(describeBody, this, args);\n            };\n        }\n        /**\n         * Gets a function wrapping the body of a jest `it/beforeEach/afterEach` block to\n         * execute in a ProxyZone zone.\n         * This will run in the `proxyZone`.\n         */\n        function wrapTestInZone(testBody, isTestFunc = false) {\n            if (typeof testBody !== 'function') {\n                return testBody;\n            }\n            const wrappedFunc = function () {\n                if (Zone[api.symbol('useFakeTimersCalled')] === true &&\n                    testBody &&\n                    !testBody.isFakeAsync) {\n                    // jest.useFakeTimers is called, run into fakeAsyncTest automatically.\n                    const fakeAsyncModule = Zone[Zone.__symbol__('fakeAsyncTest')];\n                    if (fakeAsyncModule && typeof fakeAsyncModule.fakeAsync === 'function') {\n                        testBody = fakeAsyncModule.fakeAsync(testBody);\n                    }\n                }\n                proxyZoneSpec.isTestFunc = isTestFunc;\n                return proxyZone.run(testBody, null, arguments);\n            };\n            // Update the length of wrappedFunc to be the same as the length of the testBody\n            // So jest core can handle whether the test function has `done()` or not correctly\n            Object.defineProperty(wrappedFunc, 'length', {\n                configurable: true,\n                writable: true,\n                enumerable: false,\n            });\n            wrappedFunc.length = testBody.length;\n            return wrappedFunc;\n        }\n        ['describe', 'xdescribe', 'fdescribe'].forEach((methodName) => {\n            let originalJestFn = context[methodName];\n            if (context[Zone.__symbol__(methodName)]) {\n                return;\n            }\n            context[Zone.__symbol__(methodName)] = originalJestFn;\n            context[methodName] = function (...args) {\n                args[1] = wrapDescribeInZone(args[1]);\n                return originalJestFn.apply(this, args);\n            };\n            context[methodName].each = wrapDescribeFactoryInZone(originalJestFn.each);\n        });\n        context.describe.only = context.fdescribe;\n        context.describe.skip = context.xdescribe;\n        ['it', 'xit', 'fit', 'test', 'xtest'].forEach((methodName) => {\n            let originalJestFn = context[methodName];\n            if (context[Zone.__symbol__(methodName)]) {\n                return;\n            }\n            context[Zone.__symbol__(methodName)] = originalJestFn;\n            context[methodName] = function (...args) {\n                args[1] = wrapTestInZone(args[1], true);\n                return originalJestFn.apply(this, args);\n            };\n            context[methodName].each = wrapTestFactoryInZone(originalJestFn.each);\n            context[methodName].todo = originalJestFn.todo;\n            context[methodName].failing = originalJestFn.failing;\n        });\n        context.it.only = context.fit;\n        context.it.skip = context.xit;\n        context.test.only = context.fit;\n        context.test.skip = context.xit;\n        ['beforeEach', 'afterEach', 'beforeAll', 'afterAll'].forEach((methodName) => {\n            let originalJestFn = context[methodName];\n            if (context[Zone.__symbol__(methodName)]) {\n                return;\n            }\n            context[Zone.__symbol__(methodName)] = originalJestFn;\n            context[methodName] = function (...args) {\n                args[0] = wrapTestInZone(args[0]);\n                return originalJestFn.apply(this, args);\n            };\n        });\n        Zone.patchJestObject = function patchJestObject(Timer, isModern = false) {\n            // check whether currently the test is inside fakeAsync()\n            function isPatchingFakeTimer() {\n                const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                return !!fakeAsyncZoneSpec;\n            }\n            // check whether the current function is inside `test/it` or other methods\n            // such as `describe/beforeEach`\n            function isInTestFunc() {\n                const proxyZoneSpec = Zone.current.get('ProxyZoneSpec');\n                return proxyZoneSpec && proxyZoneSpec.isTestFunc;\n            }\n            if (Timer[api.symbol('fakeTimers')]) {\n                return;\n            }\n            Timer[api.symbol('fakeTimers')] = true;\n            // patch jest fakeTimer internal method to make sure no console.warn print out\n            api.patchMethod(Timer, '_checkFakeTimers', (delegate) => {\n                return function (self, args) {\n                    if (isPatchingFakeTimer()) {\n                        return true;\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch useFakeTimers(), set useFakeTimersCalled flag, and make test auto run into fakeAsync\n            api.patchMethod(Timer, 'useFakeTimers', (delegate) => {\n                return function (self, args) {\n                    Zone[api.symbol('useFakeTimersCalled')] = true;\n                    if (isModern || isInTestFunc()) {\n                        return delegate.apply(self, args);\n                    }\n                    return self;\n                };\n            });\n            // patch useRealTimers(), unset useFakeTimers flag\n            api.patchMethod(Timer, 'useRealTimers', (delegate) => {\n                return function (self, args) {\n                    Zone[api.symbol('useFakeTimersCalled')] = false;\n                    if (isModern || isInTestFunc()) {\n                        return delegate.apply(self, args);\n                    }\n                    return self;\n                };\n            });\n            // patch setSystemTime(), call setCurrentRealTime() in the fakeAsyncTest\n            api.patchMethod(Timer, 'setSystemTime', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec && isPatchingFakeTimer()) {\n                        fakeAsyncZoneSpec.setFakeBaseSystemTime(args[0]);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch getSystemTime(), call getCurrentRealTime() in the fakeAsyncTest\n            api.patchMethod(Timer, 'getRealSystemTime', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec && isPatchingFakeTimer()) {\n                        return fakeAsyncZoneSpec.getRealSystemTime();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch runAllTicks(), run all microTasks inside fakeAsync\n            api.patchMethod(Timer, 'runAllTicks', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.flushMicrotasks();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch runAllTimers(), run all macroTasks inside fakeAsync\n            api.patchMethod(Timer, 'runAllTimers', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.flush(100, true);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch advanceTimersByTime(), call tick() in the fakeAsyncTest\n            api.patchMethod(Timer, 'advanceTimersByTime', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.tick(args[0]);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch runOnlyPendingTimers(), call flushOnlyPendingTimers() in the fakeAsyncTest\n            api.patchMethod(Timer, 'runOnlyPendingTimers', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.flushOnlyPendingTimers();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch advanceTimersToNextTimer(), call tickToNext() in the fakeAsyncTest\n            api.patchMethod(Timer, 'advanceTimersToNextTimer', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.tickToNext(args[0]);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch clearAllTimers(), call removeAllTimers() in the fakeAsyncTest\n            api.patchMethod(Timer, 'clearAllTimers', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.removeAllTimers();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch getTimerCount(), call getTimerCount() in the fakeAsyncTest\n            api.patchMethod(Timer, 'getTimerCount', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        return fakeAsyncZoneSpec.getTimerCount();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n        };\n    });\n}\n\nfunction patchMocha(Zone) {\n    Zone.__load_patch('mocha', (global, Zone) => {\n        const Mocha = global.Mocha;\n        if (typeof Mocha === 'undefined') {\n            // return if Mocha is not available, because now zone-testing\n            // will load mocha patch with jasmine/jest patch\n            return;\n        }\n        if (typeof Zone === 'undefined') {\n            throw new Error('Missing Zone.js');\n        }\n        const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        const SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n        if (!ProxyZoneSpec) {\n            throw new Error('Missing ProxyZoneSpec');\n        }\n        if (Mocha['__zone_patch__']) {\n            throw new Error('\"Mocha\" has already been patched with \"Zone\".');\n        }\n        Mocha['__zone_patch__'] = true;\n        const rootZone = Zone.current;\n        const syncZone = rootZone.fork(new SyncTestZoneSpec('Mocha.describe'));\n        let testZone = null;\n        const suiteZone = rootZone.fork(new ProxyZoneSpec());\n        const mochaOriginal = {\n            after: global.after,\n            afterEach: global.afterEach,\n            before: global.before,\n            beforeEach: global.beforeEach,\n            describe: global.describe,\n            it: global.it,\n        };\n        function modifyArguments(args, syncTest, asyncTest) {\n            for (let i = 0; i < args.length; i++) {\n                let arg = args[i];\n                if (typeof arg === 'function') {\n                    // The `done` callback is only passed through if the function expects at\n                    // least one argument.\n                    // Note we have to make a function with correct number of arguments,\n                    // otherwise mocha will\n                    // think that all functions are sync or async.\n                    args[i] = arg.length === 0 ? syncTest(arg) : asyncTest(arg);\n                    // Mocha uses toString to view the test body in the result list, make sure we return the\n                    // correct function body\n                    args[i].toString = function () {\n                        return arg.toString();\n                    };\n                }\n            }\n            return args;\n        }\n        function wrapDescribeInZone(args) {\n            const syncTest = function (fn) {\n                return function () {\n                    return syncZone.run(fn, this, arguments);\n                };\n            };\n            return modifyArguments(args, syncTest);\n        }\n        function wrapTestInZone(args) {\n            const asyncTest = function (fn) {\n                return function (done) {\n                    return testZone.run(fn, this, [done]);\n                };\n            };\n            const syncTest = function (fn) {\n                return function () {\n                    return testZone.run(fn, this);\n                };\n            };\n            return modifyArguments(args, syncTest, asyncTest);\n        }\n        function wrapSuiteInZone(args) {\n            const asyncTest = function (fn) {\n                return function (done) {\n                    return suiteZone.run(fn, this, [done]);\n                };\n            };\n            const syncTest = function (fn) {\n                return function () {\n                    return suiteZone.run(fn, this);\n                };\n            };\n            return modifyArguments(args, syncTest, asyncTest);\n        }\n        global.describe = global.suite = function () {\n            return mochaOriginal.describe.apply(this, wrapDescribeInZone(arguments));\n        };\n        global.xdescribe =\n            global.suite.skip =\n                global.describe.skip =\n                    function () {\n                        return mochaOriginal.describe.skip.apply(this, wrapDescribeInZone(arguments));\n                    };\n        global.describe.only = global.suite.only = function () {\n            return mochaOriginal.describe.only.apply(this, wrapDescribeInZone(arguments));\n        };\n        global.it =\n            global.specify =\n                global.test =\n                    function () {\n                        return mochaOriginal.it.apply(this, wrapTestInZone(arguments));\n                    };\n        global.xit =\n            global.xspecify =\n                global.it.skip =\n                    function () {\n                        return mochaOriginal.it.skip.apply(this, wrapTestInZone(arguments));\n                    };\n        global.it.only = global.test.only = function () {\n            return mochaOriginal.it.only.apply(this, wrapTestInZone(arguments));\n        };\n        global.after = global.suiteTeardown = function () {\n            return mochaOriginal.after.apply(this, wrapSuiteInZone(arguments));\n        };\n        global.afterEach = global.teardown = function () {\n            return mochaOriginal.afterEach.apply(this, wrapTestInZone(arguments));\n        };\n        global.before = global.suiteSetup = function () {\n            return mochaOriginal.before.apply(this, wrapSuiteInZone(arguments));\n        };\n        global.beforeEach = global.setup = function () {\n            return mochaOriginal.beforeEach.apply(this, wrapTestInZone(arguments));\n        };\n        ((originalRunTest, originalRun) => {\n            Mocha.Runner.prototype.runTest = function (fn) {\n                Zone.current.scheduleMicroTask('mocha.forceTask', () => {\n                    originalRunTest.call(this, fn);\n                });\n            };\n            Mocha.Runner.prototype.run = function (fn) {\n                this.on('test', (e) => {\n                    testZone = rootZone.fork(new ProxyZoneSpec());\n                });\n                this.on('fail', (test, err) => {\n                    const proxyZoneSpec = testZone && testZone.get('ProxyZoneSpec');\n                    if (proxyZoneSpec && err) {\n                        try {\n                            // try catch here in case err.message is not writable\n                            err.message += proxyZoneSpec.getAndClearPendingTasksInfo();\n                        }\n                        catch (error) { }\n                    }\n                });\n                return originalRun.call(this, fn);\n            };\n        })(Mocha.Runner.prototype.runTest, Mocha.Runner.prototype.run);\n    });\n}\n\nconst global$2 = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global$2['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\n\nconst __global = (typeof window !== 'undefined' && window) || (typeof self !== 'undefined' && self) || global;\nclass AsyncTestZoneSpec {\n    finishCallback;\n    failCallback;\n    // Needs to be a getter and not a plain property in order run this just-in-time. Otherwise\n    // `__symbol__` would be evaluated during top-level execution prior to the Zone prefix being\n    // changed for tests.\n    static get symbolParentUnresolved() {\n        return __symbol__('parentUnresolved');\n    }\n    _pendingMicroTasks = false;\n    _pendingMacroTasks = false;\n    _alreadyErrored = false;\n    _isSync = false;\n    _existingFinishTimer = null;\n    entryFunction = null;\n    runZone = Zone.current;\n    unresolvedChainedPromiseCount = 0;\n    supportWaitUnresolvedChainedPromise = false;\n    constructor(finishCallback, failCallback, namePrefix) {\n        this.finishCallback = finishCallback;\n        this.failCallback = failCallback;\n        this.name = 'asyncTestZone for ' + namePrefix;\n        this.properties = { 'AsyncTestZoneSpec': this };\n        this.supportWaitUnresolvedChainedPromise =\n            __global[__symbol__('supportWaitUnResolvedChainedPromise')] === true;\n    }\n    isUnresolvedChainedPromisePending() {\n        return this.unresolvedChainedPromiseCount > 0;\n    }\n    _finishCallbackIfDone() {\n        // NOTE: Technically the `onHasTask` could fire together with the initial synchronous\n        // completion in `onInvoke`. `onHasTask` might call this method when it captured e.g.\n        // microtasks in the proxy zone that now complete as part of this async zone run.\n        // Consider the following scenario:\n        //    1. A test `beforeEach` schedules a microtask in the ProxyZone.\n        //    2. An actual empty `it` spec executes in the AsyncTestZone` (using e.g. `waitForAsync`).\n        //    3. The `onInvoke` invokes `_finishCallbackIfDone` because the spec runs synchronously.\n        //    4. We wait the scheduled timeout (see below) to account for unhandled promises.\n        //    5. The microtask from (1) finishes and `onHasTask` is invoked.\n        //    --> We register a second `_finishCallbackIfDone` even though we have scheduled a timeout.\n        // If the finish timeout from below is already scheduled, terminate the existing scheduled\n        // finish invocation, avoiding calling `jasmine` `done` multiple times. *Note* that we would\n        // want to schedule a new finish callback in case the task state changes again.\n        if (this._existingFinishTimer !== null) {\n            clearTimeout(this._existingFinishTimer);\n            this._existingFinishTimer = null;\n        }\n        if (!(this._pendingMicroTasks ||\n            this._pendingMacroTasks ||\n            (this.supportWaitUnresolvedChainedPromise && this.isUnresolvedChainedPromisePending()))) {\n            // We wait until the next tick because we would like to catch unhandled promises which could\n            // cause test logic to be executed. In such cases we cannot finish with tasks pending then.\n            this.runZone.run(() => {\n                this._existingFinishTimer = setTimeout(() => {\n                    if (!this._alreadyErrored && !(this._pendingMicroTasks || this._pendingMacroTasks)) {\n                        this.finishCallback();\n                    }\n                }, 0);\n            });\n        }\n    }\n    patchPromiseForTest() {\n        if (!this.supportWaitUnresolvedChainedPromise) {\n            return;\n        }\n        const patchPromiseForTest = Promise[Zone.__symbol__('patchPromiseForTest')];\n        if (patchPromiseForTest) {\n            patchPromiseForTest();\n        }\n    }\n    unPatchPromiseForTest() {\n        if (!this.supportWaitUnresolvedChainedPromise) {\n            return;\n        }\n        const unPatchPromiseForTest = Promise[Zone.__symbol__('unPatchPromiseForTest')];\n        if (unPatchPromiseForTest) {\n            unPatchPromiseForTest();\n        }\n    }\n    // ZoneSpec implementation below.\n    name;\n    properties;\n    onScheduleTask(delegate, current, target, task) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        if (task.type === 'microTask' && task.data && task.data instanceof Promise) {\n            // check whether the promise is a chained promise\n            if (task.data[AsyncTestZoneSpec.symbolParentUnresolved] === true) {\n                // chained promise is being scheduled\n                this.unresolvedChainedPromiseCount--;\n            }\n        }\n        return delegate.scheduleTask(target, task);\n    }\n    onInvokeTask(delegate, current, target, task, applyThis, applyArgs) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n    }\n    onCancelTask(delegate, current, target, task) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        return delegate.cancelTask(target, task);\n    }\n    // Note - we need to use onInvoke at the moment to call finish when a test is\n    // fully synchronous. TODO(juliemr): remove this when the logic for\n    // onHasTask changes and it calls whenever the task queues are dirty.\n    // updated by(JiaLiPassion), only call finish callback when no task\n    // was scheduled/invoked/canceled.\n    onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n        if (!this.entryFunction) {\n            this.entryFunction = delegate;\n        }\n        try {\n            this._isSync = true;\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        }\n        finally {\n            // We need to check the delegate is the same as entryFunction or not.\n            // Consider the following case.\n            //\n            // asyncTestZone.run(() => { // Here the delegate will be the entryFunction\n            //   Zone.current.run(() => { // Here the delegate will not be the entryFunction\n            //   });\n            // });\n            //\n            // We only want to check whether there are async tasks scheduled\n            // for the entry function.\n            if (this._isSync && this.entryFunction === delegate) {\n                this._finishCallbackIfDone();\n            }\n        }\n    }\n    onHandleError(parentZoneDelegate, currentZone, targetZone, error) {\n        // Let the parent try to handle the error.\n        const result = parentZoneDelegate.handleError(targetZone, error);\n        if (result) {\n            this.failCallback(error);\n            this._alreadyErrored = true;\n        }\n        return false;\n    }\n    onHasTask(delegate, current, target, hasTaskState) {\n        delegate.hasTask(target, hasTaskState);\n        // We should only trigger finishCallback when the target zone is the AsyncTestZone\n        // Consider the following cases.\n        //\n        // const childZone = asyncTestZone.fork({\n        //   name: 'child',\n        //   onHasTask: ...\n        // });\n        //\n        // So we have nested zones declared the onHasTask hook, in this case,\n        // the onHasTask will be triggered twice, and cause the finishCallbackIfDone()\n        // is also be invoked twice. So we need to only trigger the finishCallbackIfDone()\n        // when the current zone is the same as the target zone.\n        if (current !== target) {\n            return;\n        }\n        if (hasTaskState.change == 'microTask') {\n            this._pendingMicroTasks = hasTaskState.microTask;\n            this._finishCallbackIfDone();\n        }\n        else if (hasTaskState.change == 'macroTask') {\n            this._pendingMacroTasks = hasTaskState.macroTask;\n            this._finishCallbackIfDone();\n        }\n    }\n}\nfunction patchAsyncTest(Zone) {\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['AsyncTestZoneSpec'] = AsyncTestZoneSpec;\n    Zone.__load_patch('asynctest', (global, Zone, api) => {\n        /**\n         * Wraps a test function in an asynchronous test zone. The test will automatically\n         * complete when all asynchronous calls within this zone are done.\n         */\n        Zone[api.symbol('asyncTest')] = function asyncTest(fn) {\n            // If we're running using the Jasmine test framework, adapt to call the 'done'\n            // function when asynchronous activity is finished.\n            if (global.jasmine) {\n                // Not using an arrow function to preserve context passed from call site\n                return function (done) {\n                    if (!done) {\n                        // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                        // fake it here and assume sync.\n                        done = function () { };\n                        done.fail = function (e) {\n                            throw e;\n                        };\n                    }\n                    runInTestZone(fn, this, done, (err) => {\n                        if (typeof err === 'string') {\n                            return done.fail(new Error(err));\n                        }\n                        else {\n                            done.fail(err);\n                        }\n                    });\n                };\n            }\n            // Otherwise, return a promise which will resolve when asynchronous activity\n            // is finished. This will be correctly consumed by the Mocha framework with\n            // it('...', async(myFn)); or can be used in a custom framework.\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                return new Promise((finishCallback, failCallback) => {\n                    runInTestZone(fn, this, finishCallback, failCallback);\n                });\n            };\n        };\n        function runInTestZone(fn, context, finishCallback, failCallback) {\n            const currentZone = Zone.current;\n            const AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n            if (AsyncTestZoneSpec === undefined) {\n                throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/plugins/async-test');\n            }\n            const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n            if (!ProxyZoneSpec) {\n                throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/plugins/proxy');\n            }\n            const proxyZoneSpec = ProxyZoneSpec.get();\n            ProxyZoneSpec.assertPresent();\n            // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n            // If we do it in ProxyZone then we will get to infinite recursion.\n            const proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n            const previousDelegate = proxyZoneSpec.getDelegate();\n            proxyZone.parent.run(() => {\n                const testZoneSpec = new AsyncTestZoneSpec(() => {\n                    // Need to restore the original zone.\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's\n                        // still this one. Otherwise, assume\n                        // it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    testZoneSpec.unPatchPromiseForTest();\n                    currentZone.run(() => {\n                        finishCallback();\n                    });\n                }, (error) => {\n                    // Need to restore the original zone.\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    testZoneSpec.unPatchPromiseForTest();\n                    currentZone.run(() => {\n                        failCallback(error);\n                    });\n                }, 'test');\n                proxyZoneSpec.setDelegate(testZoneSpec);\n                testZoneSpec.patchPromiseForTest();\n            });\n            return Zone.current.runGuarded(fn, context);\n        }\n    });\n}\n\nconst global$1 = (typeof window === 'object' && window) || (typeof self === 'object' && self) || globalThis.global;\nconst OriginalDate = global$1.Date;\n// Since when we compile this file to `es2015`, and if we define\n// this `FakeDate` as `class FakeDate`, and then set `FakeDate.prototype`\n// there will be an error which is `Cannot assign to read only property 'prototype'`\n// so we need to use function implementation here.\nfunction FakeDate() {\n    if (arguments.length === 0) {\n        const d = new OriginalDate();\n        d.setTime(FakeDate.now());\n        return d;\n    }\n    else {\n        const args = Array.prototype.slice.call(arguments);\n        return new OriginalDate(...args);\n    }\n}\nFakeDate.now = function () {\n    const fakeAsyncTestZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n    if (fakeAsyncTestZoneSpec) {\n        return fakeAsyncTestZoneSpec.getFakeSystemTime();\n    }\n    return OriginalDate.now.apply(this, arguments);\n};\nFakeDate.UTC = OriginalDate.UTC;\nFakeDate.parse = OriginalDate.parse;\n// keep a reference for zone patched timer function\nlet patchedTimers;\nconst timeoutCallback = function () { };\nclass Scheduler {\n    // Next scheduler id.\n    static nextNodeJSId = 1;\n    static nextId = -1;\n    // Scheduler queue with the tuple of end time and callback function - sorted by end time.\n    _schedulerQueue = [];\n    // Current simulated time in millis.\n    _currentTickTime = 0;\n    // Current fake system base time in millis.\n    _currentFakeBaseSystemTime = OriginalDate.now();\n    // track requeuePeriodicTimer\n    _currentTickRequeuePeriodicEntries = [];\n    constructor() { }\n    static getNextId() {\n        const id = patchedTimers.nativeSetTimeout.call(global$1, timeoutCallback, 0);\n        patchedTimers.nativeClearTimeout.call(global$1, id);\n        if (typeof id === 'number') {\n            return id;\n        }\n        // in NodeJS, we just use a number for fakeAsync, since it will not\n        // conflict with native TimeoutId\n        return Scheduler.nextNodeJSId++;\n    }\n    getCurrentTickTime() {\n        return this._currentTickTime;\n    }\n    getFakeSystemTime() {\n        return this._currentFakeBaseSystemTime + this._currentTickTime;\n    }\n    setFakeBaseSystemTime(fakeBaseSystemTime) {\n        this._currentFakeBaseSystemTime = fakeBaseSystemTime;\n    }\n    getRealSystemTime() {\n        return OriginalDate.now();\n    }\n    scheduleFunction(cb, delay, options) {\n        options = {\n            ...{\n                args: [],\n                isPeriodic: false,\n                isRequestAnimationFrame: false,\n                id: -1,\n                isRequeuePeriodic: false,\n            },\n            ...options,\n        };\n        let currentId = options.id < 0 ? Scheduler.nextId : options.id;\n        Scheduler.nextId = Scheduler.getNextId();\n        let endTime = this._currentTickTime + delay;\n        // Insert so that scheduler queue remains sorted by end time.\n        let newEntry = {\n            endTime: endTime,\n            id: currentId,\n            func: cb,\n            args: options.args,\n            delay: delay,\n            isPeriodic: options.isPeriodic,\n            isRequestAnimationFrame: options.isRequestAnimationFrame,\n        };\n        if (options.isRequeuePeriodic) {\n            this._currentTickRequeuePeriodicEntries.push(newEntry);\n        }\n        let i = 0;\n        for (; i < this._schedulerQueue.length; i++) {\n            let currentEntry = this._schedulerQueue[i];\n            if (newEntry.endTime < currentEntry.endTime) {\n                break;\n            }\n        }\n        this._schedulerQueue.splice(i, 0, newEntry);\n        return currentId;\n    }\n    removeScheduledFunctionWithId(id) {\n        for (let i = 0; i < this._schedulerQueue.length; i++) {\n            if (this._schedulerQueue[i].id == id) {\n                this._schedulerQueue.splice(i, 1);\n                break;\n            }\n        }\n    }\n    removeAll() {\n        this._schedulerQueue = [];\n    }\n    getTimerCount() {\n        return this._schedulerQueue.length;\n    }\n    tickToNext(step = 1, doTick, tickOptions) {\n        if (this._schedulerQueue.length < step) {\n            return;\n        }\n        // Find the last task currently queued in the scheduler queue and tick\n        // till that time.\n        const startTime = this._currentTickTime;\n        const targetTask = this._schedulerQueue[step - 1];\n        this.tick(targetTask.endTime - startTime, doTick, tickOptions);\n    }\n    tick(millis = 0, doTick, tickOptions) {\n        let finalTime = this._currentTickTime + millis;\n        let lastCurrentTime = 0;\n        tickOptions = Object.assign({ processNewMacroTasksSynchronously: true }, tickOptions);\n        // we need to copy the schedulerQueue so nested timeout\n        // will not be wrongly called in the current tick\n        // https://github.com/angular/angular/issues/33799\n        const schedulerQueue = tickOptions.processNewMacroTasksSynchronously\n            ? this._schedulerQueue\n            : this._schedulerQueue.slice();\n        if (schedulerQueue.length === 0 && doTick) {\n            doTick(millis);\n            return;\n        }\n        while (schedulerQueue.length > 0) {\n            // clear requeueEntries before each loop\n            this._currentTickRequeuePeriodicEntries = [];\n            let current = schedulerQueue[0];\n            if (finalTime < current.endTime) {\n                // Done processing the queue since it's sorted by endTime.\n                break;\n            }\n            else {\n                // Time to run scheduled function. Remove it from the head of queue.\n                let current = schedulerQueue.shift();\n                if (!tickOptions.processNewMacroTasksSynchronously) {\n                    const idx = this._schedulerQueue.indexOf(current);\n                    if (idx >= 0) {\n                        this._schedulerQueue.splice(idx, 1);\n                    }\n                }\n                lastCurrentTime = this._currentTickTime;\n                this._currentTickTime = current.endTime;\n                if (doTick) {\n                    doTick(this._currentTickTime - lastCurrentTime);\n                }\n                let retval = current.func.apply(global$1, current.isRequestAnimationFrame ? [this._currentTickTime] : current.args);\n                if (!retval) {\n                    // Uncaught exception in the current scheduled function. Stop processing the queue.\n                    break;\n                }\n                // check is there any requeue periodic entry is added in\n                // current loop, if there is, we need to add to current loop\n                if (!tickOptions.processNewMacroTasksSynchronously) {\n                    this._currentTickRequeuePeriodicEntries.forEach((newEntry) => {\n                        let i = 0;\n                        for (; i < schedulerQueue.length; i++) {\n                            const currentEntry = schedulerQueue[i];\n                            if (newEntry.endTime < currentEntry.endTime) {\n                                break;\n                            }\n                        }\n                        schedulerQueue.splice(i, 0, newEntry);\n                    });\n                }\n            }\n        }\n        lastCurrentTime = this._currentTickTime;\n        this._currentTickTime = finalTime;\n        if (doTick) {\n            doTick(this._currentTickTime - lastCurrentTime);\n        }\n    }\n    flushOnlyPendingTimers(doTick) {\n        if (this._schedulerQueue.length === 0) {\n            return 0;\n        }\n        // Find the last task currently queued in the scheduler queue and tick\n        // till that time.\n        const startTime = this._currentTickTime;\n        const lastTask = this._schedulerQueue[this._schedulerQueue.length - 1];\n        this.tick(lastTask.endTime - startTime, doTick, { processNewMacroTasksSynchronously: false });\n        return this._currentTickTime - startTime;\n    }\n    flush(limit = 20, flushPeriodic = false, doTick) {\n        if (flushPeriodic) {\n            return this.flushPeriodic(doTick);\n        }\n        else {\n            return this.flushNonPeriodic(limit, doTick);\n        }\n    }\n    flushPeriodic(doTick) {\n        if (this._schedulerQueue.length === 0) {\n            return 0;\n        }\n        // Find the last task currently queued in the scheduler queue and tick\n        // till that time.\n        const startTime = this._currentTickTime;\n        const lastTask = this._schedulerQueue[this._schedulerQueue.length - 1];\n        this.tick(lastTask.endTime - startTime, doTick);\n        return this._currentTickTime - startTime;\n    }\n    flushNonPeriodic(limit, doTick) {\n        const startTime = this._currentTickTime;\n        let lastCurrentTime = 0;\n        let count = 0;\n        while (this._schedulerQueue.length > 0) {\n            count++;\n            if (count > limit) {\n                throw new Error('flush failed after reaching the limit of ' +\n                    limit +\n                    ' tasks. Does your code use a polling timeout?');\n            }\n            // flush only non-periodic timers.\n            // If the only remaining tasks are periodic(or requestAnimationFrame), finish flushing.\n            if (this._schedulerQueue.filter((task) => !task.isPeriodic && !task.isRequestAnimationFrame)\n                .length === 0) {\n                break;\n            }\n            const current = this._schedulerQueue.shift();\n            lastCurrentTime = this._currentTickTime;\n            this._currentTickTime = current.endTime;\n            if (doTick) {\n                // Update any secondary schedulers like Jasmine mock Date.\n                doTick(this._currentTickTime - lastCurrentTime);\n            }\n            const retval = current.func.apply(global$1, current.args);\n            if (!retval) {\n                // Uncaught exception in the current scheduled function. Stop processing the queue.\n                break;\n            }\n        }\n        return this._currentTickTime - startTime;\n    }\n}\nclass FakeAsyncTestZoneSpec {\n    trackPendingRequestAnimationFrame;\n    macroTaskOptions;\n    static assertInZone() {\n        if (Zone.current.get('FakeAsyncTestZoneSpec') == null) {\n            throw new Error('The code should be running in the fakeAsync zone to call this function');\n        }\n    }\n    _scheduler = new Scheduler();\n    _microtasks = [];\n    _lastError = null;\n    _uncaughtPromiseErrors = Promise[Zone.__symbol__('uncaughtPromiseErrors')];\n    pendingPeriodicTimers = [];\n    pendingTimers = [];\n    patchDateLocked = false;\n    constructor(namePrefix, trackPendingRequestAnimationFrame = false, macroTaskOptions) {\n        this.trackPendingRequestAnimationFrame = trackPendingRequestAnimationFrame;\n        this.macroTaskOptions = macroTaskOptions;\n        this.name = 'fakeAsyncTestZone for ' + namePrefix;\n        // in case user can't access the construction of FakeAsyncTestSpec\n        // user can also define macroTaskOptions by define a global variable.\n        if (!this.macroTaskOptions) {\n            this.macroTaskOptions = global$1[Zone.__symbol__('FakeAsyncTestMacroTask')];\n        }\n    }\n    _fnAndFlush(fn, completers) {\n        return (...args) => {\n            fn.apply(global$1, args);\n            if (this._lastError === null) {\n                // Success\n                if (completers.onSuccess != null) {\n                    completers.onSuccess.apply(global$1);\n                }\n                // Flush microtasks only on success.\n                this.flushMicrotasks();\n            }\n            else {\n                // Failure\n                if (completers.onError != null) {\n                    completers.onError.apply(global$1);\n                }\n            }\n            // Return true if there were no errors, false otherwise.\n            return this._lastError === null;\n        };\n    }\n    static _removeTimer(timers, id) {\n        let index = timers.indexOf(id);\n        if (index > -1) {\n            timers.splice(index, 1);\n        }\n    }\n    _dequeueTimer(id) {\n        return () => {\n            FakeAsyncTestZoneSpec._removeTimer(this.pendingTimers, id);\n        };\n    }\n    _requeuePeriodicTimer(fn, interval, args, id) {\n        return () => {\n            // Requeue the timer callback if it's not been canceled.\n            if (this.pendingPeriodicTimers.indexOf(id) !== -1) {\n                this._scheduler.scheduleFunction(fn, interval, {\n                    args,\n                    isPeriodic: true,\n                    id,\n                    isRequeuePeriodic: true,\n                });\n            }\n        };\n    }\n    _dequeuePeriodicTimer(id) {\n        return () => {\n            FakeAsyncTestZoneSpec._removeTimer(this.pendingPeriodicTimers, id);\n        };\n    }\n    _setTimeout(fn, delay, args, isTimer = true) {\n        let removeTimerFn = this._dequeueTimer(Scheduler.nextId);\n        // Queue the callback and dequeue the timer on success and error.\n        let cb = this._fnAndFlush(fn, { onSuccess: removeTimerFn, onError: removeTimerFn });\n        let id = this._scheduler.scheduleFunction(cb, delay, { args, isRequestAnimationFrame: !isTimer });\n        if (isTimer) {\n            this.pendingTimers.push(id);\n        }\n        return id;\n    }\n    _clearTimeout(id) {\n        FakeAsyncTestZoneSpec._removeTimer(this.pendingTimers, id);\n        this._scheduler.removeScheduledFunctionWithId(id);\n    }\n    _setInterval(fn, interval, args) {\n        let id = Scheduler.nextId;\n        let completers = { onSuccess: null, onError: this._dequeuePeriodicTimer(id) };\n        let cb = this._fnAndFlush(fn, completers);\n        // Use the callback created above to requeue on success.\n        completers.onSuccess = this._requeuePeriodicTimer(cb, interval, args, id);\n        // Queue the callback and dequeue the periodic timer only on error.\n        this._scheduler.scheduleFunction(cb, interval, { args, isPeriodic: true });\n        this.pendingPeriodicTimers.push(id);\n        return id;\n    }\n    _clearInterval(id) {\n        FakeAsyncTestZoneSpec._removeTimer(this.pendingPeriodicTimers, id);\n        this._scheduler.removeScheduledFunctionWithId(id);\n    }\n    _resetLastErrorAndThrow() {\n        let error = this._lastError || this._uncaughtPromiseErrors[0];\n        this._uncaughtPromiseErrors.length = 0;\n        this._lastError = null;\n        throw error;\n    }\n    getCurrentTickTime() {\n        return this._scheduler.getCurrentTickTime();\n    }\n    getFakeSystemTime() {\n        return this._scheduler.getFakeSystemTime();\n    }\n    setFakeBaseSystemTime(realTime) {\n        this._scheduler.setFakeBaseSystemTime(realTime);\n    }\n    getRealSystemTime() {\n        return this._scheduler.getRealSystemTime();\n    }\n    static patchDate() {\n        if (!!global$1[Zone.__symbol__('disableDatePatching')]) {\n            // we don't want to patch global Date\n            // because in some case, global Date\n            // is already being patched, we need to provide\n            // an option to let user still use their\n            // own version of Date.\n            return;\n        }\n        if (global$1['Date'] === FakeDate) {\n            // already patched\n            return;\n        }\n        global$1['Date'] = FakeDate;\n        FakeDate.prototype = OriginalDate.prototype;\n        // try check and reset timers\n        // because jasmine.clock().install() may\n        // have replaced the global timer\n        FakeAsyncTestZoneSpec.checkTimerPatch();\n    }\n    static resetDate() {\n        if (global$1['Date'] === FakeDate) {\n            global$1['Date'] = OriginalDate;\n        }\n    }\n    static checkTimerPatch() {\n        if (!patchedTimers) {\n            throw new Error('Expected timers to have been patched.');\n        }\n        if (global$1.setTimeout !== patchedTimers.setTimeout) {\n            global$1.setTimeout = patchedTimers.setTimeout;\n            global$1.clearTimeout = patchedTimers.clearTimeout;\n        }\n        if (global$1.setInterval !== patchedTimers.setInterval) {\n            global$1.setInterval = patchedTimers.setInterval;\n            global$1.clearInterval = patchedTimers.clearInterval;\n        }\n    }\n    lockDatePatch() {\n        this.patchDateLocked = true;\n        FakeAsyncTestZoneSpec.patchDate();\n    }\n    unlockDatePatch() {\n        this.patchDateLocked = false;\n        FakeAsyncTestZoneSpec.resetDate();\n    }\n    tickToNext(steps = 1, doTick, tickOptions = { processNewMacroTasksSynchronously: true }) {\n        if (steps <= 0) {\n            return;\n        }\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        this._scheduler.tickToNext(steps, doTick, tickOptions);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n    }\n    tick(millis = 0, doTick, tickOptions = { processNewMacroTasksSynchronously: true }) {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        this._scheduler.tick(millis, doTick, tickOptions);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n    }\n    flushMicrotasks() {\n        FakeAsyncTestZoneSpec.assertInZone();\n        const flushErrors = () => {\n            if (this._lastError !== null || this._uncaughtPromiseErrors.length) {\n                // If there is an error stop processing the microtask queue and rethrow the error.\n                this._resetLastErrorAndThrow();\n            }\n        };\n        while (this._microtasks.length > 0) {\n            let microtask = this._microtasks.shift();\n            microtask.func.apply(microtask.target, microtask.args);\n        }\n        flushErrors();\n    }\n    flush(limit, flushPeriodic, doTick) {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        const elapsed = this._scheduler.flush(limit, flushPeriodic, doTick);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n        return elapsed;\n    }\n    flushOnlyPendingTimers(doTick) {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        const elapsed = this._scheduler.flushOnlyPendingTimers(doTick);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n        return elapsed;\n    }\n    removeAllTimers() {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this._scheduler.removeAll();\n        this.pendingPeriodicTimers = [];\n        this.pendingTimers = [];\n    }\n    getTimerCount() {\n        return this._scheduler.getTimerCount() + this._microtasks.length;\n    }\n    // ZoneSpec implementation below.\n    name;\n    properties = { 'FakeAsyncTestZoneSpec': this };\n    onScheduleTask(delegate, current, target, task) {\n        switch (task.type) {\n            case 'microTask':\n                let args = task.data && task.data.args;\n                // should pass additional arguments to callback if have any\n                // currently we know process.nextTick will have such additional\n                // arguments\n                let additionalArgs;\n                if (args) {\n                    let callbackIndex = task.data.cbIdx;\n                    if (typeof args.length === 'number' && args.length > callbackIndex + 1) {\n                        additionalArgs = Array.prototype.slice.call(args, callbackIndex + 1);\n                    }\n                }\n                this._microtasks.push({\n                    func: task.invoke,\n                    args: additionalArgs,\n                    target: task.data && task.data.target,\n                });\n                break;\n            case 'macroTask':\n                switch (task.source) {\n                    case 'setTimeout':\n                        task.data['handleId'] = this._setTimeout(task.invoke, task.data['delay'], Array.prototype.slice.call(task.data['args'], 2));\n                        break;\n                    case 'setImmediate':\n                        task.data['handleId'] = this._setTimeout(task.invoke, 0, Array.prototype.slice.call(task.data['args'], 1));\n                        break;\n                    case 'setInterval':\n                        task.data['handleId'] = this._setInterval(task.invoke, task.data['delay'], Array.prototype.slice.call(task.data['args'], 2));\n                        break;\n                    case 'XMLHttpRequest.send':\n                        throw new Error('Cannot make XHRs from within a fake async test. Request URL: ' +\n                            task.data['url']);\n                    case 'requestAnimationFrame':\n                    case 'webkitRequestAnimationFrame':\n                    case 'mozRequestAnimationFrame':\n                        // Simulate a requestAnimationFrame by using a setTimeout with 16 ms.\n                        // (60 frames per second)\n                        task.data['handleId'] = this._setTimeout(task.invoke, 16, task.data['args'], this.trackPendingRequestAnimationFrame);\n                        break;\n                    default:\n                        // user can define which macroTask they want to support by passing\n                        // macroTaskOptions\n                        const macroTaskOption = this.findMacroTaskOption(task);\n                        if (macroTaskOption) {\n                            const args = task.data && task.data['args'];\n                            const delay = args && args.length > 1 ? args[1] : 0;\n                            let callbackArgs = macroTaskOption.callbackArgs ? macroTaskOption.callbackArgs : args;\n                            if (!!macroTaskOption.isPeriodic) {\n                                // periodic macroTask, use setInterval to simulate\n                                task.data['handleId'] = this._setInterval(task.invoke, delay, callbackArgs);\n                                task.data.isPeriodic = true;\n                            }\n                            else {\n                                // not periodic, use setTimeout to simulate\n                                task.data['handleId'] = this._setTimeout(task.invoke, delay, callbackArgs);\n                            }\n                            break;\n                        }\n                        throw new Error('Unknown macroTask scheduled in fake async test: ' + task.source);\n                }\n                break;\n            case 'eventTask':\n                task = delegate.scheduleTask(target, task);\n                break;\n        }\n        return task;\n    }\n    onCancelTask(delegate, current, target, task) {\n        switch (task.source) {\n            case 'setTimeout':\n            case 'requestAnimationFrame':\n            case 'webkitRequestAnimationFrame':\n            case 'mozRequestAnimationFrame':\n                return this._clearTimeout(task.data['handleId']);\n            case 'setInterval':\n                return this._clearInterval(task.data['handleId']);\n            default:\n                // user can define which macroTask they want to support by passing\n                // macroTaskOptions\n                const macroTaskOption = this.findMacroTaskOption(task);\n                if (macroTaskOption) {\n                    const handleId = task.data['handleId'];\n                    return macroTaskOption.isPeriodic\n                        ? this._clearInterval(handleId)\n                        : this._clearTimeout(handleId);\n                }\n                return delegate.cancelTask(target, task);\n        }\n    }\n    onInvoke(delegate, current, target, callback, applyThis, applyArgs, source) {\n        try {\n            FakeAsyncTestZoneSpec.patchDate();\n            return delegate.invoke(target, callback, applyThis, applyArgs, source);\n        }\n        finally {\n            if (!this.patchDateLocked) {\n                FakeAsyncTestZoneSpec.resetDate();\n            }\n        }\n    }\n    findMacroTaskOption(task) {\n        if (!this.macroTaskOptions) {\n            return null;\n        }\n        for (let i = 0; i < this.macroTaskOptions.length; i++) {\n            const macroTaskOption = this.macroTaskOptions[i];\n            if (macroTaskOption.source === task.source) {\n                return macroTaskOption;\n            }\n        }\n        return null;\n    }\n    onHandleError(parentZoneDelegate, currentZone, targetZone, error) {\n        // ComponentFixture has a special-case handling to detect FakeAsyncTestZoneSpec\n        // and prevent rethrowing the error from the onError subscription since it's handled here.\n        this._lastError = error;\n        return false; // Don't propagate error to parent zone.\n    }\n}\nlet _fakeAsyncTestZoneSpec = null;\nfunction getProxyZoneSpec() {\n    return Zone && Zone['ProxyZoneSpec'];\n}\nlet _sharedProxyZoneSpec = null;\nlet _sharedProxyZone = null;\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @experimental\n */\nfunction resetFakeAsyncZone() {\n    if (_fakeAsyncTestZoneSpec) {\n        _fakeAsyncTestZoneSpec.unlockDatePatch();\n    }\n    _fakeAsyncTestZoneSpec = null;\n    getProxyZoneSpec()?.get()?.resetDelegate();\n    _sharedProxyZoneSpec?.resetDelegate();\n}\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * When flush is `false`, if there are any pending timers at the end of the function,\n * an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * ## Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @param options\n *     flush: when true, will drain the macrotask queue after the test function completes.\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @experimental\n */\nfunction fakeAsync(fn, options = {}) {\n    const { flush = true } = options;\n    // Not using an arrow function to preserve context passed from call site\n    const fakeAsyncFn = function (...args) {\n        const ProxyZoneSpec = getProxyZoneSpec();\n        if (!ProxyZoneSpec) {\n            throw new Error('ProxyZoneSpec is needed for the fakeAsync() test helper but could not be found. ' +\n                'Make sure that your environment includes zone-testing.js');\n        }\n        const proxyZoneSpec = ProxyZoneSpec.assertPresent();\n        if (Zone.current.get('FakeAsyncTestZoneSpec')) {\n            throw new Error('fakeAsync() calls can not be nested');\n        }\n        try {\n            // in case jasmine.clock init a fakeAsyncTestZoneSpec\n            if (!_fakeAsyncTestZoneSpec) {\n                const FakeAsyncTestZoneSpec = Zone && Zone['FakeAsyncTestZoneSpec'];\n                if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                    throw new Error('fakeAsync() calls can not be nested');\n                }\n                _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n            }\n            let res;\n            const lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n            proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n            _fakeAsyncTestZoneSpec.lockDatePatch();\n            try {\n                res = fn.apply(this, args);\n                if (flush) {\n                    _fakeAsyncTestZoneSpec.flush(20, true);\n                }\n                else {\n                    flushMicrotasks();\n                }\n            }\n            finally {\n                proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n            }\n            if (!flush) {\n                if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                    throw new Error(`${_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length} ` +\n                        `periodic timer(s) still in the queue.`);\n                }\n                if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                    throw new Error(`${_fakeAsyncTestZoneSpec.pendingTimers.length} timer(s) still in the queue.`);\n                }\n            }\n            return res;\n        }\n        finally {\n            resetFakeAsyncZone();\n        }\n    };\n    fakeAsyncFn.isFakeAsync = true;\n    return fakeAsyncFn;\n}\nfunction _getFakeAsyncZoneSpec() {\n    if (_fakeAsyncTestZoneSpec == null) {\n        _fakeAsyncTestZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n        if (_fakeAsyncTestZoneSpec == null) {\n            throw new Error('The code should be running in the fakeAsync zone to call this function');\n        }\n    }\n    return _fakeAsyncTestZoneSpec;\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer\n * callback has been executed.\n *\n * ## Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @experimental\n */\nfunction tick(millis = 0, ignoreNestedTimeout = false) {\n    _getFakeAsyncZoneSpec().tick(millis, null, ignoreNestedTimeout);\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @experimental\n */\nfunction flush(maxTurns) {\n    return _getFakeAsyncZoneSpec().flush(maxTurns);\n}\n/**\n * Discard all remaining periodic tasks.\n *\n * @experimental\n */\nfunction discardPeriodicTasks() {\n    const zoneSpec = _getFakeAsyncZoneSpec();\n    zoneSpec.pendingPeriodicTimers;\n    zoneSpec.pendingPeriodicTimers.length = 0;\n}\n/**\n * Wraps a function to be executed in a shared ProxyZone.\n *\n * If no shared ProxyZone exists, one is created and reused for subsequent calls.\n * Useful for wrapping test setup (beforeEach) and test execution (it) when test\n * runner patching isn't available or desired for setting up the ProxyZone.\n *\n * @param fn The function to wrap.\n * @returns A function that executes the original function within the shared ProxyZone.\n *\n * @experimental\n */\nfunction withProxyZone(fn) {\n    const autoProxyFn = function (...args) {\n        const proxyZoneSpec = getProxyZoneSpec();\n        if (proxyZoneSpec === undefined) {\n            throw new Error('ProxyZoneSpec is needed for the withProxyZone() test helper but could not be found. ' +\n                'Make sure that your environment includes zone-testing.js');\n        }\n        const proxyZone = proxyZoneSpec.get() !== undefined ? Zone.current : getOrCreateRootProxy();\n        return proxyZone.run(fn, this, args);\n    };\n    return autoProxyFn;\n}\nfunction getOrCreateRootProxy() {\n    const ProxyZoneSpec = getProxyZoneSpec();\n    if (ProxyZoneSpec === undefined) {\n        throw new Error('ProxyZoneSpec is needed for withProxyZone but could not be found. ' +\n            'Make sure that your environment includes zone-testing.js');\n    }\n    // Ensure the shared ProxyZoneSpec instance exists\n    if (_sharedProxyZoneSpec === null) {\n        _sharedProxyZoneSpec = new ProxyZoneSpec();\n    }\n    _sharedProxyZone = Zone.root.fork(_sharedProxyZoneSpec);\n    return _sharedProxyZone;\n}\n/**\n * Flush any pending microtasks.\n *\n * @experimental\n */\nfunction flushMicrotasks() {\n    _getFakeAsyncZoneSpec().flushMicrotasks();\n}\nfunction patchFakeAsyncTest(Zone) {\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['FakeAsyncTestZoneSpec'] = FakeAsyncTestZoneSpec;\n    Zone.__load_patch('fakeasync', (global, Zone, api) => {\n        Zone[api.symbol('fakeAsyncTest')] = {\n            resetFakeAsyncZone,\n            flushMicrotasks,\n            discardPeriodicTasks,\n            tick,\n            flush,\n            fakeAsync,\n            withProxyZone,\n        };\n    }, true);\n    patchedTimers = {\n        setTimeout: global$1.setTimeout,\n        setInterval: global$1.setInterval,\n        clearTimeout: global$1.clearTimeout,\n        clearInterval: global$1.clearInterval,\n        nativeSetTimeout: global$1[Zone.__symbol__('setTimeout')],\n        nativeClearTimeout: global$1[Zone.__symbol__('clearTimeout')],\n    };\n    Scheduler.nextId = Scheduler.getNextId();\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction patchLongStackTrace(Zone) {\n    const NEWLINE = '\\n';\n    const IGNORE_FRAMES = {};\n    const creationTrace = '__creationTrace__';\n    const ERROR_TAG = 'STACKTRACE TRACKING';\n    const SEP_TAG = '__SEP_TAG__';\n    let sepTemplate = SEP_TAG + '@[native]';\n    class LongStackTrace {\n        error = getStacktrace();\n        timestamp = new Date();\n    }\n    function getStacktraceWithUncaughtError() {\n        return new Error(ERROR_TAG);\n    }\n    function getStacktraceWithCaughtError() {\n        try {\n            throw getStacktraceWithUncaughtError();\n        }\n        catch (err) {\n            return err;\n        }\n    }\n    // Some implementations of exception handling don't create a stack trace if the exception\n    // isn't thrown, however it's faster not to actually throw the exception.\n    const error = getStacktraceWithUncaughtError();\n    const caughtError = getStacktraceWithCaughtError();\n    const getStacktrace = error.stack\n        ? getStacktraceWithUncaughtError\n        : caughtError.stack\n            ? getStacktraceWithCaughtError\n            : getStacktraceWithUncaughtError;\n    function getFrames(error) {\n        return error.stack ? error.stack.split(NEWLINE) : [];\n    }\n    function addErrorStack(lines, error) {\n        let trace = getFrames(error);\n        for (let i = 0; i < trace.length; i++) {\n            const frame = trace[i];\n            // Filter out the Frames which are part of stack capturing.\n            if (!IGNORE_FRAMES.hasOwnProperty(frame)) {\n                lines.push(trace[i]);\n            }\n        }\n    }\n    function renderLongStackTrace(frames, stack) {\n        const longTrace = [stack ? stack.trim() : ''];\n        if (frames) {\n            let timestamp = new Date().getTime();\n            for (let i = 0; i < frames.length; i++) {\n                const traceFrames = frames[i];\n                const lastTime = traceFrames.timestamp;\n                let separator = `____________________Elapsed ${timestamp - lastTime.getTime()} ms; At: ${lastTime}`;\n                separator = separator.replace(/[^\\w\\d]/g, '_');\n                longTrace.push(sepTemplate.replace(SEP_TAG, separator));\n                addErrorStack(longTrace, traceFrames.error);\n                timestamp = lastTime.getTime();\n            }\n        }\n        return longTrace.join(NEWLINE);\n    }\n    // if Error.stackTraceLimit is 0, means stack trace\n    // is disabled, so we don't need to generate long stack trace\n    // this will improve performance in some test(some test will\n    // set stackTraceLimit to 0, https://github.com/angular/zone.js/issues/698\n    function stackTracesEnabled() {\n        // Cast through any since this property only exists on Error in the nodejs\n        // typings.\n        return Error.stackTraceLimit > 0;\n    }\n    Zone['longStackTraceZoneSpec'] = {\n        name: 'long-stack-trace',\n        longStackTraceLimit: 10, // Max number of task to keep the stack trace for.\n        // add a getLongStackTrace method in spec to\n        // handle handled reject promise error.\n        getLongStackTrace: function (error) {\n            if (!error) {\n                return undefined;\n            }\n            const trace = error[Zone.__symbol__('currentTaskTrace')];\n            if (!trace) {\n                return error.stack;\n            }\n            return renderLongStackTrace(trace, error.stack);\n        },\n        onScheduleTask: function (parentZoneDelegate, currentZone, targetZone, task) {\n            if (stackTracesEnabled()) {\n                const currentTask = Zone.currentTask;\n                let trace = (currentTask && currentTask.data && currentTask.data[creationTrace]) || [];\n                trace = [new LongStackTrace()].concat(trace);\n                if (trace.length > this.longStackTraceLimit) {\n                    trace.length = this.longStackTraceLimit;\n                }\n                if (!task.data)\n                    task.data = {};\n                if (task.type === 'eventTask') {\n                    // Fix issue https://github.com/angular/zone.js/issues/1195,\n                    // For event task of browser, by default, all task will share a\n                    // singleton instance of data object, we should create a new one here\n                    // The cast to `any` is required to workaround a closure bug which wrongly applies\n                    // URL sanitization rules to .data access.\n                    task.data = { ...task.data };\n                }\n                task.data[creationTrace] = trace;\n            }\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        },\n        onHandleError: function (parentZoneDelegate, currentZone, targetZone, error) {\n            if (stackTracesEnabled()) {\n                const parentTask = Zone.currentTask || error.task;\n                if (error instanceof Error && parentTask) {\n                    const longStack = renderLongStackTrace(parentTask.data && parentTask.data[creationTrace], error.stack);\n                    try {\n                        error.stack = error.longStack = longStack;\n                    }\n                    catch (err) { }\n                }\n            }\n            return parentZoneDelegate.handleError(targetZone, error);\n        },\n    };\n    function captureStackTraces(stackTraces, count) {\n        if (count > 0) {\n            stackTraces.push(getFrames(new LongStackTrace().error));\n            captureStackTraces(stackTraces, count - 1);\n        }\n    }\n    function computeIgnoreFrames() {\n        if (!stackTracesEnabled()) {\n            return;\n        }\n        const frames = [];\n        captureStackTraces(frames, 2);\n        const frames1 = frames[0];\n        const frames2 = frames[1];\n        for (let i = 0; i < frames1.length; i++) {\n            const frame1 = frames1[i];\n            if (frame1.indexOf(ERROR_TAG) == -1) {\n                let match = frame1.match(/^\\s*at\\s+/);\n                if (match) {\n                    sepTemplate = match[0] + SEP_TAG + ' (http://localhost)';\n                    break;\n                }\n            }\n        }\n        for (let i = 0; i < frames1.length; i++) {\n            const frame1 = frames1[i];\n            const frame2 = frames2[i];\n            if (frame1 === frame2) {\n                IGNORE_FRAMES[frame1] = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    computeIgnoreFrames();\n}\n\nclass ProxyZoneSpec {\n    defaultSpecDelegate;\n    name = 'ProxyZone';\n    _delegateSpec = null;\n    properties = { 'ProxyZoneSpec': this };\n    propertyKeys = null;\n    lastTaskState = null;\n    isNeedToTriggerHasTask = false;\n    tasks = [];\n    static get() {\n        return Zone.current.get('ProxyZoneSpec');\n    }\n    static isLoaded() {\n        return ProxyZoneSpec.get() instanceof ProxyZoneSpec;\n    }\n    static assertPresent() {\n        const spec = ProxyZoneSpec.get();\n        if (spec === undefined) {\n            throw new Error(`Expected to be running in 'ProxyZone', but it was not found.`);\n        }\n        return spec;\n    }\n    constructor(defaultSpecDelegate = null) {\n        this.defaultSpecDelegate = defaultSpecDelegate;\n        this.setDelegate(defaultSpecDelegate);\n    }\n    setDelegate(delegateSpec) {\n        const isNewDelegate = this._delegateSpec !== delegateSpec;\n        this._delegateSpec = delegateSpec;\n        this.propertyKeys && this.propertyKeys.forEach((key) => delete this.properties[key]);\n        this.propertyKeys = null;\n        if (delegateSpec && delegateSpec.properties) {\n            this.propertyKeys = Object.keys(delegateSpec.properties);\n            this.propertyKeys.forEach((k) => (this.properties[k] = delegateSpec.properties[k]));\n        }\n        // if a new delegateSpec was set, check if we need to trigger hasTask\n        if (isNewDelegate &&\n            this.lastTaskState &&\n            (this.lastTaskState.macroTask || this.lastTaskState.microTask)) {\n            this.isNeedToTriggerHasTask = true;\n        }\n    }\n    getDelegate() {\n        return this._delegateSpec;\n    }\n    resetDelegate() {\n        this.getDelegate();\n        this.setDelegate(this.defaultSpecDelegate);\n    }\n    tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone) {\n        if (this.isNeedToTriggerHasTask && this.lastTaskState) {\n            // last delegateSpec has microTask or macroTask\n            // should call onHasTask in current delegateSpec\n            this.isNeedToTriggerHasTask = false;\n            this.onHasTask(parentZoneDelegate, currentZone, targetZone, this.lastTaskState);\n        }\n    }\n    removeFromTasks(task) {\n        if (!this.tasks) {\n            return;\n        }\n        for (let i = 0; i < this.tasks.length; i++) {\n            if (this.tasks[i] === task) {\n                this.tasks.splice(i, 1);\n                return;\n            }\n        }\n    }\n    getAndClearPendingTasksInfo() {\n        if (this.tasks.length === 0) {\n            return '';\n        }\n        const taskInfo = this.tasks.map((task) => {\n            const dataInfo = task.data &&\n                Object.keys(task.data)\n                    .map((key) => {\n                    return key + ':' + task.data[key];\n                })\n                    .join(',');\n            return `type: ${task.type}, source: ${task.source}, args: {${dataInfo}}`;\n        });\n        const pendingTasksInfo = '--Pending async tasks are: [' + taskInfo + ']';\n        // clear tasks\n        this.tasks = [];\n        return pendingTasksInfo;\n    }\n    onFork(parentZoneDelegate, currentZone, targetZone, zoneSpec) {\n        if (this._delegateSpec && this._delegateSpec.onFork) {\n            return this._delegateSpec.onFork(parentZoneDelegate, currentZone, targetZone, zoneSpec);\n        }\n        else {\n            return parentZoneDelegate.fork(targetZone, zoneSpec);\n        }\n    }\n    onIntercept(parentZoneDelegate, currentZone, targetZone, delegate, source) {\n        if (this._delegateSpec && this._delegateSpec.onIntercept) {\n            return this._delegateSpec.onIntercept(parentZoneDelegate, currentZone, targetZone, delegate, source);\n        }\n        else {\n            return parentZoneDelegate.intercept(targetZone, delegate, source);\n        }\n    }\n    onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onInvoke) {\n            return this._delegateSpec.onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source);\n        }\n        else {\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        }\n    }\n    onHandleError(parentZoneDelegate, currentZone, targetZone, error) {\n        if (this._delegateSpec && this._delegateSpec.onHandleError) {\n            return this._delegateSpec.onHandleError(parentZoneDelegate, currentZone, targetZone, error);\n        }\n        else {\n            return parentZoneDelegate.handleError(targetZone, error);\n        }\n    }\n    onScheduleTask(parentZoneDelegate, currentZone, targetZone, task) {\n        if (task.type !== 'eventTask') {\n            this.tasks.push(task);\n        }\n        if (this._delegateSpec && this._delegateSpec.onScheduleTask) {\n            return this._delegateSpec.onScheduleTask(parentZoneDelegate, currentZone, targetZone, task);\n        }\n        else {\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        }\n    }\n    onInvokeTask(parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n        if (task.type !== 'eventTask') {\n            this.removeFromTasks(task);\n        }\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onInvokeTask) {\n            return this._delegateSpec.onInvokeTask(parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs);\n        }\n        else {\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        }\n    }\n    onCancelTask(parentZoneDelegate, currentZone, targetZone, task) {\n        if (task.type !== 'eventTask') {\n            this.removeFromTasks(task);\n        }\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onCancelTask) {\n            return this._delegateSpec.onCancelTask(parentZoneDelegate, currentZone, targetZone, task);\n        }\n        else {\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        }\n    }\n    onHasTask(delegate, current, target, hasTaskState) {\n        this.lastTaskState = hasTaskState;\n        if (this._delegateSpec && this._delegateSpec.onHasTask) {\n            this._delegateSpec.onHasTask(delegate, current, target, hasTaskState);\n        }\n        else {\n            delegate.hasTask(target, hasTaskState);\n        }\n    }\n}\nfunction patchProxyZoneSpec(Zone) {\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['ProxyZoneSpec'] = ProxyZoneSpec;\n}\n\nfunction patchSyncTest(Zone) {\n    class SyncTestZoneSpec {\n        runZone = Zone.current;\n        constructor(namePrefix) {\n            this.name = 'syncTestZone for ' + namePrefix;\n        }\n        // ZoneSpec implementation below.\n        name;\n        onScheduleTask(delegate, current, target, task) {\n            switch (task.type) {\n                case 'microTask':\n                case 'macroTask':\n                    throw new Error(`Cannot call ${task.source} from within a sync test (${this.name}).`);\n                case 'eventTask':\n                    task = delegate.scheduleTask(target, task);\n                    break;\n            }\n            return task;\n        }\n    }\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['SyncTestZoneSpec'] = SyncTestZoneSpec;\n}\n\nfunction patchPromiseTesting(Zone) {\n    /**\n     * Promise for async/fakeAsync zoneSpec test\n     * can support async operation which not supported by zone.js\n     * such as\n     * it ('test jsonp in AsyncZone', async() => {\n     *   new Promise(res => {\n     *     jsonp(url, (data) => {\n     *       // success callback\n     *       res(data);\n     *     });\n     *   }).then((jsonpResult) => {\n     *     // get jsonp result.\n     *\n     *     // user will expect AsyncZoneSpec wait for\n     *     // then, but because jsonp is not zone aware\n     *     // AsyncZone will finish before then is called.\n     *   });\n     * });\n     */\n    Zone.__load_patch('promisefortest', (global, Zone, api) => {\n        const symbolState = api.symbol('state');\n        const UNRESOLVED = null;\n        const symbolParentUnresolved = api.symbol('parentUnresolved');\n        // patch Promise.prototype.then to keep an internal\n        // number for tracking unresolved chained promise\n        // we will decrease this number when the parent promise\n        // being resolved/rejected and chained promise was\n        // scheduled as a microTask.\n        // so we can know such kind of chained promise still\n        // not resolved in AsyncTestZone\n        Promise[api.symbol('patchPromiseForTest')] = function patchPromiseForTest() {\n            let oriThen = Promise[Zone.__symbol__('ZonePromiseThen')];\n            if (oriThen) {\n                return;\n            }\n            oriThen = Promise[Zone.__symbol__('ZonePromiseThen')] = Promise.prototype.then;\n            Promise.prototype.then = function () {\n                const chained = oriThen.apply(this, arguments);\n                if (this[symbolState] === UNRESOLVED) {\n                    // parent promise is unresolved.\n                    const asyncTestZoneSpec = Zone.current.get('AsyncTestZoneSpec');\n                    if (asyncTestZoneSpec) {\n                        asyncTestZoneSpec.unresolvedChainedPromiseCount++;\n                        chained[symbolParentUnresolved] = true;\n                    }\n                }\n                return chained;\n            };\n        };\n        Promise[api.symbol('unPatchPromiseForTest')] = function unpatchPromiseForTest() {\n            // restore origin then\n            const oriThen = Promise[Zone.__symbol__('ZonePromiseThen')];\n            if (oriThen) {\n                Promise.prototype.then = oriThen;\n                Promise[Zone.__symbol__('ZonePromiseThen')] = undefined;\n            }\n        };\n    });\n}\n\nfunction rollupTesting(Zone) {\n    patchLongStackTrace(Zone);\n    patchProxyZoneSpec(Zone);\n    patchSyncTest(Zone);\n    patchJasmine(Zone);\n    patchJest(Zone);\n    patchMocha(Zone);\n    patchAsyncTest(Zone);\n    patchFakeAsyncTest(Zone);\n    patchPromiseTesting(Zone);\n}\n\nrollupTesting(Zone);\n","import 'zone.js';\r\nimport 'zone.js/testing';\r\nimport { getTestBed } from '@angular/core/testing';\r\nimport {\r\n  BrowserDynamicTestingModule,\r\n  platformBrowserDynamicTesting\r\n} from '@angular/platform-browser-dynamic/testing';\r\n\r\n// Initialize the Angular testing environment.\r\ngetTestBed().initTestEnvironment(\r\n  BrowserDynamicTestingModule,\r\n  platformBrowserDynamicTesting()\r\n); ","/**\n * @license Angular v20.0.5\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { createPlatformFactory, NgModule } from '@angular/core';\nimport { platformBrowserDynamic } from './platform-browser-dynamic.mjs';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport '@angular/compiler';\nimport '@angular/platform-browser';\n\n/**\n * @deprecated Use the `platformBrowserTesting` function instead from `@angular/platform-browser/testing`.\n * In case you are not in a CLI app and rely on JIT compilation, you might also need to import `@angular/compiler`\n */\nconst platformBrowserDynamicTesting = createPlatformFactory(platformBrowserDynamic, 'browserDynamicTesting');\n/**\n * NgModule for testing.\n *\n * @deprecated Use the `BrowserTestingModule` from `@angular/platform-browser/testing` instead.\n */\nclass BrowserDynamicTestingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserDynamicTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserDynamicTestingModule, exports: [BrowserTestingModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserDynamicTestingModule, imports: [BrowserTestingModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserDynamicTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserTestingModule],\n                }]\n        }] });\n\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting };\n\n","/**\n * @license Angular v20.0.5\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Version, Injector, Compiler, ViewEncapsulation, Injectable, createPlatformFactory, COMPILER_OPTIONS, CompilerFactory } from '@angular/core';\nimport { CompilerConfig, ResourceLoader } from '@angular/compiler';\nimport { platformBrowser } from '@angular/platform-browser';\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser-dynamic package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.0.5');\n\nconst COMPILER_PROVIDERS = [\n    { provide: Compiler, useFactory: () => new Compiler() },\n];\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n */\nclass JitCompilerFactory {\n    _defaultOptions;\n    /** @internal */\n    constructor(defaultOptions) {\n        const compilerOptions = {\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n        };\n        this._defaultOptions = [compilerOptions, ...defaultOptions];\n    }\n    createCompiler(options = []) {\n        const opts = _mergeOptions(this._defaultOptions.concat(options));\n        const injector = Injector.create({\n            providers: [\n                COMPILER_PROVIDERS,\n                {\n                    provide: CompilerConfig,\n                    useFactory: () => {\n                        return new CompilerConfig({\n                            defaultEncapsulation: opts.defaultEncapsulation,\n                            preserveWhitespaces: opts.preserveWhitespaces,\n                        });\n                    },\n                    deps: [],\n                },\n                opts.providers,\n            ],\n        });\n        return injector.get(Compiler);\n    }\n}\nfunction _mergeOptions(optionsArr) {\n    return {\n        defaultEncapsulation: _lastDefined(optionsArr.map((options) => options.defaultEncapsulation)),\n        providers: _mergeArrays(optionsArr.map((options) => options.providers)),\n        preserveWhitespaces: _lastDefined(optionsArr.map((options) => options.preserveWhitespaces)),\n    };\n}\nfunction _lastDefined(args) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    const result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n\nclass ResourceLoaderImpl extends ResourceLoader {\n    get(url) {\n        let resolve;\n        let reject;\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            const response = xhr.response;\n            let status = xhr.status;\n            // fix status code when it is 0 (0 status is undocumented).\n            // Occurs when accessing file resources or on Android 4.1 stock browser\n            // while retrieving files from application cache.\n            if (status === 0) {\n                status = response ? 200 : 0;\n            }\n            if (200 <= status && status <= 300) {\n                resolve(response);\n            }\n            else {\n                reject(`Failed to load ${url}`);\n            }\n        };\n        xhr.onerror = function () {\n            reject(`Failed to load ${url}`);\n        };\n        xhr.send();\n        return promise;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: ResourceLoaderImpl, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: ResourceLoaderImpl });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: ResourceLoaderImpl, decorators: [{\n            type: Injectable\n        }] });\n\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n    {\n        provide: COMPILER_OPTIONS,\n        useValue: { providers: [{ provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] },\n        multi: true,\n    },\n    { provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS] },\n];\n/**\n * @deprecated Use the `platformBrowser` function instead from `@angular/platform-browser`.\n * In case you are not in a CLI app and rely on JIT compilation, you will also need to import `@angular/compiler`\n */\nconst platformBrowserDynamic = createPlatformFactory(platformBrowser, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\nexport { JitCompilerFactory, VERSION, platformBrowserDynamic };\n\n","/**\n * @license Angular v20.0.5\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵgetDOM as _getDOM, DOCUMENT, PlatformLocation } from '@angular/common';\nimport { MockPlatformLocation } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, APP_ID, ɵinternalProvideZoneChangeDetection as _internalProvideZoneChangeDetection, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, ɵChangeDetectionSchedulerImpl as _ChangeDetectionSchedulerImpl, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { platformBrowser, BrowserModule } from './browser.mjs';\nimport './dom_renderer.mjs';\n\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n    _doc;\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    insertRootElement(rootElId) {\n        this.removeAllRootElementsImpl();\n        const rootElement = _getDOM().getDefaultDocument().createElement('div');\n        rootElement.setAttribute('id', rootElId);\n        this._doc.body.appendChild(rootElement);\n    }\n    removeAllRootElements() {\n        // Check whether the `DOCUMENT` instance retrieved from DI contains\n        // the necessary function to complete the cleanup. In tests that don't\n        // interact with DOM, the `DOCUMENT` might be mocked and some functions\n        // might be missing. For such tests, DOM cleanup is not required and\n        // we skip the logic if there are missing functions.\n        if (typeof this._doc.querySelectorAll === 'function') {\n            this.removeAllRootElementsImpl();\n        }\n    }\n    removeAllRootElementsImpl() {\n        const oldRoots = this._doc.querySelectorAll('[id^=root]');\n        for (let i = 0; i < oldRoots.length; i++) {\n            _getDOM().remove(oldRoots[i]);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: DOMTestComponentRenderer, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: DOMTestComponentRenderer });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: DOMTestComponentRenderer, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Platform for testing\n *\n * @publicApi\n */\nconst platformBrowserTesting = createPlatformFactory(platformBrowser, 'browserTesting');\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserTestingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserTestingModule, exports: [BrowserModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserTestingModule, providers: [\n            { provide: APP_ID, useValue: 'a' },\n            _internalProvideZoneChangeDetection({}),\n            { provide: _ChangeDetectionScheduler, useExisting: _ChangeDetectionSchedulerImpl },\n            { provide: PlatformLocation, useClass: MockPlatformLocation },\n            { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n        ], imports: [BrowserModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: BrowserTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserModule],\n                    providers: [\n                        { provide: APP_ID, useValue: 'a' },\n                        _internalProvideZoneChangeDetection({}),\n                        { provide: _ChangeDetectionScheduler, useExisting: _ChangeDetectionSchedulerImpl },\n                        { provide: PlatformLocation, useClass: MockPlatformLocation },\n                        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ],\n                }]\n        }] });\n\nexport { BrowserTestingModule, platformBrowserTesting };\n\n","/**\n * @license Angular v20.0.5\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵnormalizeQueryParams as _normalizeQueryParams, LocationStrategy } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, inject, DOCUMENT } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlatformNavigation } from './platform_navigation.mjs';\nimport { ɵFakeNavigation as _FakeNavigation } from '@angular/core/testing';\nexport { ɵFakeNavigation } from '@angular/core/testing';\nimport { PlatformLocation, Location, LocationStrategy as LocationStrategy$1 } from './location.mjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nfunction parseUrl(urlStr, baseHref) {\n    const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n    let serverBase;\n    // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n    // an arbitrary base URL which can be removed afterward.\n    if (!verifyProtocol.test(urlStr)) {\n        serverBase = 'http://empty.com/';\n    }\n    let parsedUrl;\n    try {\n        parsedUrl = new URL(urlStr, serverBase);\n    }\n    catch (e) {\n        const result = urlParse.exec(serverBase || '' + urlStr);\n        if (!result) {\n            throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n        }\n        const hostSplit = result[4].split(':');\n        parsedUrl = {\n            protocol: result[1],\n            hostname: hostSplit[0],\n            port: hostSplit[1] || '',\n            pathname: result[5],\n            search: result[6],\n            hash: result[8],\n        };\n    }\n    if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n        parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n    }\n    return {\n        hostname: (!serverBase && parsedUrl.hostname) || '',\n        protocol: (!serverBase && parsedUrl.protocol) || '',\n        port: (!serverBase && parsedUrl.port) || '',\n        pathname: parsedUrl.pathname || '/',\n        search: parsedUrl.search || '',\n        hash: parsedUrl.hash || '',\n    };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nconst MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\nclass MockPlatformLocation {\n    baseHref = '';\n    hashUpdate = new Subject();\n    popStateSubject = new Subject();\n    urlChangeIndex = 0;\n    urlChanges = [{ hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null }];\n    constructor(config) {\n        if (config) {\n            this.baseHref = config.appBaseHref || '';\n            const parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n            this.urlChanges[0] = { ...parsedChanges };\n        }\n    }\n    get hostname() {\n        return this.urlChanges[this.urlChangeIndex].hostname;\n    }\n    get protocol() {\n        return this.urlChanges[this.urlChangeIndex].protocol;\n    }\n    get port() {\n        return this.urlChanges[this.urlChangeIndex].port;\n    }\n    get pathname() {\n        return this.urlChanges[this.urlChangeIndex].pathname;\n    }\n    get search() {\n        return this.urlChanges[this.urlChangeIndex].search;\n    }\n    get hash() {\n        return this.urlChanges[this.urlChangeIndex].hash;\n    }\n    get state() {\n        return this.urlChanges[this.urlChangeIndex].state;\n    }\n    getBaseHrefFromDOM() {\n        return this.baseHref;\n    }\n    onPopState(fn) {\n        const subscription = this.popStateSubject.subscribe(fn);\n        return () => subscription.unsubscribe();\n    }\n    onHashChange(fn) {\n        const subscription = this.hashUpdate.subscribe(fn);\n        return () => subscription.unsubscribe();\n    }\n    get href() {\n        let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n        url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n        return url;\n    }\n    get url() {\n        return `${this.pathname}${this.search}${this.hash}`;\n    }\n    parseChanges(state, url, baseHref = '') {\n        // When the `history.state` value is stored, it is always copied.\n        state = JSON.parse(JSON.stringify(state));\n        return { ...parseUrl(url, baseHref), state };\n    }\n    replaceState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        this.urlChanges[this.urlChangeIndex] = {\n            ...this.urlChanges[this.urlChangeIndex],\n            pathname,\n            search,\n            hash,\n            state: parsedState,\n        };\n    }\n    pushState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        if (this.urlChangeIndex > 0) {\n            this.urlChanges.splice(this.urlChangeIndex + 1);\n        }\n        this.urlChanges.push({\n            ...this.urlChanges[this.urlChangeIndex],\n            pathname,\n            search,\n            hash,\n            state: parsedState,\n        });\n        this.urlChangeIndex = this.urlChanges.length - 1;\n    }\n    forward() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex < this.urlChanges.length) {\n            this.urlChangeIndex++;\n        }\n        this.emitEvents(oldHash, oldUrl);\n    }\n    back() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex > 0) {\n            this.urlChangeIndex--;\n        }\n        this.emitEvents(oldHash, oldUrl);\n    }\n    historyGo(relativePosition = 0) {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        const nextPageIndex = this.urlChangeIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n            this.urlChangeIndex = nextPageIndex;\n        }\n        this.emitEvents(oldHash, oldUrl);\n    }\n    getState() {\n        return this.state;\n    }\n    /**\n     * Browsers are inconsistent in when they fire events and perform the state updates\n     * The most easiest thing to do in our mock is synchronous and that happens to match\n     * Firefox and Chrome, at least somewhat closely\n     *\n     * https://github.com/WICG/navigation-api#watching-for-navigations\n     * https://docs.google.com/document/d/1Pdve-DJ1JCGilj9Yqf5HxRJyBKSel5owgOvUJqTauwU/edit#heading=h.3ye4v71wsz94\n     * popstate is always sent before hashchange:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event#when_popstate_is_sent\n     */\n    emitEvents(oldHash, oldUrl) {\n        this.popStateSubject.next({\n            type: 'popstate',\n            state: this.getState(),\n            oldUrl,\n            newUrl: this.url,\n        });\n        if (oldHash !== this.hash) {\n            this.hashUpdate.next({\n                type: 'hashchange',\n                state: null,\n                oldUrl,\n                newUrl: this.url,\n            });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: MockPlatformLocation, deps: [{ token: MOCK_PLATFORM_LOCATION_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: MockPlatformLocation });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: MockPlatformLocation, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MOCK_PLATFORM_LOCATION_CONFIG]\n                }, {\n                    type: Optional\n                }] }] });\n/**\n * Mock implementation of URL state.\n */\nclass FakeNavigationPlatformLocation {\n    _platformNavigation;\n    constructor() {\n        const platformNavigation = inject(PlatformNavigation);\n        if (!(platformNavigation instanceof _FakeNavigation)) {\n            throw new Error('FakePlatformNavigation cannot be used without FakeNavigation. Use ' +\n                '`provideFakeNavigation` to have all these services provided together.');\n        }\n        this._platformNavigation = platformNavigation;\n    }\n    config = inject(MOCK_PLATFORM_LOCATION_CONFIG, { optional: true });\n    getBaseHrefFromDOM() {\n        return this.config?.appBaseHref ?? '';\n    }\n    onPopState(fn) {\n        this._platformNavigation.window.addEventListener('popstate', fn);\n        return () => this._platformNavigation.window.removeEventListener('popstate', fn);\n    }\n    onHashChange(fn) {\n        this._platformNavigation.window.addEventListener('hashchange', fn);\n        return () => this._platformNavigation.window.removeEventListener('hashchange', fn);\n    }\n    get href() {\n        return this._platformNavigation.currentEntry.url;\n    }\n    get protocol() {\n        return new URL(this._platformNavigation.currentEntry.url).protocol;\n    }\n    get hostname() {\n        return new URL(this._platformNavigation.currentEntry.url).hostname;\n    }\n    get port() {\n        return new URL(this._platformNavigation.currentEntry.url).port;\n    }\n    get pathname() {\n        return new URL(this._platformNavigation.currentEntry.url).pathname;\n    }\n    get search() {\n        return new URL(this._platformNavigation.currentEntry.url).search;\n    }\n    get hash() {\n        return new URL(this._platformNavigation.currentEntry.url).hash;\n    }\n    pushState(state, title, url) {\n        this._platformNavigation.pushState(state, title, url);\n    }\n    replaceState(state, title, url) {\n        this._platformNavigation.replaceState(state, title, url);\n    }\n    forward() {\n        this._platformNavigation.forward();\n    }\n    back() {\n        this._platformNavigation.back();\n    }\n    historyGo(relativePosition = 0) {\n        this._platformNavigation.go(relativePosition);\n    }\n    getState() {\n        return this._platformNavigation.currentEntry.getHistoryState();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: FakeNavigationPlatformLocation, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: FakeNavigationPlatformLocation });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: FakeNavigationPlatformLocation, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n\nconst FAKE_NAVIGATION = new InjectionToken('fakeNavigation', {\n    providedIn: 'root',\n    factory: () => {\n        const config = inject(MOCK_PLATFORM_LOCATION_CONFIG, { optional: true });\n        const baseFallback = 'http://_empty_/';\n        const startUrl = new URL(config?.startUrl || baseFallback, baseFallback);\n        // TODO(atscott): If we want to replace MockPlatformLocation with FakeNavigationPlatformLocation\n        // as the default in TestBed, we will likely need to use setSynchronousTraversalsForTesting(true);\n        return new _FakeNavigation(inject(DOCUMENT), startUrl.href);\n    },\n});\n/**\n * Return a provider for the `FakeNavigation` in place of the real Navigation API.\n */\nfunction provideFakePlatformNavigation() {\n    return [\n        {\n            provide: PlatformNavigation,\n            useFactory: () => inject(FAKE_NAVIGATION),\n        },\n        { provide: PlatformLocation, useClass: FakeNavigationPlatformLocation },\n    ];\n}\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\nclass SpyLocation {\n    urlChanges = [];\n    _history = [new LocationState('', '', null)];\n    _historyIndex = 0;\n    /** @internal */\n    _subject = new Subject();\n    /** @internal */\n    _basePath = '';\n    /** @internal */\n    _locationStrategy = null;\n    /** @internal */\n    _urlChangeListeners = [];\n    /** @internal */\n    _urlChangeSubscription = null;\n    /** @docs-private */\n    ngOnDestroy() {\n        this._urlChangeSubscription?.unsubscribe();\n        this._urlChangeListeners = [];\n    }\n    setInitialPath(url) {\n        this._history[this._historyIndex].path = url;\n    }\n    setBaseHref(url) {\n        this._basePath = url;\n    }\n    path() {\n        return this._history[this._historyIndex].path;\n    }\n    getState() {\n        return this._history[this._historyIndex].state;\n    }\n    isCurrentPathEqualTo(path, query = '') {\n        const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n        const currPath = this.path().endsWith('/')\n            ? this.path().substring(0, this.path().length - 1)\n            : this.path();\n        return currPath == givenPath + (query.length > 0 ? '?' + query : '');\n    }\n    simulateUrlPop(pathname) {\n        this._subject.next({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n    }\n    simulateHashChange(pathname) {\n        const path = this.prepareExternalUrl(pathname);\n        this.pushHistory(path, '', null);\n        this.urlChanges.push('hash: ' + pathname);\n        // the browser will automatically fire popstate event before each `hashchange` event, so we need\n        // to simulate it.\n        this._subject.next({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n        this._subject.next({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\n    }\n    prepareExternalUrl(url) {\n        if (url.length > 0 && !url.startsWith('/')) {\n            url = '/' + url;\n        }\n        return this._basePath + url;\n    }\n    go(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        this.pushHistory(path, query, state);\n        const locationState = this._history[this._historyIndex - 1];\n        if (locationState.path == path && locationState.query == query) {\n            return;\n        }\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.urlChanges.push(url);\n        this._notifyUrlChangeListeners(path + _normalizeQueryParams(query), state);\n    }\n    replaceState(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        const history = this._history[this._historyIndex];\n        history.state = state;\n        if (history.path == path && history.query == query) {\n            return;\n        }\n        history.path = path;\n        history.query = query;\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.urlChanges.push('replace: ' + url);\n        this._notifyUrlChangeListeners(path + _normalizeQueryParams(query), state);\n    }\n    forward() {\n        if (this._historyIndex < this._history.length - 1) {\n            this._historyIndex++;\n            this._subject.next({\n                'url': this.path(),\n                'state': this.getState(),\n                'pop': true,\n                'type': 'popstate',\n            });\n        }\n    }\n    back() {\n        if (this._historyIndex > 0) {\n            this._historyIndex--;\n            this._subject.next({\n                'url': this.path(),\n                'state': this.getState(),\n                'pop': true,\n                'type': 'popstate',\n            });\n        }\n    }\n    historyGo(relativePosition = 0) {\n        const nextPageIndex = this._historyIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n            this._historyIndex = nextPageIndex;\n            this._subject.next({\n                'url': this.path(),\n                'state': this.getState(),\n                'pop': true,\n                'type': 'popstate',\n            });\n        }\n    }\n    onUrlChange(fn) {\n        this._urlChangeListeners.push(fn);\n        this._urlChangeSubscription ??= this.subscribe((v) => {\n            this._notifyUrlChangeListeners(v.url, v.state);\n        });\n        return () => {\n            const fnIndex = this._urlChangeListeners.indexOf(fn);\n            this._urlChangeListeners.splice(fnIndex, 1);\n            if (this._urlChangeListeners.length === 0) {\n                this._urlChangeSubscription?.unsubscribe();\n                this._urlChangeSubscription = null;\n            }\n        };\n    }\n    /** @internal */\n    _notifyUrlChangeListeners(url = '', state) {\n        this._urlChangeListeners.forEach((fn) => fn(url, state));\n    }\n    subscribe(onNext, onThrow, onReturn) {\n        return this._subject.subscribe({\n            next: onNext,\n            error: onThrow ?? undefined,\n            complete: onReturn ?? undefined,\n        });\n    }\n    normalize(url) {\n        return null;\n    }\n    pushHistory(path, query, state) {\n        if (this._historyIndex > 0) {\n            this._history.splice(this._historyIndex + 1);\n        }\n        this._history.push(new LocationState(path, query, state));\n        this._historyIndex = this._history.length - 1;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: SpyLocation, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: SpyLocation });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: SpyLocation, decorators: [{\n            type: Injectable\n        }] });\nclass LocationState {\n    path;\n    query;\n    state;\n    constructor(path, query, state) {\n        this.path = path;\n        this.query = query;\n        this.state = state;\n    }\n}\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\nclass MockLocationStrategy extends LocationStrategy {\n    internalBaseHref = '/';\n    internalPath = '/';\n    internalTitle = '';\n    urlChanges = [];\n    /** @internal */\n    _subject = new Subject();\n    stateChanges = [];\n    constructor() {\n        super();\n    }\n    simulatePopState(url) {\n        this.internalPath = url;\n        this._subject.next(new _MockPopStateEvent(this.path()));\n    }\n    path(includeHash = false) {\n        return this.internalPath;\n    }\n    prepareExternalUrl(internal) {\n        if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n            return this.internalBaseHref + internal.substring(1);\n        }\n        return this.internalBaseHref + internal;\n    }\n    pushState(ctx, title, path, query) {\n        // Add state change to changes array\n        this.stateChanges.push(ctx);\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push(externalUrl);\n    }\n    replaceState(ctx, title, path, query) {\n        // Reset the last index of stateChanges to the ctx (state) object\n        this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? '?' + query : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push('replace: ' + externalUrl);\n    }\n    onPopState(fn) {\n        this._subject.subscribe({ next: fn });\n    }\n    getBaseHref() {\n        return this.internalBaseHref;\n    }\n    back() {\n        if (this.urlChanges.length > 0) {\n            this.urlChanges.pop();\n            this.stateChanges.pop();\n            const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n            this.simulatePopState(nextUrl);\n        }\n    }\n    forward() {\n        throw 'not implemented';\n    }\n    getState() {\n        return this.stateChanges[(this.stateChanges.length || 1) - 1];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: MockLocationStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: MockLocationStrategy });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.5\", ngImport: i0, type: MockLocationStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\nclass _MockPopStateEvent {\n    newUrl;\n    pop = true;\n    type = 'popstate';\n    constructor(newUrl) {\n        this.newUrl = newUrl;\n    }\n}\n\n/**\n * Returns mock providers for the `Location` and `LocationStrategy` classes.\n * The mocks are helpful in tests to fire simulated location events.\n *\n * @publicApi\n */\nfunction provideLocationMocks() {\n    return [\n        { provide: Location, useClass: SpyLocation },\n        { provide: LocationStrategy$1, useClass: MockLocationStrategy },\n    ];\n}\n\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation, provideLocationMocks, provideFakePlatformNavigation as ɵprovideFakePlatformNavigation };\n\n"],"mappings":"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","names":["global","self","delegate","prop","_global","event","patchOptions","returnTarget","window","handle","handleId","isPeriodic","isRefreshable","isBrowser","isMix","zoneSymbolEventNames","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","internalWindow","Zone","name","XMLHttpRequest","loadTasks","ObjectGetOwnPropertyDescriptor","ObjectDefineProperty","__symbol__","value","Zone","global","ProxyZoneSpec","isNode","originalClockFn","FakeAsyncTestZoneSpec","proxyZoneSpec","self","__symbol__","AsyncTestZoneSpec","current","args","flush","error"],"x_google_ignoreList":[0,1,3,4,5,6]}